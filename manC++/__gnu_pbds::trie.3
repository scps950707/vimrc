.TH "__gnu_pbds::trie" 3 "Sun Oct 10 2010" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::trie \- 
.PP
A concrete basic trie-based associative container.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBbasic_tree< Key, Mapped, Tag, detail::trie_traits< Key, Mapped, E_Access_Traits, Node_Update, Tag, Allocator >::node_update, __gnu_cxx::typelist::create2< E_Access_Traits, detail::trie_traits< Key, Mapped, E_Access_Traits, Node_Update, Tag, Allocator > >::type, Allocator >\fP.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Allocator \fBallocator_type\fP"
.br
.ti -1c
.RI "typedef base_type::const_iterator \fBconst_iterator\fP"
.br
.ti -1c
.RI "typedef key_rebind::const_pointer \fBconst_key_pointer\fP"
.br
.ti -1c
.RI "typedef key_rebind::const_reference \fBconst_key_reference\fP"
.br
.ti -1c
.RI "typedef mapped_rebind::const_pointer \fBconst_mapped_pointer\fP"
.br
.ti -1c
.RI "typedef mapped_rebind::const_reference \fBconst_mapped_reference\fP"
.br
.ti -1c
.RI "typedef base_type::const_point_iterator \fBconst_point_iterator\fP"
.br
.ti -1c
.RI "typedef value_rebind::const_pointer \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef value_rebind::const_reference \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef Tag \fBcontainer_category\fP"
.br
.ti -1c
.RI "typedef allocator_type::difference_type \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef E_Access_Traits \fBe_access_traits\fP"
.br
.ti -1c
.RI "typedef base_type::iterator \fBiterator\fP"
.br
.ti -1c
.RI "typedef key_rebind::pointer \fBkey_pointer\fP"
.br
.ti -1c
.RI "typedef allocator_type::template rebind< key_type >::other \fBkey_rebind\fP"
.br
.ti -1c
.RI "typedef key_rebind::reference \fBkey_reference\fP"
.br
.ti -1c
.RI "typedef allocator_type::template rebind< Key >::other::value_type \fBkey_type\fP"
.br
.ti -1c
.RI "typedef mapped_rebind::pointer \fBmapped_pointer\fP"
.br
.ti -1c
.RI "typedef allocator_type::template rebind< mapped_type >::other \fBmapped_rebind\fP"
.br
.ti -1c
.RI "typedef mapped_rebind::reference \fBmapped_reference\fP"
.br
.ti -1c
.RI "typedef Mapped \fBmapped_type\fP"
.br
.ti -1c
.RI "typedef detail::trie_traits< Key, Mapped, E_Access_Traits, Node_Update, Tag, Allocator >::node_update \fBnode_update\fP"
.br
.ti -1c
.RI "typedef base_type::point_iterator \fBpoint_iterator\fP"
.br
.ti -1c
.RI "typedef value_rebind::pointer \fBpointer\fP"
.br
.ti -1c
.RI "typedef value_rebind::reference \fBreference\fP"
.br
.ti -1c
.RI "typedef allocator_type::size_type \fBsize_type\fP"
.br
.ti -1c
.RI "typedef allocator_type::template rebind< value_type >::other \fBvalue_rebind\fP"
.br
.ti -1c
.RI "typedef base_type::value_type \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBtrie\fP (const e_access_traits &t)"
.br
.ti -1c
.RI "template<typename It > \fBtrie\fP (It first, It last, const e_access_traits &t)"
.br
.ti -1c
.RI "\fBtrie\fP (const \fBtrie\fP &other)"
.br
.ti -1c
.RI "template<typename It > \fBtrie\fP (It first, It last)"
.br
.ti -1c
.RI "\fBtrie\fP & \fBoperator=\fP (const \fBtrie\fP &other)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBtrie\fP &other)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename Key, typename Mapped, typename E_Access_Traits = typename detail::default_trie_e_access_traits<Key>::type, typename Tag = pat_trie_tag, template< typename Const_Node_Iterator, typename Node_Iterator, typename E_Access_Traits_, typename Allocator_ > class Node_Update = null_trie_node_update, typename Allocator = std::allocator<char>> class __gnu_pbds::trie< Key, Mapped, E_Access_Traits, Tag, Node_Update, Allocator >"
A concrete basic trie-based associative container. 
.PP
Definition at line 585 of file assoc_container.hpp.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
