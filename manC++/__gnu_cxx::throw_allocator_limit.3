.TH "__gnu_cxx::throw_allocator_limit" 3 "Sun Oct 10 2010" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::throw_allocator_limit \- 
.PP
Allocator throwing via limit condition.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBthrow_allocator_base< _Tp, limit_condition >\fP.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef const value_type * \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef const value_type & \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef value_type * \fBpointer\fP"
.br
.ti -1c
.RI "typedef value_type & \fBreference\fP"
.br
.ti -1c
.RI "typedef size_t \fBsize_type\fP"
.br
.ti -1c
.RI "typedef _Tp \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBthrow_allocator_limit\fP (const \fBthrow_allocator_limit\fP &)  throw ()"
.br
.ti -1c
.RI "template<typename _Tp1 > \fBthrow_allocator_limit\fP (const \fBthrow_allocator_limit\fP< _Tp1 > &)  throw ()"
.br
.ti -1c
.RI "pointer \fBallocate\fP (size_type __n, \fBstd::allocator\fP< void >::const_pointer hint=0)"
.br
.ti -1c
.RI "void \fBcheck_allocated\fP (pointer __p, size_type __n)"
.br
.ti -1c
.RI "void \fBcheck_allocated\fP (void *p, size_t size)"
.br
.ti -1c
.RI "void \fBcheck_allocated\fP (size_type __n)"
.br
.ti -1c
.RI "void \fBcheck_allocated\fP (size_t label)"
.br
.ti -1c
.RI "void \fBconstruct\fP (pointer __p, _Args &&...__args)"
.br
.ti -1c
.RI "void \fBconstruct\fP (pointer __p, const value_type &val)"
.br
.ti -1c
.RI "void \fBdeallocate\fP (pointer __p, size_type __n)"
.br
.ti -1c
.RI "void \fBdestroy\fP (pointer __p)"
.br
.ti -1c
.RI "void \fBerase\fP (void *p, size_t size)"
.br
.ti -1c
.RI "void \fBinsert\fP (void *p, size_t size)"
.br
.ti -1c
.RI "size_type \fBmax_size\fP () const  throw ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static size_t & \fBcount\fP ()"
.br
.ti -1c
.RI "static size_t \fBget_label\fP ()"
.br
.ti -1c
.RI "static size_t & \fBlimit\fP ()"
.br
.ti -1c
.RI "static void \fBset_label\fP (size_t l)"
.br
.ti -1c
.RI "static void \fBset_limit\fP (const size_t __l)"
.br
.ti -1c
.RI "static void \fBthrow_conditionally\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp> struct __gnu_cxx::throw_allocator_limit< _Tp >"
Allocator throwing via limit condition. 
.PP
Definition at line 682 of file throw_allocator.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
