.TH "__gnu_parallel::_Multiplies" 3 "Sun Oct 10 2010" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_parallel::_Multiplies \- 
.PP
Similar to \fBstd::multiplies\fP, but allows two different types.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBbinary_function< _Tp1, _Tp2, _Result >\fP.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Tp1 \fBfirst_argument_type\fP"
.br
.ti -1c
.RI "typedef _Result \fBresult_type\fP"
.br
.ti -1c
.RI "typedef _Tp2 \fBsecond_argument_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "_Result \fBoperator()\fP (const _Tp1 &__x, const _Tp2 &__y) const "
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp1, typename _Tp2, typename _Result = __typeof__(*static_cast<_Tp1*>(NULL)			* *static_cast<_Tp2*>(NULL))> struct __gnu_parallel::_Multiplies< _Tp1, _Tp2, _Result >"
Similar to \fBstd::multiplies\fP, but allows two different types. 
.PP
Definition at line 288 of file parallel/base.h.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef _Tp1  \fBstd::binary_function\fP< _Tp1 , _Tp2 , _Result >::\fBfirst_argument_type\fP\fC [inherited]\fP"
.PP
the type of the first argument /// (no surprises here) 
.PP
Definition at line 114 of file stl_function.h.
.SS "typedef _Result \fBstd::binary_function\fP< _Tp1 , _Tp2 , _Result >::\fBresult_type\fP\fC [inherited]\fP"
.PP
type of the return type 
.PP
Definition at line 118 of file stl_function.h.
.SS "typedef _Tp2  \fBstd::binary_function\fP< _Tp1 , _Tp2 , _Result >::\fBsecond_argument_type\fP\fC [inherited]\fP"
.PP
the type of the second argument 
.PP
Definition at line 117 of file stl_function.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
