.TH "std::student_t_distribution" 3 "Sun Oct 10 2010" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::student_t_distribution \- 
.PP
A \fBstudent_t_distribution\fP random number distribution.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBparam_type\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _RealType \fBresult_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBstudent_t_distribution\fP (_RealType __n=_RealType(1))"
.br
.ti -1c
.RI "\fBstudent_t_distribution\fP (const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "\fBresult_type\fP \fBmax\fP () const "
.br
.ti -1c
.RI "\fBresult_type\fP \fBmin\fP () const "
.br
.ti -1c
.RI "_RealType \fBn\fP () const "
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng)"
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "void \fBparam\fP (const \fBparam_type\fP &__param)"
.br
.ti -1c
.RI "\fBparam_type\fP \fBparam\fP () const "
.br
.ti -1c
.RI "void \fBreset\fP ()"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<typename _RealType1 , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, _Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &, const \fBstd::student_t_distribution\fP< _RealType1 > &)"
.br
.ti -1c
.RI "template<typename _RealType1 > bool \fBoperator==\fP (const \fBstd::student_t_distribution\fP< _RealType1 > &__d1, const \fBstd::student_t_distribution\fP< _RealType1 > &__d2)"
.br
.ti -1c
.RI "template<typename _RealType1 , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, _Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &, \fBstd::student_t_distribution\fP< _RealType1 > &)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _RealType = double> class std::student_t_distribution< _RealType >"
A \fBstudent_t_distribution\fP random number distribution. 

The formula for the normal probability mass function is: \[ p(x|n) = \frac{1}{\sqrt(n\pi)} \frac{\Gamma((n+1)/2)}{\Gamma(n/2)} (1 + \frac{x^2}{n}) ^{-(n+1)/2} \] 
.PP
Definition at line 3061 of file random.h.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _RealType = double> typedef _RealType \fBstd::student_t_distribution\fP< _RealType >::\fBresult_type\fP"The type of the range of the distribution. 
.PP
Definition at line 3068 of file random.h.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _RealType = double> \fBresult_type\fP \fBstd::student_t_distribution\fP< _RealType >::max () const\fC [inline]\fP"
.PP
Returns the least upper bound value of the distribution. 
.PP
Definition at line 3144 of file random.h.
.SS "template<typename _RealType = double> \fBresult_type\fP \fBstd::student_t_distribution\fP< _RealType >::min () const\fC [inline]\fP"
.PP
Returns the greatest lower bound value of the distribution. 
.PP
Definition at line 3137 of file random.h.
.SS "template<typename _RealType = double> template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBstd::student_t_distribution\fP< _RealType >::operator() (_UniformRandomNumberGenerator & __urng)\fC [inline]\fP"
.PP
Generating functions. 
.PP
Definition at line 3152 of file random.h.
.PP
References std::sqrt().
.SS "template<typename _RealType = double> \fBparam_type\fP \fBstd::student_t_distribution\fP< _RealType >::param () const\fC [inline]\fP"
.PP
Returns the parameter set of the distribution. 
.PP
Definition at line 3122 of file random.h.
.SS "template<typename _RealType = double> void \fBstd::student_t_distribution\fP< _RealType >::param (const \fBparam_type\fP & __param)\fC [inline]\fP"
.PP
Sets the parameter set of the distribution. \fBParameters:\fP
.RS 4
\fI__param\fP The new parameter set of the distribution. 
.RE
.PP

.PP
Definition at line 3130 of file random.h.
.SS "template<typename _RealType = double> void \fBstd::student_t_distribution\fP< _RealType >::reset ()\fC [inline]\fP"
.PP
Resets the distribution state. 
.PP
Definition at line 3105 of file random.h.
.PP
References std::gamma_distribution< _RealType >::reset(), and std::normal_distribution< _RealType >::reset().
.SH "Friends And Related Function Documentation"
.PP 
.SS "template<typename _RealType = double> template<typename _RealType1 , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP<_CharT, _Traits>& operator<< (\fBstd::basic_ostream\fP< _CharT, _Traits > &, const \fBstd::student_t_distribution\fP< _RealType1 > &)\fC [friend]\fP"
.PP
Inserts a student_t_distribution random number distribution \fC__x\fP into the output stream \fC__os\fP. \fBParameters:\fP
.RS 4
\fI__os\fP An output stream. 
.br
\fI__x\fP A student_t_distribution random number distribution.
.RE
.PP
\fBReturns:\fP
.RS 4
The output stream with the state of \fC__x\fP inserted or in an error state. 
.RE
.PP

.SS "template<typename _RealType = double> template<typename _RealType1 > bool operator== (const \fBstd::student_t_distribution\fP< _RealType1 > & __d1, const \fBstd::student_t_distribution\fP< _RealType1 > & __d2)\fC [friend]\fP"
.PP
Return true if two Student t distributions have the same parameters and the sequences that would be generated are equal. 
.PP
Definition at line 3174 of file random.h.
.SS "template<typename _RealType = double> template<typename _RealType1 , typename _CharT , typename _Traits > \fBstd::basic_istream\fP<_CharT, _Traits>& operator>> (\fBstd::basic_istream\fP< _CharT, _Traits > &, \fBstd::student_t_distribution\fP< _RealType1 > &)\fC [friend]\fP"
.PP
Extracts a student_t_distribution random number distribution \fC__x\fP from the input stream \fC__is\fP. \fBParameters:\fP
.RS 4
\fI__is\fP An input stream. 
.br
\fI__x\fP A student_t_distribution random number generator engine.
.RE
.PP
\fBReturns:\fP
.RS 4
The input stream with \fC__x\fP extracted or in an error state. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
