.TH "std::reverse_iterator" 3 "Sun Oct 10 2010" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::reverse_iterator \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBiterator< iterator_traits< _Iterator >::iterator_category, iterator_traits< _Iterator >::value_type, iterator_traits< _Iterator >::difference_type, iterator_traits< _Iterator >::pointer, iterator_traits< _Iterator >::reference >\fP.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef __traits_type::difference_type \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef \fBiterator_traits\fP< _Iterator >::\fBiterator_category\fP \fBiterator_category\fP"
.br
.ti -1c
.RI "typedef _Iterator \fBiterator_type\fP"
.br
.ti -1c
.RI "typedef __traits_type::pointer \fBpointer\fP"
.br
.ti -1c
.RI "typedef __traits_type::reference \fBreference\fP"
.br
.ti -1c
.RI "typedef \fBiterator_traits\fP< _Iterator >::\fBvalue_type\fP \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBreverse_iterator\fP ()"
.br
.ti -1c
.RI "\fBreverse_iterator\fP (iterator_type __x)"
.br
.ti -1c
.RI "template<typename _Iter > \fBreverse_iterator\fP (const \fBreverse_iterator\fP< _Iter > &__x)"
.br
.ti -1c
.RI "\fBreverse_iterator\fP (const \fBreverse_iterator\fP &__x)"
.br
.ti -1c
.RI "iterator_type \fBbase\fP () const "
.br
.ti -1c
.RI "\fBreference\fP \fBoperator*\fP () const "
.br
.ti -1c
.RI "\fBreverse_iterator\fP \fBoperator+\fP (\fBdifference_type\fP __n) const "
.br
.ti -1c
.RI "\fBreverse_iterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBreverse_iterator\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBreverse_iterator\fP & \fBoperator+=\fP (\fBdifference_type\fP __n)"
.br
.ti -1c
.RI "\fBreverse_iterator\fP \fBoperator-\fP (\fBdifference_type\fP __n) const "
.br
.ti -1c
.RI "\fBreverse_iterator\fP & \fBoperator--\fP ()"
.br
.ti -1c
.RI "\fBreverse_iterator\fP \fBoperator--\fP (int)"
.br
.ti -1c
.RI "\fBreverse_iterator\fP & \fBoperator-=\fP (\fBdifference_type\fP __n)"
.br
.ti -1c
.RI "\fBpointer\fP \fBoperator->\fP () const "
.br
.ti -1c
.RI "\fBreference\fP \fBoperator[]\fP (\fBdifference_type\fP __n) const "
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "typedef \fBiterator_traits\fP< _Iterator > \fB__traits_type\fP"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "_Iterator \fBcurrent\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Iterator> class std::reverse_iterator< _Iterator >"
Bidirectional and random access iterators have corresponding reverse iterator adaptors that iterate through the data structure in the opposite direction. They have the same signatures as the corresponding iterators. The fundamental relation between a reverse iterator and its corresponding iterator \fCi\fP is established by the identity: 
.PP
.nf
      &*(reverse_iterator(i)) == &*(i - 1)

.fi
.PP
.PP
\fIThis mapping is dictated by the fact that while there is always a pointer past the end of an array, there might not be a valid pointer before the beginning of an array.\fP [24.4.1]/1,2
.PP
Reverse iterators can be tricky and surprising at first. Their semantics make sense, however, and the trickiness is a side effect of the requirement that the iterators must be safe. 
.PP
Definition at line 95 of file stl_iterator.h.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _Iterator> typedef __traits_type::difference_type \fBstd::reverse_iterator\fP< _Iterator >::\fBdifference_type\fP"
.PP
Distance between iterators is represented as this type. 
.PP
Reimplemented from \fBstd::iterator< iterator_traits< _Iterator >::iterator_category, iterator_traits< _Iterator >::value_type, iterator_traits< _Iterator >::difference_type, iterator_traits< _Iterator >::pointer, iterator_traits< _Iterator >::reference >\fP.
.PP
Definition at line 109 of file stl_iterator.h.
.SS "typedef \fBiterator_traits\fP< _Iterator >::\fBiterator_category\fP  \fBstd::iterator\fP< \fBiterator_traits\fP< _Iterator >::\fBiterator_category\fP , \fBiterator_traits\fP< _Iterator >::\fBvalue_type\fP , \fBiterator_traits\fP< _Iterator >::\fBdifference_type\fP , \fBiterator_traits\fP< _Iterator >::\fBpointer\fP , \fBiterator_traits\fP< _Iterator >::\fBreference\fP  >::\fBiterator_category\fP\fC [inherited]\fP"
.PP
One of the \fBtag types\fP. 
.PP
Definition at line 117 of file stl_iterator_base_types.h.
.SS "template<typename _Iterator> typedef __traits_type::pointer \fBstd::reverse_iterator\fP< _Iterator >::\fBpointer\fP"
.PP
This type represents a pointer-to-value_type. 
.PP
Reimplemented from \fBstd::iterator< iterator_traits< _Iterator >::iterator_category, iterator_traits< _Iterator >::value_type, iterator_traits< _Iterator >::difference_type, iterator_traits< _Iterator >::pointer, iterator_traits< _Iterator >::reference >\fP.
.PP
Definition at line 110 of file stl_iterator.h.
.SS "template<typename _Iterator> typedef __traits_type::reference \fBstd::reverse_iterator\fP< _Iterator >::\fBreference\fP"
.PP
This type represents a reference-to-value_type. 
.PP
Reimplemented from \fBstd::iterator< iterator_traits< _Iterator >::iterator_category, iterator_traits< _Iterator >::value_type, iterator_traits< _Iterator >::difference_type, iterator_traits< _Iterator >::pointer, iterator_traits< _Iterator >::reference >\fP.
.PP
Definition at line 111 of file stl_iterator.h.
.SS "typedef \fBiterator_traits\fP< _Iterator >::\fBvalue_type\fP  \fBstd::iterator\fP< \fBiterator_traits\fP< _Iterator >::\fBiterator_category\fP , \fBiterator_traits\fP< _Iterator >::\fBvalue_type\fP , \fBiterator_traits\fP< _Iterator >::\fBdifference_type\fP , \fBiterator_traits\fP< _Iterator >::\fBpointer\fP , \fBiterator_traits\fP< _Iterator >::\fBreference\fP  >::\fBvalue_type\fP\fC [inherited]\fP"
.PP
The type 'pointed to' by the iterator. 
.PP
Definition at line 119 of file stl_iterator_base_types.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _Iterator> \fBstd::reverse_iterator\fP< _Iterator >::\fBreverse_iterator\fP ()\fC [inline]\fP"The default constructor default-initializes member \fCcurrent\fP. If it is a pointer, that means it is zero-initialized. 
.PP
Definition at line 119 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBstd::reverse_iterator\fP< _Iterator >::\fBreverse_iterator\fP (iterator_type __x)\fC [inline, explicit]\fP"This iterator will move in the opposite direction that \fCx\fP does. 
.PP
Definition at line 125 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBstd::reverse_iterator\fP< _Iterator >::\fBreverse_iterator\fP (const \fBreverse_iterator\fP< _Iterator > & __x)\fC [inline]\fP"The copy constructor is normal. 
.PP
Definition at line 130 of file stl_iterator.h.
.SS "template<typename _Iterator> template<typename _Iter > \fBstd::reverse_iterator\fP< _Iterator >::\fBreverse_iterator\fP (const \fBreverse_iterator\fP< _Iter > & __x)\fC [inline]\fP"A \fBreverse_iterator\fP across other types can be copied in the normal fashion. 
.PP
Definition at line 138 of file stl_iterator.h.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _Iterator> iterator_type \fBstd::reverse_iterator\fP< _Iterator >::base () const\fC [inline]\fP"\fBReturns:\fP
.RS 4
\fCcurrent\fP, the iterator used for underlying work. 
.RE
.PP

.PP
Definition at line 145 of file stl_iterator.h.
.PP
Referenced by std::operator==().
.SS "template<typename _Iterator> \fBreference\fP \fBstd::reverse_iterator\fP< _Iterator >::operator* () const\fC [inline]\fP"\fBReturns:\fP
.RS 4
TODO
.RE
.PP
\fBTodo\fP
.RS 4
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.PP
Definition at line 154 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBreverse_iterator\fP \fBstd::reverse_iterator\fP< _Iterator >::operator+ (\fBdifference_type\fP __n) const\fC [inline]\fP"\fBReturns:\fP
.RS 4
TODO
.RE
.PP
\fBTodo\fP
.RS 4
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.PP
Definition at line 225 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBreverse_iterator\fP& \fBstd::reverse_iterator\fP< _Iterator >::operator++ ()\fC [inline]\fP"\fBReturns:\fP
.RS 4
TODO
.RE
.PP
\fBTodo\fP
.RS 4
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.PP
Definition at line 175 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBreverse_iterator\fP \fBstd::reverse_iterator\fP< _Iterator >::operator++ (int)\fC [inline]\fP"\fBReturns:\fP
.RS 4
TODO
.RE
.PP
\fBTodo\fP
.RS 4
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.PP
Definition at line 187 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBreverse_iterator\fP& \fBstd::reverse_iterator\fP< _Iterator >::operator+= (\fBdifference_type\fP __n)\fC [inline]\fP"\fBReturns:\fP
.RS 4
TODO
.RE
.PP
\fBTodo\fP
.RS 4
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.PP
Definition at line 234 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBreverse_iterator\fP \fBstd::reverse_iterator\fP< _Iterator >::operator- (\fBdifference_type\fP __n) const\fC [inline]\fP"\fBReturns:\fP
.RS 4
TODO
.RE
.PP
\fBTodo\fP
.RS 4
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.PP
Definition at line 246 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBreverse_iterator\fP \fBstd::reverse_iterator\fP< _Iterator >::operator-- (int)\fC [inline]\fP"\fBReturns:\fP
.RS 4
TODO
.RE
.PP
\fBTodo\fP
.RS 4
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.PP
Definition at line 212 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBreverse_iterator\fP& \fBstd::reverse_iterator\fP< _Iterator >::operator-- ()\fC [inline]\fP"\fBReturns:\fP
.RS 4
TODO
.RE
.PP
\fBTodo\fP
.RS 4
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.PP
Definition at line 200 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBreverse_iterator\fP& \fBstd::reverse_iterator\fP< _Iterator >::operator-= (\fBdifference_type\fP __n)\fC [inline]\fP"\fBReturns:\fP
.RS 4
TODO
.RE
.PP
\fBTodo\fP
.RS 4
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.PP
Definition at line 255 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBpointer\fP \fBstd::reverse_iterator\fP< _Iterator >::operator-> () const\fC [inline]\fP"\fBReturns:\fP
.RS 4
TODO
.RE
.PP
\fBTodo\fP
.RS 4
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.PP
Definition at line 166 of file stl_iterator.h.
.SS "template<typename _Iterator> \fBreference\fP \fBstd::reverse_iterator\fP< _Iterator >::operator[] (\fBdifference_type\fP __n) const\fC [inline]\fP"\fBReturns:\fP
.RS 4
TODO
.RE
.PP
\fBTodo\fP
.RS 4
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.PP
Definition at line 267 of file stl_iterator.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
