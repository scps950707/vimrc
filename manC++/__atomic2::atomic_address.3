.TH "__atomic2::atomic_address" 3 "Sun Oct 10 2010" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__atomic2::atomic_address \- 
.PP
29.4.2, address types  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBatomic_address\fP (void *__v)"
.br
.ti -1c
.RI "\fBatomic_address\fP (const \fBatomic_address\fP &)"
.br
.ti -1c
.RI "bool \fBcompare_exchange_strong\fP (void *&__v1, void *__v2, memory_order __m1, memory_order __m2)"
.br
.ti -1c
.RI "bool \fBcompare_exchange_strong\fP (void *&__v1, void *__v2, memory_order __m=memory_order_seq_cst)"
.br
.ti -1c
.RI "bool \fBcompare_exchange_weak\fP (void *&__v1, void *__v2, memory_order __m1, memory_order __m2)"
.br
.ti -1c
.RI "bool \fBcompare_exchange_weak\fP (void *&__v1, void *__v2, memory_order __m=memory_order_seq_cst)"
.br
.ti -1c
.RI "void * \fBexchange\fP (void *__v, memory_order __m=memory_order_seq_cst)"
.br
.ti -1c
.RI "void * \fBfetch_add\fP (ptrdiff_t __d, memory_order __m=memory_order_seq_cst)"
.br
.ti -1c
.RI "void * \fBfetch_sub\fP (ptrdiff_t __d, memory_order __m=memory_order_seq_cst)"
.br
.ti -1c
.RI "bool \fBis_lock_free\fP () const "
.br
.ti -1c
.RI "void * \fBload\fP (memory_order __m=memory_order_seq_cst) const "
.br
.ti -1c
.RI "\fBoperator void *\fP () const "
.br
.ti -1c
.RI "void * \fBoperator+=\fP (ptrdiff_t __d)"
.br
.ti -1c
.RI "void * \fBoperator-=\fP (ptrdiff_t __d)"
.br
.ti -1c
.RI "\fBatomic_address\fP & \fBoperator=\fP (const \fBatomic_address\fP &) volatile"
.br
.ti -1c
.RI "void * \fBoperator=\fP (void *__v)"
.br
.ti -1c
.RI "void \fBstore\fP (void *__v, memory_order __m=memory_order_seq_cst)"
.br
.in -1c
.SH "Detailed Description"
.PP 
29.4.2, address types 
.PP
Definition at line 81 of file atomic_2.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
