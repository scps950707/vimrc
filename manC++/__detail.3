.TH "std::__detail" 3 "Sun Oct 10 2010" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::__detail \- 
.PP
Implementation details not part of the namespace std interface.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "template<class _Iterator > \fBstd::iterator_traits\fP< _Iterator >::difference_type \fB__distance_fw\fP (_Iterator __first, _Iterator __last, \fBstd::input_iterator_tag\fP)"
.br
.ti -1c
.RI "template<class _Iterator > \fBstd::iterator_traits\fP< _Iterator >::difference_type \fB__distance_fw\fP (_Iterator __first, _Iterator __last, \fBstd::forward_iterator_tag\fP)"
.br
.ti -1c
.RI "template<class _Iterator > \fBstd::iterator_traits\fP< _Iterator >::difference_type \fB__distance_fw\fP (_Iterator __first, _Iterator __last)"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _OutputIterator , typename _UnaryOperation > _OutputIterator \fB__transform\fP (_InputIterator __first, _InputIterator __last, _OutputIterator __result, _UnaryOperation __unary_op)"
.br
.ti -1c
.RI "template<typename _Value , bool __cache> bool \fBoperator!=\fP (const _Node_iterator_base< _Value, __cache > &__x, const _Node_iterator_base< _Value, __cache > &__y)"
.br
.ti -1c
.RI "template<typename _Value , bool __cache> bool \fBoperator!=\fP (const _Hashtable_iterator_base< _Value, __cache > &__x, const _Hashtable_iterator_base< _Value, __cache > &__y)"
.br
.ti -1c
.RI "template<typename _Value , bool __cache> bool \fBoperator==\fP (const _Node_iterator_base< _Value, __cache > &__x, const _Node_iterator_base< _Value, __cache > &__y)"
.br
.ti -1c
.RI "template<typename _Value , bool __cache> bool \fBoperator==\fP (const _Hashtable_iterator_base< _Value, __cache > &__x, const _Hashtable_iterator_base< _Value, __cache > &__y)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const unsigned long \fB__prime_list\fP []"
.br
.in -1c
.SH "Detailed Description"
.PP 
Implementation details not part of the namespace std interface. 
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
