.TH "__gnu_cxx::recursive_init_error" 3 "Sun Oct 10 2010" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::recursive_init_error \- 
.PP
Exception thrown by __cxa_guard_acquire.
.PP
6.7[stmt.dcl]/4: If control re-enters the declaration (recursively) while the object is being initialized, the behavior is undefined.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::exception\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual const char * \fBwhat\fP () const   throw ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Exception thrown by __cxa_guard_acquire.
.PP
6.7[stmt.dcl]/4: If control re-enters the declaration (recursively) while the object is being initialized, the behavior is undefined. 

Since we already have a library function to handle locking, we might as well check for this situation and throw an exception. We use the second byte of the guard variable to remember that we're in the middle of an initialization. 
.PP
Definition at line 620 of file cxxabi.h.
.SH "Member Function Documentation"
.PP 
.SS "virtual const char* std::exception::what () const  throw ()\fC [virtual, inherited]\fP"Returns a C-style character string describing the general cause of the current error. 
.PP
Reimplemented in \fBstd::bad_exception\fP, \fBstd::bad_alloc\fP, \fBstd::bad_cast\fP, \fBstd::bad_typeid\fP, \fBstd::future_error\fP, \fBstd::logic_error\fP, \fBstd::runtime_error\fP, \fBstd::tr1::bad_weak_ptr\fP, and \fBstd::ios_base::failure\fP.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
