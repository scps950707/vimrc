.TH "std::__profile::bitset" 3 "Sun Oct 10 2010" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::__profile::bitset \- 
.PP
Class \fBstd::bitset\fP wrapper with performance instrumentation.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits bitset< _Nb >.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBbitset\fP (unsigned long long __val)"
.br
.ti -1c
.RI "template<class _CharT , class _Traits , class _Alloc > \fBbitset\fP (const \fBstd::basic_string\fP< _CharT, _Traits, _Alloc > &__str, typename \fBstd::basic_string\fP< _CharT, _Traits, _Alloc >::size_type __pos, typename \fBstd::basic_string\fP< _CharT, _Traits, _Alloc >::size_type __n, _CharT __zero, _CharT __one=_CharT('1'))"
.br
.ti -1c
.RI "\fBbitset\fP (const \fB_Base\fP &__x)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc > \fBbitset\fP (const \fBstd::basic_string\fP< _CharT, _Traits, _Alloc > &__str, typename \fBstd::basic_string\fP< _CharT, _Traits, _Alloc >::size_type __pos=0, typename \fBstd::basic_string\fP< _CharT, _Traits, _Alloc >::size_type __n=(\fBstd::basic_string\fP< _CharT, _Traits, _Alloc >::npos))"
.br
.ti -1c
.RI "\fBbitset\fP (const char *__str)"
.br
.ti -1c
.RI "\fB_Base\fP & \fB_M_base\fP ()"
.br
.ti -1c
.RI "const \fB_Base\fP & \fB_M_base\fP () const "
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > & \fBflip\fP ()"
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > & \fBflip\fP (size_t __pos)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBbitset\fP< _Nb > &__rhs) const "
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > & \fBoperator&=\fP (const \fBbitset\fP< _Nb > &__rhs)"
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > \fBoperator<<\fP (size_t __pos) const "
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > & \fBoperator<<=\fP (size_t __pos)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBbitset\fP< _Nb > &__rhs) const "
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > \fBoperator>>\fP (size_t __pos) const "
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > & \fBoperator>>=\fP (size_t __pos)"
.br
.ti -1c
.RI "reference \fBoperator[]\fP (size_t __pos)"
.br
.ti -1c
.RI "bool \fBoperator[]\fP (size_t __pos) const "
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > & \fBoperator^=\fP (const \fBbitset\fP< _Nb > &__rhs)"
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > & \fBoperator|=\fP (const \fBbitset\fP< _Nb > &__rhs)"
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > \fBoperator~\fP () const "
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > & \fBreset\fP ()"
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > & \fBreset\fP (size_t __pos)"
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > & \fBset\fP (size_t __pos, bool __val=true)"
.br
.ti -1c
.RI "\fBbitset\fP< _Nb > & \fBset\fP ()"
.br
.ti -1c
.RI "\fBstd::basic_string\fP< char, \fBstd::char_traits\fP< char >, \fBstd::allocator\fP< char > > \fBto_string\fP (char __zero, char __one= '1') const "
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits > \fBstd::basic_string\fP< _CharT, _Traits, \fBstd::allocator\fP< _CharT > > \fBto_string\fP () const "
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc > \fBstd::basic_string\fP< _CharT, _Traits, _Alloc > \fBto_string\fP () const "
.br
.ti -1c
.RI "template<class _CharT , class _Traits > \fBstd::basic_string\fP< _CharT, _Traits, \fBstd::allocator\fP< _CharT > > \fBto_string\fP (_CharT __zero, _CharT __one=_CharT('1')) const "
.br
.ti -1c
.RI "\fBstd::basic_string\fP< char, \fBstd::char_traits\fP< char >, \fBstd::allocator\fP< char > > \fBto_string\fP () const "
.br
.ti -1c
.RI "template<typename _CharT > \fBstd::basic_string\fP< _CharT, \fBstd::char_traits\fP< _CharT >, \fBstd::allocator\fP< _CharT > > \fBto_string\fP () const "
.br
.ti -1c
.RI "template<class _CharT > \fBstd::basic_string\fP< _CharT, \fBstd::char_traits\fP< _CharT >, \fBstd::allocator\fP< _CharT > > \fBto_string\fP (_CharT __zero, _CharT __one=_CharT('1')) const "
.br
.ti -1c
.RI "template<class _CharT , class _Traits , class _Alloc > \fBstd::basic_string\fP< _CharT, _Traits, _Alloc > \fBto_string\fP (_CharT __zero, _CharT __one=_CharT('1')) const "
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<size_t _Nb> class std::__profile::bitset< _Nb >"
Class \fBstd::bitset\fP wrapper with performance instrumentation. 
.PP
Definition at line 40 of file profile/bitset.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
