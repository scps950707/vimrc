.TH "__gnu_parallel::__binder1st" 3 "Sun Oct 10 2010" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_parallel::__binder1st \- 
.PP
Similar to \fBstd::binder1st\fP, but giving the argument types explicitly.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBunary_function< _SecondArgumentType, _ResultType >\fP.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _SecondArgumentType \fBargument_type\fP"
.br
.ti -1c
.RI "typedef _ResultType \fBresult_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__binder1st\fP (const _Operation &__x, const _FirstArgumentType &__y)"
.br
.ti -1c
.RI "_ResultType \fBoperator()\fP (_SecondArgumentType &__x) const "
.br
.ti -1c
.RI "_ResultType \fBoperator()\fP (const _SecondArgumentType &__x)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "_Operation \fB_M_op\fP"
.br
.ti -1c
.RI "_FirstArgumentType \fB_M_value\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Operation, typename _FirstArgumentType, typename _SecondArgumentType, typename _ResultType> class __gnu_parallel::__binder1st< _Operation, _FirstArgumentType, _SecondArgumentType, _ResultType >"
Similar to \fBstd::binder1st\fP, but giving the argument types explicitly. 
.PP
Definition at line 192 of file parallel/base.h.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef _SecondArgumentType  \fBstd::unary_function\fP< _SecondArgumentType , _ResultType  >::\fBargument_type\fP\fC [inherited]\fP"
.PP
\fCargument_type\fP is the type of the /// argument (no surprises here) 
.PP
Definition at line 102 of file stl_function.h.
.SS "typedef _ResultType  \fBstd::unary_function\fP< _SecondArgumentType , _ResultType  >::\fBresult_type\fP\fC [inherited]\fP"
.PP
\fCresult_type\fP is the return type 
.PP
Definition at line 105 of file stl_function.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
