.TH "__gnu_parallel::_LoserTreePointerUnguardedBase" 3 "Sun Oct 10 2010" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_parallel::_LoserTreePointerUnguardedBase \- 
.PP
Unguarded loser tree, keeping only pointers to the elements in the tree structure.  

.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fB__gnu_parallel::_LoserTreePointerUnguarded< __stable, _Tp, _Compare >\fP, and \fB__gnu_parallel::_LoserTreePointerUnguarded< false, _Tp, _Compare >\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB_LoserTreePointerUnguardedBase\fP (unsigned int __k, const _Tp &__sentinel, _Compare __comp=\fBstd::less\fP< _Tp >())"
.br
.ti -1c
.RI "int \fB__get_min_source\fP ()"
.br
.ti -1c
.RI "void \fB__insert_start\fP (const _Tp &__key, int __source, bool)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "_Compare \fB_M_comp\fP"
.br
.ti -1c
.RI "unsigned int \fB_M_ik\fP"
.br
.ti -1c
.RI "unsigned int \fB_M_k\fP"
.br
.ti -1c
.RI "_Loser * \fB_M_losers\fP"
.br
.ti -1c
.RI "unsigned int \fB_M_offset\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp, typename _Compare> class __gnu_parallel::_LoserTreePointerUnguardedBase< _Tp, _Compare >"
Unguarded loser tree, keeping only pointers to the elements in the tree structure. 

No guarding is done, therefore not a single input sequence must run empty. This is a very fast variant. 
.PP
Definition at line 805 of file losertree.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
