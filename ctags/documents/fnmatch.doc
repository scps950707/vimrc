FNM_CASEFOLD     macro        39 /usr/include/fnmatch.h # define FNM_CASEFOLD (1 << 4) /* Compare without regard to case. */
FNM_EXTMATCH     macro        40 /usr/include/fnmatch.h # define FNM_EXTMATCH (1 << 5) /* Use ksh-like extended matching. */
FNM_FILE_NAME    macro        37 /usr/include/fnmatch.h # define FNM_FILE_NAME FNM_PATHNAME /* Preferred GNU name. */
FNM_LEADING_DIR  macro        38 /usr/include/fnmatch.h # define FNM_LEADING_DIR (1 << 3) /* Ignore `/...' after a match. */
FNM_NOESCAPE     macro        28 /usr/include/fnmatch.h #undef FNM_NOESCAPE
FNM_NOESCAPE     macro        33 /usr/include/fnmatch.h #define FNM_NOESCAPE (1 << 1) /* Backslashes don't quote special chars. */
FNM_NOMATCH      macro        44 /usr/include/fnmatch.h #define FNM_NOMATCH 1
FNM_NOSYS        macro        51 /usr/include/fnmatch.h # define FNM_NOSYS (-1)
FNM_PATHNAME     macro        27 /usr/include/fnmatch.h #undef FNM_PATHNAME
FNM_PATHNAME     macro        32 /usr/include/fnmatch.h #define FNM_PATHNAME (1 << 0) /* No wildcard can ever match `/'. */
FNM_PERIOD       macro        29 /usr/include/fnmatch.h #undef FNM_PERIOD
FNM_PERIOD       macro        34 /usr/include/fnmatch.h #define FNM_PERIOD (1 << 2) /* Leading `.' is matched only explicitly. */
_FNMATCH_H       macro        19 /usr/include/fnmatch.h #define _FNMATCH_H 1
fnmatch          prototype    56 /usr/include/fnmatch.h extern int fnmatch (const char *__pattern, const char *__name, int __flags);
