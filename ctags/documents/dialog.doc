ACS_BLOCK        macro       120 /usr/include/dialog.h #undef ACS_BLOCK
ACS_BLOCK        macro       219 /usr/include/dialog.h #define ACS_BLOCK '#'
ACS_DARROW       macro       119 /usr/include/dialog.h #undef ACS_DARROW
ACS_DARROW       macro       216 /usr/include/dialog.h #define ACS_DARROW 'v'
ACS_HLINE        macro       201 /usr/include/dialog.h #define ACS_HLINE '-'
ACS_LLCORNER     macro       192 /usr/include/dialog.h #define ACS_LLCORNER '+'
ACS_LRCORNER     macro       198 /usr/include/dialog.h #define ACS_LRCORNER '+'
ACS_LTEE         macro       207 /usr/include/dialog.h #define ACS_LTEE '+'
ACS_RTEE         macro       210 /usr/include/dialog.h #define ACS_RTEE '+'
ACS_UARROW       macro       118 /usr/include/dialog.h #undef ACS_UARROW
ACS_UARROW       macro       213 /usr/include/dialog.h #define ACS_UARROW '^'
ACS_ULCORNER     macro       189 /usr/include/dialog.h #define ACS_ULCORNER '+'
ACS_URCORNER     macro       195 /usr/include/dialog.h #define ACS_URCORNER '+'
ACS_VLINE        macro       204 /usr/include/dialog.h #define ACS_VLINE '|'
ARROWS_COL       macro       165 /usr/include/dialog.h #define ARROWS_COL 5
A_CHARTEXT       macro       183 /usr/include/dialog.h #define A_CHARTEXT 0xff
BUF_SIZE         macro       168 /usr/include/dialog.h #define BUF_SIZE (10L*1024)
CHECKBOX_TAGS    macro       543 /usr/include/dialog.h #define CHECKBOX_TAGS (2 + DLG__ITEM_HELP + DLG__NO_ITEMS)
CHR_BACKSPACE    macro       149 /usr/include/dialog.h #define CHR_BACKSPACE DLG_CTRL('H')
CHR_DELETE       macro       153 /usr/include/dialog.h #define CHR_DELETE 127
CHR_HELP         macro       148 /usr/include/dialog.h #define CHR_HELP DLG_CTRL('E')
CHR_KILL         macro       151 /usr/include/dialog.h #define CHR_KILL DLG_CTRL('U')
CHR_LITERAL      macro       152 /usr/include/dialog.h #define CHR_LITERAL DLG_CTRL('V')
CHR_NEXT         macro       154 /usr/include/dialog.h #define CHR_NEXT DLG_CTRL('N')
CHR_PREVIOUS     macro       155 /usr/include/dialog.h #define CHR_PREVIOUS DLG_CTRL('P')
CHR_REPAINT      macro       150 /usr/include/dialog.h #define CHR_REPAINT DLG_CTRL('L')
CHR_TRACE        macro       156 /usr/include/dialog.h #define CHR_TRACE DLG_CTRL('T')
CharOf           macro       186 /usr/include/dialog.h #define CharOf(ch) ((ch) & 0xff)
DEFAULT_ASPECT_RATIO macro       177 /usr/include/dialog.h #define DEFAULT_ASPECT_RATIO 9
DEFAULT_SEPARATE_STR macro       176 /usr/include/dialog.h #define DEFAULT_SEPARATE_STR "\t"
DIALOG_ATR       macro       348 /usr/include/dialog.h #define DIALOG_ATR(n) dlg_color_table[n].atr
DIALOG_CALLBACK  typedef     412 /usr/include/dialog.h } DIALOG_CALLBACK;
DIALOG_COLORS    typedef     578 /usr/include/dialog.h } DIALOG_COLORS;
DIALOG_FORMITEM  typedef     636 /usr/include/dialog.h } DIALOG_FORMITEM;
DIALOG_FREEBACK  typedef     396 /usr/include/dialog.h typedef void (*DIALOG_FREEBACK) (struct _dlg_callback * /* p */);
DIALOG_H_included macro        28 /usr/include/dialog.h #define DIALOG_H_included 1
DIALOG_INPUTMENU typedef     638 /usr/include/dialog.h typedef int (DIALOG_INPUTMENU) (DIALOG_LISTITEM * /*items*/, int /*current*/, char * /*newtext*/);
DIALOG_LISTITEM  typedef     618 /usr/include/dialog.h } DIALOG_LISTITEM;
DIALOG_STATE     typedef     450 /usr/include/dialog.h } DIALOG_STATE;
DIALOG_VARS      typedef     529 /usr/include/dialog.h } DIALOG_VARS;
DIALOG_WINDOWS   typedef     418 /usr/include/dialog.h } DIALOG_WINDOWS;
DLGK_max         macro       389 /usr/include/dialog.h #define DLGK_max (KEY_MAX + 256)
DLG_CTRL         macro       146 /usr/include/dialog.h #define DLG_CTRL(n) ((n) & 0x1f) /* CTRL is preferred, but conflicts */
DLG_EXIT_CANCEL  macro       141 /usr/include/dialog.h #define DLG_EXIT_CANCEL 1
DLG_EXIT_ERROR   macro       139 /usr/include/dialog.h #define DLG_EXIT_ERROR -1 /* the shell sees this as 255 */
DLG_EXIT_ESC     macro       137 /usr/include/dialog.h #define DLG_EXIT_ESC 255
DLG_EXIT_EXTRA   macro       143 /usr/include/dialog.h #define DLG_EXIT_EXTRA 3
DLG_EXIT_HELP    macro       142 /usr/include/dialog.h #define DLG_EXIT_HELP 2
DLG_EXIT_ITEM_HELP macro       144 /usr/include/dialog.h #define DLG_EXIT_ITEM_HELP 4 /* actually DLG_EXIT_HELP */
DLG_EXIT_OK      macro       140 /usr/include/dialog.h #define DLG_EXIT_OK 0
DLG_EXIT_UNKNOWN macro       138 /usr/include/dialog.h #define DLG_EXIT_UNKNOWN -2 /* never return this (internal use) */
DLG_TRACE        macro       810 /usr/include/dialog.h #define DLG_TRACE(params) dlg_trace_msg params
DLG_TRACE        macro       816 /usr/include/dialog.h #define DLG_TRACE(params) /* nothing */
DLG_USE_WIDE_CURSES macro       111 /usr/include/dialog.h #undef DLG_USE_WIDE_CURSES
DLG__ITEM_HELP   macro       538 /usr/include/dialog.h #define DLG__ITEM_HELP (dialog_vars.item_help ? 1 : 0)
DLG__NO_ITEMS    macro       537 /usr/include/dialog.h #define DLG__NO_ITEMS (dialog_vars.no_items ? 0 : 1)
ERR              macro        49 /usr/include/dialog.h #undef ERR
ESC              macro       158 /usr/include/dialog.h #define ESC 27
FLAG_CHECK       macro       889 /usr/include/dialog.h #define FLAG_CHECK 1
FLAG_RADIO       macro       890 /usr/include/dialog.h #define FLAG_RADIO 0
FORMBOX_TAGS     macro       545 /usr/include/dialog.h #define FORMBOX_TAGS (8 + DLG__ITEM_HELP)
GCC_NORETURN     macro       103 /usr/include/dialog.h #define GCC_NORETURN /*nothing*/
GCC_PRINTFLIKE   macro        99 /usr/include/dialog.h #define GCC_PRINTFLIKE(fmt,var) /*nothing*/
GCC_UNUSED       macro       107 /usr/include/dialog.h #define GCC_UNUSED /*nothing*/
GUTTER           macro       162 /usr/include/dialog.h #define GUTTER 2
KEY_MAX          macro        70 /usr/include/dialog.h #define KEY_MAX __KEY_MAX
KEY_MIN          macro        76 /usr/include/dialog.h #define KEY_MIN __KEY_MIN
MARGIN           macro       161 /usr/include/dialog.h #define MARGIN 1
MAX              macro       173 /usr/include/dialog.h #undef MAX
MAX              macro       174 /usr/include/dialog.h #define MAX(x,y) ((x) > (y) ? (x) : (y))
MAX_LEN          macro       167 /usr/include/dialog.h #define MAX_LEN 2048
MENUBOX_TAGS     macro       544 /usr/include/dialog.h #define MENUBOX_TAGS (1 + DLG__ITEM_HELP + DLG__NO_ITEMS)
MIN              macro       170 /usr/include/dialog.h #undef MIN
MIN              macro       171 /usr/include/dialog.h #define MIN(x,y) ((x) < (y) ? (x) : (y))
MIXEDFORM_TAGS   macro       546 /usr/include/dialog.h #define MIXEDFORM_TAGS (1 + FORMBOX_TAGS)
MIXEDGAUGE_TAGS  macro       547 /usr/include/dialog.h #define MIXEDGAUGE_TAGS 2
M_EVENT          macro       883 /usr/include/dialog.h #define M_EVENT (DLGK_max + 1)
SCOLS            macro       130 /usr/include/dialog.h #define SCOLS (COLS - (dialog_state.use_shadow ? 2 : 0))
SCOLS            macro       133 /usr/include/dialog.h #define SCOLS COLS
SHADOW_COLS      macro       164 /usr/include/dialog.h #define SHADOW_COLS 2
SHADOW_ROWS      macro       163 /usr/include/dialog.h #define SHADOW_ROWS 1
SLINES           macro       131 /usr/include/dialog.h #define SLINES (LINES - (dialog_state.use_shadow ? 1 : 0))
SLINES           macro       134 /usr/include/dialog.h #define SLINES LINES
TAB              macro       159 /usr/include/dialog.h #define TAB DLG_CTRL('I')
TAB_LEN          macro       179 /usr/include/dialog.h #define TAB_LEN 8
TREEVIEW_TAGS    macro       548 /usr/include/dialog.h #define TREEVIEW_TAGS (3 + DLG__ITEM_HELP + DLG__NO_ITEMS)
UCH              macro       556 /usr/include/dialog.h #define UCH(ch) ((unsigned char)(ch))
USE_COLORS       macro       127 /usr/include/dialog.h #define USE_COLORS TRUE
USE_ITEM_HELP    macro       531 /usr/include/dialog.h #define USE_ITEM_HELP(s) (dialog_vars.item_help && (s) != 0)
USE_MOUSE        macro       852 /usr/include/dialog.h #define USE_MOUSE 1
USE_MOUSE        macro       864 /usr/include/dialog.h #define USE_MOUSE 0
USE_SHADOW       macro       126 /usr/include/dialog.h #define USE_SHADOW TRUE
WTIMEOUT_VAL     macro       180 /usr/include/dialog.h #define WTIMEOUT_VAL 10 /* minimum amount of time needed for curses */
X                member      836 /usr/include/dialog.h int x, y, X, Y, code;
Y                member      836 /usr/include/dialog.h int x, y, X, Y, code;
_                macro        92 /usr/include/dialog.h #define _(s) dgettext(DLG_PACKAGE, s)
_                macro        94 /usr/include/dialog.h #undef _
_                macro        95 /usr/include/dialog.h #define _(s) s
__HP_CURSES_COMPAT macro        34 /usr/include/dialog.h #define __HP_CURSES_COMPAT /* workaround for getattrs, etc. */
__anon1::all_subwindows member      427 /usr/include/dialog.h DIALOG_WINDOWS *all_subwindows;
__anon1::all_windows member      426 /usr/include/dialog.h DIALOG_WINDOWS *all_windows;
__anon1::aspect_ratio member      437 /usr/include/dialog.h int aspect_ratio; /* option "--aspect ratio" */
__anon1::finish_string member      449 /usr/include/dialog.h bool finish_string; /* caching optimization for gauge */
__anon1::getc_callbacks member      424 /usr/include/dialog.h DIALOG_CALLBACK *getc_callbacks;
__anon1::getc_redirect member      425 /usr/include/dialog.h DIALOG_CALLBACK *getc_redirect;
__anon1::input   member      441 /usr/include/dialog.h FILE *input; /* option "--input-fd fd" */
__anon1::no_mouse member      446 /usr/include/dialog.h bool no_mouse; /* option "--no-mouse" */
__anon1::output  member      428 /usr/include/dialog.h FILE *output; /* option "--output-fd fd" */
__anon1::output_count member      438 /usr/include/dialog.h int output_count; /* # of widgets that may have done output */
__anon1::pipe_input member      429 /usr/include/dialog.h FILE *pipe_input; /* used for gauge widget */
__anon1::screen_initialized member      431 /usr/include/dialog.h bool screen_initialized;
__anon1::screen_output member      430 /usr/include/dialog.h FILE *screen_output; /* newterm(), etc. */
__anon1::separate_str member      436 /usr/include/dialog.h char *separate_str; /* option "--separate-widget string" */
__anon1::tab_len member      439 /usr/include/dialog.h int tab_len; /* option "--tab-len n" */
__anon1::trace_output member      443 /usr/include/dialog.h FILE *trace_output; /* option "--trace file" */
__anon1::use_colors member      432 /usr/include/dialog.h bool use_colors; /* use colors by default? */
__anon1::use_scrollbar member      433 /usr/include/dialog.h bool use_scrollbar; /* option "--scrollbar" */
__anon1::use_shadow member      434 /usr/include/dialog.h bool use_shadow; /* shadow dialog boxes by default? */
__anon1::visit_cols member      447 /usr/include/dialog.h int visit_cols; /* option "--visit-items" */
__anon1::visit_items member      435 /usr/include/dialog.h bool visit_items; /* option "--visit-items" */
__anon2::ascii_lines member      503 /usr/include/dialog.h bool ascii_lines; /* option "--ascii-lines" */
__anon2::backtitle member      481 /usr/include/dialog.h char *backtitle; /* option "--backtitle backtitle" */
__anon2::beep_after_signal member      458 /usr/include/dialog.h bool beep_after_signal; /* option "--beep-after" */
__anon2::beep_signal member      459 /usr/include/dialog.h bool beep_signal; /* option "--beep" */
__anon2::begin_set member      460 /usr/include/dialog.h bool begin_set; /* option "--begin y x" was used */
__anon2::begin_x member      492 /usr/include/dialog.h int begin_x; /* option "--begin y x" (second value) */
__anon2::begin_y member      493 /usr/include/dialog.h int begin_y; /* option "--begin y x" (first value) */
__anon2::cancel_label member      482 /usr/include/dialog.h char *cancel_label; /* option "--cancel-label string" */
__anon2::cant_kill member      461 /usr/include/dialog.h bool cant_kill; /* option "--no-kill" */
__anon2::colors  member      462 /usr/include/dialog.h bool colors; /* option "--colors" */
__anon2::column_header member      509 /usr/include/dialog.h char *column_header; /* RESERVED "--column-header" */
__anon2::column_separator member      510 /usr/include/dialog.h char *column_separator; /* option "--column-separator" */
__anon2::cr_wrap member      463 /usr/include/dialog.h bool cr_wrap; /* option "--cr-wrap" */
__anon2::date_format member      513 /usr/include/dialog.h char *date_format; /* option "--date-format" */
__anon2::default_button member      521 /usr/include/dialog.h int default_button; /* option "--default-button" (exit code) */
__anon2::default_item member      483 /usr/include/dialog.h char *default_item; /* option "--default-item string" */
__anon2::defaultno member      464 /usr/include/dialog.h bool defaultno; /* option "--defaultno" */
__anon2::dlg_clear_screen member      465 /usr/include/dialog.h bool dlg_clear_screen; /* option "--clear" */
__anon2::exit_label member      484 /usr/include/dialog.h char *exit_label; /* option "--exit-label string" */
__anon2::extra_button member      466 /usr/include/dialog.h bool extra_button; /* option "--extra-button" */
__anon2::extra_label member      485 /usr/include/dialog.h char *extra_label; /* option "--extra-label string" */
__anon2::formitem_type member      500 /usr/include/dialog.h unsigned formitem_type; /* DIALOG_FORMITEM.type in dialog_form() */
__anon2::help_button member      467 /usr/include/dialog.h bool help_button; /* option "--help-button" */
__anon2::help_file member      517 /usr/include/dialog.h char *help_file; /* option "--hfile" */
__anon2::help_label member      486 /usr/include/dialog.h char *help_label; /* option "--help-label string" */
__anon2::help_line member      516 /usr/include/dialog.h char *help_line; /* option "--hline" */
__anon2::help_status member      468 /usr/include/dialog.h bool help_status; /* option "--help-status" */
__anon2::help_tags member      528 /usr/include/dialog.h bool help_tags; /* option "--help-tags" */
__anon2::in_helpfile member      518 /usr/include/dialog.h bool in_helpfile; /* flag to prevent recursion in --hfile */
__anon2::input_length member      498 /usr/include/dialog.h unsigned input_length; /* nonzero if input_result is allocated */
__anon2::input_menu member      469 /usr/include/dialog.h bool input_menu; /* menu vs inputmenu widget */
__anon2::input_result member      487 /usr/include/dialog.h char *input_result;
__anon2::insecure member      470 /usr/include/dialog.h bool insecure; /* option "--insecure" */
__anon2::item_help member      471 /usr/include/dialog.h bool item_help; /* option "--item-help" */
__anon2::keep_tite member      502 /usr/include/dialog.h bool keep_tite; /* option "--keep-tite" */
__anon2::keep_window member      472 /usr/include/dialog.h bool keep_window; /* option "--keep-window" */
__anon2::last_key member      526 /usr/include/dialog.h bool last_key; /* option "--last-key" */
__anon2::max_input member      494 /usr/include/dialog.h int max_input; /* option "--max-input size" */
__anon2::no_items member      524 /usr/include/dialog.h bool no_items; /* option "--no-items" */
__anon2::no_label member      488 /usr/include/dialog.h char *no_label; /* option "--no-label string" */
__anon2::no_lines member      504 /usr/include/dialog.h bool no_lines; /* option "--no-lines" */
__anon2::no_nl_expand member      519 /usr/include/dialog.h bool no_nl_expand; /* option "--no-nl-expand" */
__anon2::no_tags member      523 /usr/include/dialog.h bool no_tags; /* option "--no-tags" */
__anon2::nocancel member      473 /usr/include/dialog.h bool nocancel; /* option "--no-cancel" */
__anon2::nocollapse member      474 /usr/include/dialog.h bool nocollapse; /* option "--no-collapse" */
__anon2::nook    member      506 /usr/include/dialog.h bool nook; /* option "--no-ok" */
__anon2::ok_label member      489 /usr/include/dialog.h char *ok_label; /* option "--ok-label string" */
__anon2::output_separator member      511 /usr/include/dialog.h char *output_separator; /* option "--output-separator" */
__anon2::print_siz member      475 /usr/include/dialog.h bool print_siz; /* option "--print-size" */
__anon2::quoted  member      508 /usr/include/dialog.h bool quoted; /* option "--quoted" */
__anon2::scale_factor member      495 /usr/include/dialog.h int scale_factor; /* RESERVED */
__anon2::separate_output member      476 /usr/include/dialog.h bool separate_output; /* option "--separate-output" */
__anon2::single_quoted member      477 /usr/include/dialog.h bool single_quoted; /* option "--single-quoted" */
__anon2::size_err member      478 /usr/include/dialog.h bool size_err; /* option "--size-err" */
__anon2::sleep_secs member      496 /usr/include/dialog.h int sleep_secs; /* option "--sleep secs" */
__anon2::tab_correct member      479 /usr/include/dialog.h bool tab_correct; /* option "--tab-correct" */
__anon2::time_format member      514 /usr/include/dialog.h char *time_format; /* option "--time-format" */
__anon2::timeout_secs member      497 /usr/include/dialog.h int timeout_secs; /* option "--timeout secs" */
__anon2::title   member      490 /usr/include/dialog.h char *title; /* option "--title title" */
__anon2::trim_whitespace member      480 /usr/include/dialog.h bool trim_whitespace; /* option "--trim" */
__anon2::yes_label member      491 /usr/include/dialog.h char *yes_label; /* option "--yes-label string" */
__anon3::atr     member      568 /usr/include/dialog.h chtype atr;
__anon3::bg      member      571 /usr/include/dialog.h int bg;
__anon3::comment member      576 /usr/include/dialog.h const char *comment;
__anon3::fg      member      570 /usr/include/dialog.h int fg;
__anon3::hilite  member      572 /usr/include/dialog.h int hilite;
__anon3::name    member      575 /usr/include/dialog.h const char *name;
__anon4::help    member      616 /usr/include/dialog.h char *help;
__anon4::name    member      614 /usr/include/dialog.h char *name;
__anon4::state   member      617 /usr/include/dialog.h int state;
__anon4::text    member      615 /usr/include/dialog.h char *text;
__anon5::help    member      634 /usr/include/dialog.h char *help; /* help-message, if any */
__anon5::help_free member      635 /usr/include/dialog.h bool help_free; /* ...true if .help can be freed */
__anon5::name    member      622 /usr/include/dialog.h char *name; /* the field label */
__anon5::name_free member      626 /usr/include/dialog.h bool name_free; /* ...true if .name can be freed */
__anon5::name_len member      623 /usr/include/dialog.h int name_len; /* ...its length */
__anon5::name_x  member      625 /usr/include/dialog.h int name_x; /* ...its x-ordinate */
__anon5::name_y  member      624 /usr/include/dialog.h int name_y; /* ...its y-ordinate */
__anon5::text    member      627 /usr/include/dialog.h char *text; /* the field contents */
__anon5::text_flen member      631 /usr/include/dialog.h int text_flen; /* ...its length on screen, or 0 if no input allowed */
__anon5::text_free member      633 /usr/include/dialog.h bool text_free; /* ...true if .text can be freed */
__anon5::text_ilen member      632 /usr/include/dialog.h int text_ilen; /* ...its limit on amount to be entered */
__anon5::text_len member      628 /usr/include/dialog.h int text_len; /* ...its length on the screen */
__anon5::text_x  member      630 /usr/include/dialog.h int text_x; /* ...its x-ordinate */
__anon5::text_y  member      629 /usr/include/dialog.h int text_y; /* ...its y-ordinate */
__anon5::type    member      621 /usr/include/dialog.h unsigned type; /* the field type (0=input, 1=password) */
_dlg_callback    externvar   394 /usr/include/dialog.h struct _dlg_callback;
_dlg_callback    struct      398 /usr/include/dialog.h typedef struct _dlg_callback {
_dlg_callback::bg_task member      403 /usr/include/dialog.h bool bg_task; /* true if this is background task */
_dlg_callback::caller member      407 /usr/include/dialog.h struct _dlg_callback **caller;
_dlg_callback::freeback member      408 /usr/include/dialog.h DIALOG_FREEBACK freeback;
_dlg_callback::handle_getc member      404 /usr/include/dialog.h bool (*handle_getc)(struct _dlg_callback *p, int ch, int fkey, int *result);
_dlg_callback::handle_input member      410 /usr/include/dialog.h bool (*handle_input)(struct _dlg_callback *p);
_dlg_callback::input member      400 /usr/include/dialog.h FILE *input;
_dlg_callback::input_ready member      411 /usr/include/dialog.h bool input_ready;
_dlg_callback::keep_bg member      402 /usr/include/dialog.h bool keep_bg; /* keep in background, on exit */
_dlg_callback::keep_win member      405 /usr/include/dialog.h bool keep_win; /* true to not erase window on exit */
_dlg_callback::next member      399 /usr/include/dialog.h struct _dlg_callback *next;
_dlg_callback::win member      401 /usr/include/dialog.h WINDOW *win;
_dlg_inputstr_leaks prototype   896 /usr/include/dialog.h extern void _dlg_inputstr_leaks(void);
_dlg_windows     struct      414 /usr/include/dialog.h typedef struct _dlg_windows {
_dlg_windows::next member      415 /usr/include/dialog.h struct _dlg_windows *next;
_dlg_windows::normal member      416 /usr/include/dialog.h WINDOW *normal;
_dlg_windows::shadow member      417 /usr/include/dialog.h WINDOW *shadow;
_nc_free_and_exit prototype   898 /usr/include/dialog.h extern void _nc_free_and_exit(int); /* nc_alloc.h normally not installed */
all_subwindows   member      427 /usr/include/dialog.h DIALOG_WINDOWS *all_subwindows;
all_windows      member      426 /usr/include/dialog.h DIALOG_WINDOWS *all_windows;
ascii_lines      member      503 /usr/include/dialog.h bool ascii_lines; /* option "--ascii-lines" */
aspect_ratio     member      437 /usr/include/dialog.h int aspect_ratio; /* option "--aspect ratio" */
assert_ptr       macro       558 /usr/include/dialog.h #define assert_ptr(ptr,msg) if ((ptr) == 0) dlg_exiterr("cannot allocate memory in " msg)
atr              member      568 /usr/include/dialog.h chtype atr;
attr_clear       macro       308 /usr/include/dialog.h #define attr_clear(win,h,w,a) dlg_attr_clear(win,h,w,a)
auto_size        macro       309 /usr/include/dialog.h #define auto_size(t,s,h,w,xl,mc) dlg_auto_size(t,s,h,w,xl,mc)
auto_sizefile    macro       310 /usr/include/dialog.h #define auto_sizefile(t,f,h,w,xl,mc) dlg_auto_sizefile(t,f,h,w,xl,mc)
backtitle        member      481 /usr/include/dialog.h char *backtitle; /* option "--backtitle backtitle" */
beep_after_signal member      458 /usr/include/dialog.h bool beep_after_signal; /* option "--beep-after" */
beep_signal      member      459 /usr/include/dialog.h bool beep_signal; /* option "--beep" */
beeping          macro       311 /usr/include/dialog.h #define beeping() dlg_beeping()
begin_set        member      460 /usr/include/dialog.h bool begin_set; /* option "--begin y x" was used */
begin_x          member      492 /usr/include/dialog.h int begin_x; /* option "--begin y x" (second value) */
begin_y          member      493 /usr/include/dialog.h int begin_y; /* option "--begin y x" (first value) */
bg               member      571 /usr/include/dialog.h int bg;
bg_task          member      403 /usr/include/dialog.h bool bg_task; /* true if this is background task */
border2_attr     macro       384 /usr/include/dialog.h #define border2_attr DIALOG_ATR(34)
border_attr      macro       354 /usr/include/dialog.h #define border_attr DIALOG_ATR(4)
box_x_ordinate   macro       312 /usr/include/dialog.h #define box_x_ordinate(w) dlg_box_x_ordinate(w)
box_y_ordinate   macro       313 /usr/include/dialog.h #define box_y_ordinate(h) dlg_box_y_ordinate(h)
button_active_attr macro       355 /usr/include/dialog.h #define button_active_attr DIALOG_ATR(5)
button_inactive_attr macro       356 /usr/include/dialog.h #define button_inactive_attr DIALOG_ATR(6)
button_key_active_attr macro       357 /usr/include/dialog.h #define button_key_active_attr DIALOG_ATR(7)
button_key_inactive_attr macro       358 /usr/include/dialog.h #define button_key_inactive_attr DIALOG_ATR(8)
button_label_active_attr macro       359 /usr/include/dialog.h #define button_label_active_attr DIALOG_ATR(9)
button_label_inactive_attr macro       360 /usr/include/dialog.h #define button_label_inactive_attr DIALOG_ATR(10)
buttons          macro        86 /usr/include/dialog.h #undef buttons
calc_listh       macro       314 /usr/include/dialog.h #define calc_listh(h,lh,in) dlg_calc_listh(h,lh,in)
calc_listw       macro       315 /usr/include/dialog.h #define calc_listw(in,items,group) dlg_calc_listw(in,items,group)
caller           member      407 /usr/include/dialog.h struct _dlg_callback **caller;
cancel_label     member      482 /usr/include/dialog.h char *cancel_label; /* option "--cancel-label string" */
cant_kill        member      461 /usr/include/dialog.h bool cant_kill; /* option "--no-kill" */
check_attr       macro       375 /usr/include/dialog.h #define check_attr DIALOG_ATR(25)
check_selected_attr macro       376 /usr/include/dialog.h #define check_selected_attr DIALOG_ATR(26)
chtype           macro       553 /usr/include/dialog.h #define chtype long
code             member      836 /usr/include/dialog.h int x, y, X, Y, code;
color_names      macro        82 /usr/include/dialog.h #undef color_names
color_setup      macro       316 /usr/include/dialog.h #define color_setup() dlg_color_setup()
color_table      macro       307 /usr/include/dialog.h #define color_table dlg_color_table
colors           member      462 /usr/include/dialog.h bool colors; /* option "--colors" */
column_header    member      509 /usr/include/dialog.h char *column_header; /* RESERVED "--column-header" */
column_separator member      510 /usr/include/dialog.h char *column_separator; /* option "--column-separator" */
comment          member      576 /usr/include/dialog.h const char *comment;
cr_wrap          member      463 /usr/include/dialog.h bool cr_wrap; /* option "--cr-wrap" */
create_rc        macro       317 /usr/include/dialog.h #define create_rc(f) dlg_create_rc(f)
ctl_size         macro       318 /usr/include/dialog.h #define ctl_size(h,w) dlg_ctl_size(h,w)
darrow_attr      macro       378 /usr/include/dialog.h #define darrow_attr DIALOG_ATR(28)
date_format      member      513 /usr/include/dialog.h char *date_format; /* option "--date-format" */
default_button   member      521 /usr/include/dialog.h int default_button; /* option "--default-button" (exit code) */
default_item     member      483 /usr/include/dialog.h char *default_item; /* option "--default-item string" */
defaultno        member      464 /usr/include/dialog.h bool defaultno; /* option "--defaultno" */
del_window       macro       319 /usr/include/dialog.h #define del_window(win) dlg_del_window(win)
dialog_attr      macro       352 /usr/include/dialog.h #define dialog_attr DIALOG_ATR(2)
dialog_buildlist prototype   588 /usr/include/dialog.h extern int dialog_buildlist(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*list_height*/, int /*item_no*/, char ** /*items*/, int /*order_mode*/);
dialog_calendar  prototype   589 /usr/include/dialog.h extern int dialog_calendar(const char * /*title*/, const char * /*subtitle*/, int /*height*/, int /*width*/, int /*day*/, int /*month*/, int /*year*/);
dialog_checklist prototype   590 /usr/include/dialog.h extern int dialog_checklist(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*list_height*/, int /*item_no*/, char ** /*items*/, int /*flag*/);
dialog_clear     macro       320 /usr/include/dialog.h #define dialog_clear() dlg_clear()
dialog_dselect   prototype   591 /usr/include/dialog.h extern int dialog_dselect(const char * /*title*/, const char * /*path*/, int /*height*/, int /*width*/);
dialog_editbox   prototype   592 /usr/include/dialog.h extern int dialog_editbox(const char * /*title*/, const char * /*file*/, int /*height*/, int /*width*/);
dialog_form      prototype   593 /usr/include/dialog.h extern int dialog_form(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*form_height*/, int /*item_no*/, char ** /*items*/);
dialog_fselect   prototype   594 /usr/include/dialog.h extern int dialog_fselect(const char * /*title*/, const char * /*path*/, int /*height*/, int /*width*/);
dialog_gauge     prototype   595 /usr/include/dialog.h extern int dialog_gauge(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*percent*/);
dialog_helpfile  prototype   596 /usr/include/dialog.h extern int dialog_helpfile(const char * /*title*/, const char * /*file*/, int /*height*/, int /*width*/);
dialog_inputbox  prototype   597 /usr/include/dialog.h extern int dialog_inputbox(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, const char * /*init*/, const int /*password*/);
dialog_menu      prototype   598 /usr/include/dialog.h extern int dialog_menu(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*menu_height*/, int /*item_no*/, char ** /*items*/);
dialog_mixedform prototype   599 /usr/include/dialog.h extern int dialog_mixedform(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*form_height*/, int /*item_no*/, char ** /*items*/);
dialog_mixedgauge prototype   600 /usr/include/dialog.h extern int dialog_mixedgauge(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*percent*/, int /*item_no*/, char ** /*items*/);
dialog_msgbox    prototype   601 /usr/include/dialog.h extern int dialog_msgbox(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*pauseopt*/);
dialog_pause     prototype   602 /usr/include/dialog.h extern int dialog_pause(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*seconds*/);
dialog_prgbox    prototype   603 /usr/include/dialog.h extern int dialog_prgbox(const char * /*title*/, const char * /*cprompt*/, const char * /*command*/, int /*height*/, int /*width*/, int /*pauseopt*/);
dialog_progressbox prototype   604 /usr/include/dialog.h extern int dialog_progressbox(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/);
dialog_rangebox  prototype   605 /usr/include/dialog.h extern int dialog_rangebox(const char * /*title*/, const char * /*file*/, int /*height*/, int /*width*/, int /*min_value*/, int /*max_value*/, int /*default_value*/);
dialog_state     externvar   452 /usr/include/dialog.h extern DIALOG_STATE dialog_state;
dialog_tailbox   prototype   606 /usr/include/dialog.h extern int dialog_tailbox(const char * /*title*/, const char * /*file*/, int /*height*/, int /*width*/, int /*bg_task*/);
dialog_textbox   prototype   607 /usr/include/dialog.h extern int dialog_textbox(const char * /*title*/, const char * /*file*/, int /*height*/, int /*width*/);
dialog_timebox   prototype   608 /usr/include/dialog.h extern int dialog_timebox(const char * /*title*/, const char * /*subtitle*/, int /*height*/, int /*width*/, int /*hour*/, int /*minute*/, int /*second*/);
dialog_treeview  prototype   609 /usr/include/dialog.h extern int dialog_treeview(const char * /*title*/, const char * /*subtitle*/, int /*height*/, int /*width*/, int /*list_height*/, int /*item_no*/, char ** /*items*/, int /*flag*/);
dialog_vars      externvar   550 /usr/include/dialog.h extern DIALOG_VARS dialog_vars;
dialog_version   prototype   585 /usr/include/dialog.h extern const char *dialog_version(void);
dialog_yesno     prototype   610 /usr/include/dialog.h extern int dialog_yesno(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/);
dlg_add_callback prototype   728 /usr/include/dialog.h extern void dlg_add_callback(DIALOG_CALLBACK * /*p*/);
dlg_add_callback_ref prototype   729 /usr/include/dialog.h extern void dlg_add_callback_ref(DIALOG_CALLBACK ** /*p*/, DIALOG_FREEBACK /* cleanup */);
dlg_add_help_formitem prototype   758 /usr/include/dialog.h extern void dlg_add_help_formitem(int * /* result */, char ** /* tag */, DIALOG_FORMITEM * /* item */);
dlg_add_help_listitem prototype   759 /usr/include/dialog.h extern void dlg_add_help_listitem(int * /* result */, char ** /* tag */, DIALOG_LISTITEM * /* item */);
dlg_add_last_key prototype   727 /usr/include/dialog.h extern void dlg_add_last_key(int /*mode*/);
dlg_add_quoted   prototype   760 /usr/include/dialog.h extern void dlg_add_quoted(char * /*string*/);
dlg_add_result   prototype   761 /usr/include/dialog.h extern void dlg_add_result(const char * /*string*/);
dlg_add_separator prototype   762 /usr/include/dialog.h extern void dlg_add_separator(void);
dlg_add_string   prototype   763 /usr/include/dialog.h extern void dlg_add_string(char * /*string*/);
dlg_align_columns prototype   681 /usr/include/dialog.h extern void dlg_align_columns(char ** /* target */, int /* per_row */, int /* num_rows */);
dlg_allocate_gauge prototype   693 /usr/include/dialog.h extern void * dlg_allocate_gauge(const char * /* title */, const char * /* cprompt */, int /* height */, int /* width */, int /* percent */);
dlg_asciibox     prototype   742 /usr/include/dialog.h extern chtype dlg_asciibox(chtype /*ch*/);
dlg_attr_clear   prototype   764 /usr/include/dialog.h extern void dlg_attr_clear(WINDOW * /*win*/, int /*height*/, int /*width*/, chtype /*attr*/);
dlg_auto_size    prototype   765 /usr/include/dialog.h extern void dlg_auto_size(const char * /*title*/, const char * /*prompt*/, int * /*height*/, int * /*width*/, int /*boxlines*/, int /*mincols*/);
dlg_auto_sizefile prototype   766 /usr/include/dialog.h extern void dlg_auto_sizefile(const char * /*title*/, const char * /*file*/, int * /*height*/, int * /*width*/, int /*boxlines*/, int /*mincols*/);
dlg_beeping      prototype   767 /usr/include/dialog.h extern void dlg_beeping(void);
dlg_box_x_ordinate prototype   746 /usr/include/dialog.h extern int dlg_box_x_ordinate(int /*width*/);
dlg_box_y_ordinate prototype   747 /usr/include/dialog.h extern int dlg_box_y_ordinate(int /*height*/);
dlg_boxchar      prototype   743 /usr/include/dialog.h extern chtype dlg_boxchar(chtype /*ch*/);
dlg_buildlist    prototype   657 /usr/include/dialog.h extern int dlg_buildlist(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*list_height*/, int /*item_no*/, DIALOG_LISTITEM * /*items*/, const char * /*states*/, int /*order_mode*/, int * /*current_item*/);
dlg_button_count prototype   664 /usr/include/dialog.h extern int dlg_button_count(const char ** /*labels*/);
dlg_button_layout prototype   676 /usr/include/dialog.h extern void dlg_button_layout(const char ** /*labels*/, int * /*limit*/);
dlg_button_sizes prototype   677 /usr/include/dialog.h extern void dlg_button_sizes(const char ** /*labels*/, int /*vertical*/, int * /*longest*/, int * /*length*/);
dlg_button_to_char prototype   665 /usr/include/dialog.h extern int dlg_button_to_char(const char * /*label*/);
dlg_button_x_step prototype   666 /usr/include/dialog.h extern int dlg_button_x_step(const char ** /*labels*/, int /*limit*/, int * /*gap*/, int * /*margin*/, int * /*step*/);
dlg_calc_list_width prototype   748 /usr/include/dialog.h extern int dlg_calc_list_width(int /*item_no*/, DIALOG_LISTITEM * /*items*/);
dlg_calc_listh   prototype   768 /usr/include/dialog.h extern void dlg_calc_listh(int * /*height*/, int * /*list_height*/, int /*item_no*/);
dlg_calc_listw   prototype   749 /usr/include/dialog.h extern int dlg_calc_listw(int /*item_no*/, char ** /*items*/, int /*group*/);
dlg_calloc       macro       561 /usr/include/dialog.h #define dlg_calloc(t,n) (t *) calloc((size_t)(n), sizeof(t))
dlg_char_to_button prototype   667 /usr/include/dialog.h extern int dlg_char_to_button(int /*ch*/, const char ** /*labels*/);
dlg_check_scrolled prototype   750 /usr/include/dialog.h extern int dlg_check_scrolled(int /* key */, int /* last */, int /* page */, bool * /* show */, int * /* offset */);
dlg_checklist    prototype   640 /usr/include/dialog.h extern int dlg_checklist(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*list_height*/, int /*item_no*/, DIALOG_LISTITEM * /*items*/, const char * /*states*/, int /*flag*/, int * /*current_item*/);
dlg_clear        prototype   769 /usr/include/dialog.h extern void dlg_clear(void);
dlg_clear_screen member      465 /usr/include/dialog.h bool dlg_clear_screen; /* option "--clear" */
dlg_clr_result   prototype   770 /usr/include/dialog.h extern void dlg_clr_result(void);
dlg_color_count  prototype   798 /usr/include/dialog.h extern int dlg_color_count(void);
dlg_color_pair   prototype   797 /usr/include/dialog.h extern chtype dlg_color_pair(int /*foreground*/, int /*background*/);
dlg_color_setup  prototype   799 /usr/include/dialog.h extern void dlg_color_setup(void);
dlg_color_table  externvar   580 /usr/include/dialog.h extern DIALOG_COLORS dlg_color_table[];
dlg_count_argv   prototype   647 /usr/include/dialog.h extern int dlg_count_argv(char ** /* argv */);
dlg_count_columns prototype   702 /usr/include/dialog.h extern int dlg_count_columns(const char * /*string*/);
dlg_count_real_columns prototype   751 /usr/include/dialog.h extern int dlg_count_real_columns(const char * /*text*/);
dlg_count_wchars prototype   703 /usr/include/dialog.h extern int dlg_count_wchars(const char * /*string*/);
dlg_create_rc    prototype   717 /usr/include/dialog.h extern void dlg_create_rc(const char * /*filename*/);
dlg_ctl_size     prototype   771 /usr/include/dialog.h extern void dlg_ctl_size(int /*height*/, int /*width*/);
dlg_default_button prototype   755 /usr/include/dialog.h extern int dlg_default_button(void);
dlg_default_formitem prototype   688 /usr/include/dialog.h extern int dlg_default_formitem(DIALOG_FORMITEM * /*items*/);
dlg_default_item prototype   752 /usr/include/dialog.h extern int dlg_default_item(char ** /*items*/, int /*llen*/);
dlg_default_listitem prototype   753 /usr/include/dialog.h extern int dlg_default_listitem(DIALOG_LISTITEM * /*items*/);
dlg_defaultno_button prototype   754 /usr/include/dialog.h extern int dlg_defaultno_button(void);
dlg_del_window   prototype   772 /usr/include/dialog.h extern void dlg_del_window(WINDOW * /*win*/);
dlg_does_output  prototype   773 /usr/include/dialog.h extern void dlg_does_output(void);
dlg_draw_arrows  prototype   651 /usr/include/dialog.h extern void dlg_draw_arrows(WINDOW * /*dialog*/, int /*top_arrow*/, int /*bottom_arrow*/, int /*x*/, int /*top*/, int /*bottom*/);
dlg_draw_arrows2 prototype   652 /usr/include/dialog.h extern void dlg_draw_arrows2(WINDOW * /*dialog*/, int /*top_arrow*/, int /*bottom_arrow*/, int /*x*/, int /*top*/, int /*bottom*/, chtype /*attr*/, chtype /*borderattr*/);
dlg_draw_bottom_box prototype   774 /usr/include/dialog.h extern void dlg_draw_bottom_box(WINDOW * /*win*/);
dlg_draw_bottom_box2 prototype   775 /usr/include/dialog.h extern void dlg_draw_bottom_box2(WINDOW * /*win*/, chtype /*on_left*/, chtype /*on_right*/, chtype /*on_inside*/);
dlg_draw_box     prototype   776 /usr/include/dialog.h extern void dlg_draw_box(WINDOW * /*win*/, int /*y*/, int /*x*/, int /*height*/, int /*width*/, chtype /*boxchar*/, chtype /*borderchar*/);
dlg_draw_box2    prototype   777 /usr/include/dialog.h extern void dlg_draw_box2(WINDOW * /*win*/, int /*y*/, int /*x*/, int /*height*/, int /*width*/, chtype /*boxchar*/, chtype /*borderchar*/, chtype /*borderchar2*/);
dlg_draw_buttons prototype   678 /usr/include/dialog.h extern void dlg_draw_buttons(WINDOW * /*win*/, int /*y*/, int /*x*/, const char ** /*labels*/, int /*selected*/, int /*vertical*/, int /*limit*/);
dlg_draw_helpline prototype   653 /usr/include/dialog.h extern void dlg_draw_helpline(WINDOW * /*dialog*/, bool /*decorations*/);
dlg_draw_scrollbar prototype   654 /usr/include/dialog.h extern void dlg_draw_scrollbar(WINDOW * /*dialog*/, long /* first_data */, long /* this_data */, long /* next_data */, long /* total_data */, int /* left */, int /* right */, int /*top*/, int /*bottom*/, chtype /*attr*/, chtype /*borderattr*/);
dlg_draw_shadow  prototype   800 /usr/include/dialog.h extern void dlg_draw_shadow(WINDOW * /*win*/, int /*height*/, int /*width*/, int /*y*/, int /*x*/);
dlg_draw_title   prototype   778 /usr/include/dialog.h extern void dlg_draw_title(WINDOW *win, const char *title);
dlg_dummy_menutext prototype   711 /usr/include/dialog.h extern int dlg_dummy_menutext(DIALOG_LISTITEM * /*items*/, int /*current*/, char * /*newtext*/);
dlg_eat_argv     prototype   648 /usr/include/dialog.h extern int dlg_eat_argv(int * /* argcp */, char *** /* argvp */, int /* start */, int /* count */);
dlg_edit_offset  prototype   704 /usr/include/dialog.h extern int dlg_edit_offset(char * /*string*/, int /*offset*/, int /*x_last*/);
dlg_edit_string  prototype   699 /usr/include/dialog.h extern bool dlg_edit_string(char * /*string*/, int * /*offset*/, int /*key*/, int /*fkey*/, bool /*force*/);
dlg_editbox      prototype   685 /usr/include/dialog.h extern int dlg_editbox(const char * /*title*/, char *** /*list*/, int * /*rows*/, int /*height*/, int /*width*/);
dlg_enter_buttoncode macro       830 /usr/include/dialog.h #define dlg_enter_buttoncode(code) (dialog_vars.nook ? DLG_EXIT_OK : dlg_ok_buttoncode(code))
dlg_exit_buttoncode prototype   668 /usr/include/dialog.h extern int dlg_exit_buttoncode(int /*button*/);
dlg_exit_label   prototype   660 /usr/include/dialog.h extern const char ** dlg_exit_label(void);
dlg_find_index   prototype   705 /usr/include/dialog.h extern int dlg_find_index(const int * /*list*/, int /*limit*/, int /*to_find*/);
dlg_finish_string prototype   707 /usr/include/dialog.h extern void dlg_finish_string(const char * /* string */);
dlg_flush_getc   prototype   730 /usr/include/dialog.h extern void dlg_flush_getc(void);
dlg_form         prototype   641 /usr/include/dialog.h extern int dlg_form(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*form_height*/, int /*item_no*/, DIALOG_FORMITEM * /*items*/, int * /*current_item*/);
dlg_free_columns prototype   682 /usr/include/dialog.h extern void dlg_free_columns(char ** /* target */, int /* per_row */, int /* num_rows */);
dlg_free_formitems prototype   690 /usr/include/dialog.h extern void dlg_free_formitems(DIALOG_FORMITEM * /*items*/);
dlg_free_gauge   prototype   695 /usr/include/dialog.h extern void dlg_free_gauge(void * /* objptr */);
dlg_get_attrs    prototype   744 /usr/include/dialog.h extern chtype dlg_get_attrs(WINDOW * /*win*/);
dlg_getbegx      prototype   263 /usr/include/dialog.h extern int dlg_getbegx(WINDOW * /*win*/);
dlg_getbegy      prototype   264 /usr/include/dialog.h extern int dlg_getbegy(WINDOW * /*win*/);
dlg_getc         prototype   724 /usr/include/dialog.h extern int dlg_getc(WINDOW * /*win*/, int * /*fkey*/);
dlg_getc_callbacks prototype   725 /usr/include/dialog.h extern int dlg_getc_callbacks(int /*ch*/, int /*fkey*/, int * /*result*/);
dlg_getcurx      prototype   272 /usr/include/dialog.h extern int dlg_getcurx(WINDOW * /*win*/);
dlg_getcury      prototype   273 /usr/include/dialog.h extern int dlg_getcury(WINDOW * /*win*/);
dlg_getmaxx      prototype   281 /usr/include/dialog.h extern int dlg_getmaxx(WINDOW * /*win*/);
dlg_getmaxy      prototype   282 /usr/include/dialog.h extern int dlg_getmaxy(WINDOW * /*win*/);
dlg_getparx      prototype   290 /usr/include/dialog.h extern int dlg_getparx(WINDOW * /*win*/);
dlg_getpary      prototype   291 /usr/include/dialog.h extern int dlg_getpary(WINDOW * /*win*/);
dlg_index_columns prototype   700 /usr/include/dialog.h extern const int * dlg_index_columns(const char * /*string*/);
dlg_index_wchars prototype   701 /usr/include/dialog.h extern const int * dlg_index_wchars(const char * /*string*/);
dlg_item_help    prototype   780 /usr/include/dialog.h extern void dlg_item_help(const char * /*txt*/);
dlg_killall_bg   prototype   732 /usr/include/dialog.h extern void dlg_killall_bg(int *retval);
dlg_last_getc    prototype   726 /usr/include/dialog.h extern int dlg_last_getc(void);
dlg_limit_columns prototype   706 /usr/include/dialog.h extern int dlg_limit_columns(const char * /*string*/, int /*limit*/, int /*offset*/);
dlg_malloc       macro       560 /usr/include/dialog.h #define dlg_malloc(t,n) (t *) malloc((size_t)(n) * sizeof(t))
dlg_match_char   prototype   669 /usr/include/dialog.h extern int dlg_match_char(int /*ch*/, const char * /*string*/);
dlg_max_input    prototype   756 /usr/include/dialog.h extern int dlg_max_input(int /*max_len*/);
dlg_menu         prototype   642 /usr/include/dialog.h extern int dlg_menu(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*menu_height*/, int /*item_no*/, DIALOG_LISTITEM * /*items*/, int * /*current_item*/, DIALOG_INPUTMENU /*rename_menu*/);
dlg_mouse_bigregion prototype   869 /usr/include/dialog.h extern mseRegion *dlg_mouse_bigregion (int /*y*/, int /*x*/);
dlg_mouse_free_regions macro       858 /usr/include/dialog.h #define dlg_mouse_free_regions() /* nothing */
dlg_mouse_free_regions prototype   847 /usr/include/dialog.h extern void dlg_mouse_free_regions (void);
dlg_mouse_mkbigregion macro       860 /usr/include/dialog.h #define dlg_mouse_mkbigregion(y, x, height, width, code, step_x, step_y, mode) /*nothing*/
dlg_mouse_mkbigregion prototype   848 /usr/include/dialog.h extern void dlg_mouse_mkbigregion (int /*y*/, int /*x*/, int /*height*/, int /*width*/, int /*code*/, int /*step_x*/, int /*step_y*/, int /*mode*/);
dlg_mouse_mkregion macro       859 /usr/include/dialog.h #define dlg_mouse_mkregion(y, x, height, width, code) /*nothing*/
dlg_mouse_mkregion prototype   846 /usr/include/dialog.h extern mseRegion * dlg_mouse_mkregion (int /*y*/, int /*x*/, int /*height*/, int /*width*/, int /*code*/);
dlg_mouse_region prototype   868 /usr/include/dialog.h extern mseRegion *dlg_mouse_region (int /*y*/, int /*x*/);
dlg_mouse_setbase macro       861 /usr/include/dialog.h #define dlg_mouse_setbase(x, y) /*nothing*/
dlg_mouse_setbase prototype   849 /usr/include/dialog.h extern void dlg_mouse_setbase (int /*x*/, int /*y*/);
dlg_mouse_setcode macro       862 /usr/include/dialog.h #define dlg_mouse_setcode(c) /*nothing*/
dlg_mouse_setcode prototype   850 /usr/include/dialog.h extern void dlg_mouse_setcode (int /*code*/);
dlg_mouse_wgetch prototype   870 /usr/include/dialog.h extern int dlg_mouse_wgetch (WINDOW * /*win*/, int * /*fkey*/);
dlg_mouse_wgetch_nowait prototype   871 /usr/include/dialog.h extern int dlg_mouse_wgetch_nowait (WINDOW * /*win*/, int * /*fkey*/);
dlg_move_window  prototype   823 /usr/include/dialog.h extern void dlg_move_window(WINDOW * /*win*/, int /*height*/, int /*width*/, int /*y*/, int /*x*/);
dlg_need_separator prototype   738 /usr/include/dialog.h extern bool dlg_need_separator(void);
dlg_new_modal_window prototype   735 /usr/include/dialog.h extern WINDOW * dlg_new_modal_window(WINDOW * /*parent*/, int /*height*/, int /*width*/, int /*y*/, int /*x*/);
dlg_new_window   prototype   736 /usr/include/dialog.h extern WINDOW * dlg_new_window(int /*height*/, int /*width*/, int /*y*/, int /*x*/);
dlg_next_button  prototype   670 /usr/include/dialog.h extern int dlg_next_button(const char ** /*labels*/, int /*button*/);
dlg_next_ok_buttonindex prototype   671 /usr/include/dialog.h extern int dlg_next_ok_buttonindex(int /*current*/, int /*extra*/);
dlg_ok_buttoncode prototype   672 /usr/include/dialog.h extern int dlg_ok_buttoncode(int /*button*/);
dlg_ok_label     prototype   661 /usr/include/dialog.h extern const char ** dlg_ok_label(void);
dlg_ok_labels    prototype   662 /usr/include/dialog.h extern const char ** dlg_ok_labels(void);
dlg_ordinate     prototype   689 /usr/include/dialog.h extern int dlg_ordinate(const char * /*s*/);
dlg_parse_rc     prototype   716 /usr/include/dialog.h extern int dlg_parse_rc(void);
dlg_prev_button  prototype   673 /usr/include/dialog.h extern int dlg_prev_button(const char ** /*labels*/, int /*button*/);
dlg_prev_ok_buttonindex prototype   674 /usr/include/dialog.h extern int dlg_prev_ok_buttonindex(int /*current*/, int /*extra*/);
dlg_print_autowrap prototype   781 /usr/include/dialog.h extern void dlg_print_autowrap(WINDOW * /*win*/, const char * /*prompt*/, int /*height*/, int /*width*/);
dlg_print_line   prototype   745 /usr/include/dialog.h extern const char * dlg_print_line(WINDOW * /*win*/, chtype * /*attr*/, const char * /*prompt*/, int /*lm*/, int /*rm*/, int * /*x*/);
dlg_print_listitem prototype   782 /usr/include/dialog.h extern void dlg_print_listitem(WINDOW * /*win*/, const char * /*text*/, int /*climit*/, bool /*first*/, int /*selected*/);
dlg_print_scrolled prototype   757 /usr/include/dialog.h extern int dlg_print_scrolled(WINDOW * /* win */, const char * /* prompt */, int /* offset */, int /* height */, int /* width */, int /* pauseopt */);
dlg_print_size   prototype   783 /usr/include/dialog.h extern void dlg_print_size(int /*height*/, int /*width*/);
dlg_print_text   prototype   784 /usr/include/dialog.h extern void dlg_print_text(WINDOW * /*win*/, const char * /*txt*/, int /*len*/, chtype * /*attr*/);
dlg_progressbox  prototype   643 /usr/include/dialog.h extern int dlg_progressbox(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*pauseopt*/, FILE * /* fp */);
dlg_put_backtitle prototype   785 /usr/include/dialog.h extern void dlg_put_backtitle(void);
dlg_realloc      macro       562 /usr/include/dialog.h #define dlg_realloc(t,n,p) (t *) realloc((p), (n) * sizeof(t))
dlg_reallocate_gauge prototype   694 /usr/include/dialog.h extern void * dlg_reallocate_gauge(void * /* objptr */, const char * /* title */, const char * /* cprompt */, int /* height */, int /* width */, int /* percent */);
dlg_remove_callback prototype   731 /usr/include/dialog.h extern void dlg_remove_callback(DIALOG_CALLBACK * /*p*/);
dlg_renamed_menutext prototype   712 /usr/include/dialog.h extern int dlg_renamed_menutext(DIALOG_LISTITEM * /*items*/, int /*current*/, char * /*newtext*/);
dlg_restore_vars prototype   786 /usr/include/dialog.h extern void dlg_restore_vars(DIALOG_VARS * /* save */);
dlg_save_vars    prototype   787 /usr/include/dialog.h extern void dlg_save_vars(DIALOG_VARS * /* save */);
dlg_set_focus    prototype   788 /usr/include/dialog.h extern void dlg_set_focus(WINDOW * /*parent*/, WINDOW * /*win*/);
dlg_set_result   prototype   739 /usr/include/dialog.h extern char * dlg_set_result(const char * /*string*/);
dlg_show_string  prototype   708 /usr/include/dialog.h extern void dlg_show_string(WINDOW * /*win*/, const char * /*string*/, int /*offset*/, chtype /*attr*/, int /*y_base*/, int /*x_base*/, int /*x_last*/, bool /*hidden*/, bool /*force*/);
dlg_strclone     prototype   740 /usr/include/dialog.h extern char * dlg_strclone(const char * /*cprompt*/);
dlg_strcmp       macro       804 /usr/include/dialog.h #define dlg_strcmp(a,b) strcasecmp(a,b)
dlg_strcmp       prototype   806 /usr/include/dialog.h extern int dlg_strcmp(const char * /*a*/, const char * /*b*/);
dlg_strempty     prototype   741 /usr/include/dialog.h extern char * dlg_strempty(void);
dlg_string_to_argv prototype   646 /usr/include/dialog.h extern char ** dlg_string_to_argv(char * /* blob */);
dlg_sub_window   prototype   737 /usr/include/dialog.h extern WINDOW * dlg_sub_window(WINDOW * /*win*/, int /*height*/, int /*width*/, int /*y*/, int /*x*/);
dlg_tab_correct_str prototype   789 /usr/include/dialog.h extern void dlg_tab_correct_str(char * /*prompt*/);
dlg_trace        macro       819 /usr/include/dialog.h #define dlg_trace(fname) /* nothing */
dlg_trace        prototype   814 /usr/include/dialog.h extern void dlg_trace(const char * /*fname*/);
dlg_trace_chr    macro       818 /usr/include/dialog.h #define dlg_trace_chr(ch,fkey) /* nothing */
dlg_trace_chr    prototype   813 /usr/include/dialog.h extern void dlg_trace_chr(int /*ch*/, int /*fkey*/);
dlg_trace_win    macro       817 /usr/include/dialog.h #define dlg_trace_win(win) /* nothing */
dlg_trace_win    prototype   812 /usr/include/dialog.h extern void dlg_trace_win(WINDOW * /*win*/);
dlg_treeview     prototype   721 /usr/include/dialog.h extern int dlg_treeview(const char * /*title*/, const char * /*cprompt*/, int /*height*/, int /*width*/, int /*list_height*/, int /*item_no*/, DIALOG_LISTITEM * /*items*/, const char * /*states*/, int * /*depths*/, int /*flag*/, int * /*current_item*/);
dlg_trim_string  prototype   790 /usr/include/dialog.h extern void dlg_trim_string(char * /*src*/);
dlg_update_gauge prototype   696 /usr/include/dialog.h extern void dlg_update_gauge(void * /* objptr */, int /* percent */);
dlg_wgetparent   prototype   297 /usr/include/dialog.h extern WINDOW * dlg_wgetparent(WINDOW * /*win*/);
dlg_yes_buttoncode prototype   675 /usr/include/dialog.h extern int dlg_yes_buttoncode(int /*button*/);
dlg_yes_labels   prototype   663 /usr/include/dialog.h extern const char ** dlg_yes_labels(void);
draw_bottom_box  macro       321 /usr/include/dialog.h #define draw_bottom_box(win) dlg_draw_bottom_box(win)
draw_box         macro       322 /usr/include/dialog.h #define draw_box(win,y,x,h,w,xc,bc) dlg_draw_box(win,y,x,h,w,xc,bc)
draw_shadow      macro       323 /usr/include/dialog.h #define draw_shadow(win,h,w,y,x) dlg_draw_shadow(win,h,w,y,x)
draw_title       macro       324 /usr/include/dialog.h #define draw_title(win,t) dlg_draw_title(win,t)
end_dialog       prototype   791 /usr/include/dialog.h extern void end_dialog(void);
exit_label       member      484 /usr/include/dialog.h char *exit_label; /* option "--exit-label string" */
exiterr          macro       325 /usr/include/dialog.h #define exiterr dlg_exiterr
extra_button     member      466 /usr/include/dialog.h bool extra_button; /* option "--extra-button" */
extra_label      member      485 /usr/include/dialog.h char *extra_label; /* option "--extra-label string" */
fg               member      570 /usr/include/dialog.h int fg;
finish_string    member      449 /usr/include/dialog.h bool finish_string; /* caching optimization for gauge */
form_active_text_attr macro       380 /usr/include/dialog.h #define form_active_text_attr DIALOG_ATR(30)
form_item_readonly_attr macro       382 /usr/include/dialog.h #define form_item_readonly_attr DIALOG_ATR(32)
form_text_attr   macro       381 /usr/include/dialog.h #define form_text_attr DIALOG_ATR(31)
formitem_type    member      500 /usr/include/dialog.h unsigned formitem_type; /* DIALOG_FORMITEM.type in dialog_form() */
freeback         member      408 /usr/include/dialog.h DIALOG_FREEBACK freeback;
gauge_attr       macro       383 /usr/include/dialog.h #define gauge_attr DIALOG_ATR(33)
getbegx          macro       259 /usr/include/dialog.h #undef getbegx
getbegx          macro       261 /usr/include/dialog.h #define getbegx(win) dlg_getbegx(win)
getbegy          macro       260 /usr/include/dialog.h #undef getbegy
getbegy          macro       262 /usr/include/dialog.h #define getbegy(win) dlg_getbegy(win)
getbegyx         macro       224 /usr/include/dialog.h #undef getbegyx
getbegyx         macro       225 /usr/include/dialog.h #define getbegyx(win,y,x) (y = (win)?(win)->_begy:ERR, x = (win)?(win)->_begx:ERR)
getc_callbacks   member      424 /usr/include/dialog.h DIALOG_CALLBACK *getc_callbacks;
getc_redirect    member      425 /usr/include/dialog.h DIALOG_CALLBACK *getc_redirect;
getcurx          macro       268 /usr/include/dialog.h #undef getcurx
getcurx          macro       270 /usr/include/dialog.h #define getcurx(win) dlg_getcurx(win)
getcury          macro       269 /usr/include/dialog.h #undef getcury
getcury          macro       271 /usr/include/dialog.h #define getcury(win) dlg_getcury(win)
getmaxx          macro       277 /usr/include/dialog.h #undef getmaxx
getmaxx          macro       279 /usr/include/dialog.h #define getmaxx(win) dlg_getmaxx(win)
getmaxy          macro       278 /usr/include/dialog.h #undef getmaxy
getmaxy          macro       280 /usr/include/dialog.h #define getmaxy(win) dlg_getmaxy(win)
getmaxyx         macro       229 /usr/include/dialog.h #undef getmaxyx
getmaxyx         macro       230 /usr/include/dialog.h #define getmaxyx(win,y,x) (y = (win)?(win)->_maxy:ERR, x = (win)?(win)->_maxx:ERR)
getparx          macro       286 /usr/include/dialog.h #undef getparx
getparx          macro       288 /usr/include/dialog.h #define getparx(win) dlg_getparx(win)
getpary          macro       287 /usr/include/dialog.h #undef getpary
getpary          macro       289 /usr/include/dialog.h #define getpary(win) dlg_getpary(win)
getparyx         macro       234 /usr/include/dialog.h #undef getparyx
getparyx         macro       235 /usr/include/dialog.h #define getparyx(win,y,x) (y = (win)?(win)->_pary:ERR, x = (win)?(win)->_parx:ERR)
handle_getc      member      404 /usr/include/dialog.h bool (*handle_getc)(struct _dlg_callback *p, int ch, int fkey, int *result);
handle_input     member      410 /usr/include/dialog.h bool (*handle_input)(struct _dlg_callback *p);
help             member      616 /usr/include/dialog.h char *help;
help             member      634 /usr/include/dialog.h char *help; /* help-message, if any */
help_button      member      467 /usr/include/dialog.h bool help_button; /* option "--help-button" */
help_file        member      517 /usr/include/dialog.h char *help_file; /* option "--hfile" */
help_free        member      635 /usr/include/dialog.h bool help_free; /* ...true if .help can be freed */
help_label       member      486 /usr/include/dialog.h char *help_label; /* option "--help-label string" */
help_line        member      516 /usr/include/dialog.h char *help_line; /* option "--hline" */
help_status      member      468 /usr/include/dialog.h bool help_status; /* option "--help-status" */
help_tags        member      528 /usr/include/dialog.h bool help_tags; /* option "--help-tags" */
hilite           member      572 /usr/include/dialog.h int hilite;
in_helpfile      member      518 /usr/include/dialog.h bool in_helpfile; /* flag to prevent recursion in --hfile */
init_dialog      prototype   792 /usr/include/dialog.h extern void init_dialog(FILE * /*input*/, FILE * /*output*/);
input            member      400 /usr/include/dialog.h FILE *input;
input            member      441 /usr/include/dialog.h FILE *input; /* option "--input-fd fd" */
input_length     member      498 /usr/include/dialog.h unsigned input_length; /* nonzero if input_result is allocated */
input_menu       member      469 /usr/include/dialog.h bool input_menu; /* menu vs inputmenu widget */
input_ready      member      411 /usr/include/dialog.h bool input_ready;
input_result     member      487 /usr/include/dialog.h char *input_result;
inputbox_attr    macro       361 /usr/include/dialog.h #define inputbox_attr DIALOG_ATR(11)
inputbox_border2_attr macro       385 /usr/include/dialog.h #define inputbox_border2_attr DIALOG_ATR(35)
inputbox_border_attr macro       362 /usr/include/dialog.h #define inputbox_border_attr DIALOG_ATR(12)
insecure         member      470 /usr/include/dialog.h bool insecure; /* option "--insecure" */
item_attr        macro       369 /usr/include/dialog.h #define item_attr DIALOG_ATR(19)
item_help        member      471 /usr/include/dialog.h bool item_help; /* option "--item-help" */
item_selected_attr macro       370 /usr/include/dialog.h #define item_selected_attr DIALOG_ATR(20)
itemhelp_attr    macro       379 /usr/include/dialog.h #define itemhelp_attr DIALOG_ATR(29)
keep_bg          member      402 /usr/include/dialog.h bool keep_bg; /* keep in background, on exit */
keep_tite        member      502 /usr/include/dialog.h bool keep_tite; /* option "--keep-tite" */
keep_win         member      405 /usr/include/dialog.h bool keep_win; /* true to not erase window on exit */
keep_window      member      472 /usr/include/dialog.h bool keep_window; /* option "--keep-window" */
killall_bg       macro       326 /usr/include/dialog.h #define killall_bg(n) dlg_killall_bg(n)
last_key         member      526 /usr/include/dialog.h bool last_key; /* option "--last-key" */
max_input        member      494 /usr/include/dialog.h int max_input; /* option "--max-input size" */
menubox_attr     macro       367 /usr/include/dialog.h #define menubox_attr DIALOG_ATR(17)
menubox_border2_attr macro       387 /usr/include/dialog.h #define menubox_border2_attr DIALOG_ATR(37)
menubox_border_attr macro       368 /usr/include/dialog.h #define menubox_border_attr DIALOG_ATR(18)
mode             member      837 /usr/include/dialog.h int mode, step_x, step_y;
mouse_bigregion  macro       327 /usr/include/dialog.h #define mouse_bigregion(y,x) dlg_mouse_bigregion(y,x)
mouse_close      macro       844 /usr/include/dialog.h #define mouse_close() mousemask(0, (mmask_t *) 0)
mouse_close      macro       857 /usr/include/dialog.h #define mouse_close() /*nothing*/
mouse_free_regions macro       328 /usr/include/dialog.h #define mouse_free_regions() dlg_mouse_free_regions()
mouse_mkbigregion macro       329 /usr/include/dialog.h #define mouse_mkbigregion(y,x,h,w,n,ix,iy,m) dlg_mouse_mkbigregion(y,x,h,w,n,ix,iy,m)
mouse_mkbutton   macro       873 /usr/include/dialog.h #define mouse_mkbutton(y,x,len,code) dlg_mouse_mkregion(y,x,1,len,code);
mouse_mkregion   macro       330 /usr/include/dialog.h #define mouse_mkregion(y,x,h,w,n) dlg_mouse_mkregion(y,x,h,w,n)
mouse_open       macro       843 /usr/include/dialog.h #define mouse_open() mousemask(BUTTON1_CLICKED, (mmask_t *) 0)
mouse_open       macro       856 /usr/include/dialog.h #define mouse_open() /*nothing*/
mouse_region     macro       331 /usr/include/dialog.h #define mouse_region(y,x) dlg_mouse_region(y,x)
mouse_setbase    macro       332 /usr/include/dialog.h #define mouse_setbase(x,y) dlg_mouse_setbase(x,y)
mouse_setcode    macro       333 /usr/include/dialog.h #define mouse_setcode(c) dlg_mouse_setcode(c)
mouse_wgetch     macro       334 /usr/include/dialog.h #define mouse_wgetch(w,c) dlg_mouse_wgetch(w,c)
mseRegion        struct      835 /usr/include/dialog.h typedef struct mseRegion {
mseRegion        typedef     839 /usr/include/dialog.h } mseRegion;
mseRegion::X     member      836 /usr/include/dialog.h int x, y, X, Y, code;
mseRegion::Y     member      836 /usr/include/dialog.h int x, y, X, Y, code;
mseRegion::code  member      836 /usr/include/dialog.h int x, y, X, Y, code;
mseRegion::mode  member      837 /usr/include/dialog.h int mode, step_x, step_y;
mseRegion::next  member      838 /usr/include/dialog.h struct mseRegion *next;
mseRegion::step_x member      837 /usr/include/dialog.h int mode, step_x, step_y;
mseRegion::step_y member      837 /usr/include/dialog.h int mode, step_x, step_y;
mseRegion::x     member      836 /usr/include/dialog.h int x, y, X, Y, code;
mseRegion::y     member      836 /usr/include/dialog.h int x, y, X, Y, code;
name             member      575 /usr/include/dialog.h const char *name;
name             member      614 /usr/include/dialog.h char *name;
name             member      622 /usr/include/dialog.h char *name; /* the field label */
name_free        member      626 /usr/include/dialog.h bool name_free; /* ...true if .name can be freed */
name_len         member      623 /usr/include/dialog.h int name_len; /* ...its length */
name_x           member      625 /usr/include/dialog.h int name_x; /* ...its x-ordinate */
name_y           member      624 /usr/include/dialog.h int name_y; /* ...its y-ordinate */
new_window       macro       335 /usr/include/dialog.h #define new_window(h,w,y,x) dlg_new_window(h,w,y,x)
next             member      399 /usr/include/dialog.h struct _dlg_callback *next;
next             member      415 /usr/include/dialog.h struct _dlg_windows *next;
next             member      838 /usr/include/dialog.h struct mseRegion *next;
no_items         member      524 /usr/include/dialog.h bool no_items; /* option "--no-items" */
no_label         member      488 /usr/include/dialog.h char *no_label; /* option "--no-label string" */
no_lines         member      504 /usr/include/dialog.h bool no_lines; /* option "--no-lines" */
no_mouse         member      446 /usr/include/dialog.h bool no_mouse; /* option "--no-mouse" */
no_nl_expand     member      519 /usr/include/dialog.h bool no_nl_expand; /* option "--no-nl-expand" */
no_tags          member      523 /usr/include/dialog.h bool no_tags; /* option "--no-tags" */
nocancel         member      473 /usr/include/dialog.h bool nocancel; /* option "--no-cancel" */
nocollapse       member      474 /usr/include/dialog.h bool nocollapse; /* option "--no-collapse" */
nook             member      506 /usr/include/dialog.h bool nook; /* option "--no-ok" */
normal           member      416 /usr/include/dialog.h WINDOW *normal;
ok_label         member      489 /usr/include/dialog.h char *ok_label; /* option "--ok-label string" */
output           member      428 /usr/include/dialog.h FILE *output; /* option "--output-fd fd" */
output_count     member      438 /usr/include/dialog.h int output_count; /* # of widgets that may have done output */
output_separator member      511 /usr/include/dialog.h char *output_separator; /* option "--output-separator" */
parse_rc         macro       336 /usr/include/dialog.h #define parse_rc() dlg_parse_rc()
pipe_input       member      429 /usr/include/dialog.h FILE *pipe_input; /* used for gauge widget */
position_indicator_attr macro       366 /usr/include/dialog.h #define position_indicator_attr DIALOG_ATR(16)
print_autowrap   macro       337 /usr/include/dialog.h #define print_autowrap(win,s,h,w) dlg_print_autowrap(win,s,h,w)
print_siz        member      475 /usr/include/dialog.h bool print_siz; /* option "--print-size" */
print_size       macro       338 /usr/include/dialog.h #define print_size(h,w) dlg_print_size(h,w)
put_backtitle    macro       339 /usr/include/dialog.h #define put_backtitle() dlg_put_backtitle()
quoted           member      508 /usr/include/dialog.h bool quoted; /* option "--quoted" */
scale_factor     member      495 /usr/include/dialog.h int scale_factor; /* RESERVED */
screen_attr      macro       350 /usr/include/dialog.h #define screen_attr DIALOG_ATR(0)
screen_initialized member      431 /usr/include/dialog.h bool screen_initialized;
screen_output    member      430 /usr/include/dialog.h FILE *screen_output; /* newterm(), etc. */
searchbox_attr   macro       363 /usr/include/dialog.h #define searchbox_attr DIALOG_ATR(13)
searchbox_border2_attr macro       386 /usr/include/dialog.h #define searchbox_border2_attr DIALOG_ATR(36)
searchbox_border_attr macro       365 /usr/include/dialog.h #define searchbox_border_attr DIALOG_ATR(15)
searchbox_title_attr macro       364 /usr/include/dialog.h #define searchbox_title_attr DIALOG_ATR(14)
separate_output  member      476 /usr/include/dialog.h bool separate_output; /* option "--separate-output" */
separate_str     member      436 /usr/include/dialog.h char *separate_str; /* option "--separate-widget string" */
shadow           member      417 /usr/include/dialog.h WINDOW *shadow;
shadow_attr      macro       351 /usr/include/dialog.h #define shadow_attr DIALOG_ATR(1)
single_quoted    member      477 /usr/include/dialog.h bool single_quoted; /* option "--single-quoted" */
size_err         member      478 /usr/include/dialog.h bool size_err; /* option "--size-err" */
sleep_secs       member      496 /usr/include/dialog.h int sleep_secs; /* option "--sleep secs" */
state            member      617 /usr/include/dialog.h int state;
step_x           member      837 /usr/include/dialog.h int mode, step_x, step_y;
step_y           member      837 /usr/include/dialog.h int mode, step_x, step_y;
strclone         macro       340 /usr/include/dialog.h #define strclone(cprompt) dlg_strclone(cprompt)
sub_window       macro       341 /usr/include/dialog.h #define sub_window(win,h,w,y,x) dlg_sub_window(win,h,w,y,x)
tab_correct      member      479 /usr/include/dialog.h bool tab_correct; /* option "--tab-correct" */
tab_correct_str  macro       342 /usr/include/dialog.h #define tab_correct_str(s) dlg_tab_correct_str(s)
tab_len          member      439 /usr/include/dialog.h int tab_len; /* option "--tab-len n" */
tag_attr         macro       371 /usr/include/dialog.h #define tag_attr DIALOG_ATR(21)
tag_key_attr     macro       373 /usr/include/dialog.h #define tag_key_attr DIALOG_ATR(23)
tag_key_selected_attr macro       374 /usr/include/dialog.h #define tag_key_selected_attr DIALOG_ATR(24)
tag_selected_attr macro       372 /usr/include/dialog.h #define tag_selected_attr DIALOG_ATR(22)
text             member      615 /usr/include/dialog.h char *text;
text             member      627 /usr/include/dialog.h char *text; /* the field contents */
text_flen        member      631 /usr/include/dialog.h int text_flen; /* ...its length on screen, or 0 if no input allowed */
text_free        member      633 /usr/include/dialog.h bool text_free; /* ...true if .text can be freed */
text_ilen        member      632 /usr/include/dialog.h int text_ilen; /* ...its limit on amount to be entered */
text_len         member      628 /usr/include/dialog.h int text_len; /* ...its length on the screen */
text_x           member      630 /usr/include/dialog.h int text_x; /* ...its x-ordinate */
text_y           member      629 /usr/include/dialog.h int text_y; /* ...its y-ordinate */
time_format      member      514 /usr/include/dialog.h char *time_format; /* option "--time-format" */
timeout_secs     member      497 /usr/include/dialog.h int timeout_secs; /* option "--timeout secs" */
title            member      490 /usr/include/dialog.h char *title; /* option "--title title" */
title_attr       macro       353 /usr/include/dialog.h #define title_attr DIALOG_ATR(3)
trace_output     member      443 /usr/include/dialog.h FILE *trace_output; /* option "--trace file" */
trim_whitespace  member      480 /usr/include/dialog.h bool trim_whitespace; /* option "--trim" */
type             member      621 /usr/include/dialog.h unsigned type; /* the field type (0=input, 1=password) */
uarrow_attr      macro       377 /usr/include/dialog.h #define uarrow_attr DIALOG_ATR(27)
use_colors       member      432 /usr/include/dialog.h bool use_colors; /* use colors by default? */
use_scrollbar    member      433 /usr/include/dialog.h bool use_scrollbar; /* option "--scrollbar" */
use_shadow       member      434 /usr/include/dialog.h bool use_shadow; /* shadow dialog boxes by default? */
visit_cols       member      447 /usr/include/dialog.h int visit_cols; /* option "--visit-items" */
visit_items      member      435 /usr/include/dialog.h bool visit_items; /* option "--visit-items" */
wcursyncup       macro       249 /usr/include/dialog.h #undef wcursyncup
wcursyncup       macro       250 /usr/include/dialog.h #define wcursyncup(win) /* nothing */
wgetparent       macro       239 /usr/include/dialog.h #undef wgetparent
wgetparent       macro       240 /usr/include/dialog.h #define wgetparent(win) ((win) ? (win)->_parent : 0)
wgetparent       macro       295 /usr/include/dialog.h #undef wgetparent
wgetparent       macro       296 /usr/include/dialog.h #define wgetparent(win) dlg_wgetparent(win)
win              member      401 /usr/include/dialog.h WINDOW *win;
wsyncup          macro       244 /usr/include/dialog.h #undef wsyncup
wsyncup          macro       245 /usr/include/dialog.h #define wsyncup(win) /* nothing */
x                member      836 /usr/include/dialog.h int x, y, X, Y, code;
y                member      836 /usr/include/dialog.h int x, y, X, Y, code;
yes_label        member      491 /usr/include/dialog.h char *yes_label; /* option "--yes-label string" */
