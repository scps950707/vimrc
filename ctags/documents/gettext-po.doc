LIBGETTEXTPO_VERSION macro        31 /usr/include/gettext-po.h #define LIBGETTEXTPO_VERSION 0x001203
PO_SEVERITY_ERROR macro        90 /usr/include/gettext-po.h #define PO_SEVERITY_ERROR 1 /* an error, the operation cannot complete */
PO_SEVERITY_FATAL_ERROR macro        91 /usr/include/gettext-po.h #define PO_SEVERITY_FATAL_ERROR 2 /* an error, the operation must be aborted */
PO_SEVERITY_WARNING macro        89 /usr/include/gettext-po.h #define PO_SEVERITY_WARNING 0 /* just a warning, tell the user */
_GETTEXT_PO_H    macro        19 /usr/include/gettext-po.h #define _GETTEXT_PO_H 1
error            member       56 /usr/include/gettext-po.h void (*error) (int status, int errnum,
error_at_line    member       68 /usr/include/gettext-po.h void (*error_at_line) (int status, int errnum,
libgettextpo_version externvar    32 /usr/include/gettext-po.h extern int libgettextpo_version;
multiline_error  member       84 /usr/include/gettext-po.h void (*multiline_error) (char *prefix, char *message);
multiline_warning member       78 /usr/include/gettext-po.h void (*multiline_warning) (char *prefix, char *message);
po_error_handler struct       50 /usr/include/gettext-po.h struct po_error_handler
po_error_handler::error member       56 /usr/include/gettext-po.h void (*error) (int status, int errnum,
po_error_handler::error_at_line member       68 /usr/include/gettext-po.h void (*error_at_line) (int status, int errnum,
po_error_handler::multiline_error member       84 /usr/include/gettext-po.h void (*multiline_error) (char *prefix, char *message);
po_error_handler::multiline_warning member       78 /usr/include/gettext-po.h void (*multiline_warning) (char *prefix, char *message);
po_error_handler_t typedef      86 /usr/include/gettext-po.h typedef const struct po_error_handler *po_error_handler_t;
po_file_check_all prototype   339 /usr/include/gettext-po.h extern void po_file_check_all (po_file_t file, po_xerror_handler_t handler);
po_file_create   prototype   131 /usr/include/gettext-po.h extern po_file_t po_file_create (void);
po_file_domain_header prototype   157 /usr/include/gettext-po.h extern const char * po_file_domain_header (po_file_t file, const char *domain);
po_file_domains  prototype   149 /usr/include/gettext-po.h extern const char * const * po_file_domains (po_file_t file);
po_file_free     prototype   146 /usr/include/gettext-po.h extern void po_file_free (po_file_t file);
po_file_read     macro       135 /usr/include/gettext-po.h #define po_file_read po_file_read_v3
po_file_read     prototype   136 /usr/include/gettext-po.h extern po_file_t po_file_read (const char *filename,
po_file_t        typedef      37 /usr/include/gettext-po.h typedef struct po_file *po_file_t;
po_file_write    macro       141 /usr/include/gettext-po.h #define po_file_write po_file_write_v2
po_file_write    prototype   142 /usr/include/gettext-po.h extern po_file_t po_file_write (po_file_t file, const char *filename,
po_filepos_file  prototype   317 /usr/include/gettext-po.h extern const char * po_filepos_file (po_filepos_t filepos);
po_filepos_start_line prototype   321 /usr/include/gettext-po.h extern size_t po_filepos_start_line (po_filepos_t filepos);
po_filepos_t     typedef      47 /usr/include/gettext-po.h typedef struct po_filepos *po_filepos_t;
po_format_list   prototype   327 /usr/include/gettext-po.h extern const char * const * po_format_list (void);
po_format_pretty_name prototype   332 /usr/include/gettext-po.h extern const char * po_format_pretty_name (const char *format_type);
po_header_field  prototype   162 /usr/include/gettext-po.h extern char * po_header_field (const char *header, const char *field);
po_header_set_field prototype   167 /usr/include/gettext-po.h extern char * po_header_set_field (const char *header, const char *field, const char *value);
po_message_add_filepos prototype   261 /usr/include/gettext-po.h extern void po_message_add_filepos (po_message_t message, const char *file, size_t start_line);
po_message_check_all prototype   344 /usr/include/gettext-po.h extern void po_message_check_all (po_message_t message, po_message_iterator_t iterator, po_xerror_handler_t handler);
po_message_check_format macro       349 /usr/include/gettext-po.h #define po_message_check_format po_message_check_format_v2
po_message_check_format prototype   350 /usr/include/gettext-po.h extern void po_message_check_format (po_message_t message, po_xerror_handler_t handler);
po_message_comments prototype   234 /usr/include/gettext-po.h extern const char * po_message_comments (po_message_t message);
po_message_create prototype   193 /usr/include/gettext-po.h extern po_message_t po_message_create (void);
po_message_extracted_comments prototype   241 /usr/include/gettext-po.h extern const char * po_message_extracted_comments (po_message_t message);
po_message_filepos prototype   249 /usr/include/gettext-po.h extern po_filepos_t po_message_filepos (po_message_t message, int i);
po_message_insert prototype   186 /usr/include/gettext-po.h extern void po_message_insert (po_message_iterator_t iterator, po_message_t message);
po_message_is_format prototype   299 /usr/include/gettext-po.h extern int po_message_is_format (po_message_t message, const char *format_type);
po_message_is_fuzzy prototype   292 /usr/include/gettext-po.h extern int po_message_is_fuzzy (po_message_t message);
po_message_is_obsolete prototype   286 /usr/include/gettext-po.h extern int po_message_is_obsolete (po_message_t message);
po_message_is_range prototype   306 /usr/include/gettext-po.h extern int po_message_is_range (po_message_t message, int *minp, int *maxp);
po_message_iterator prototype   174 /usr/include/gettext-po.h extern po_message_iterator_t po_message_iterator (po_file_t file, const char *domain);
po_message_iterator_free prototype   177 /usr/include/gettext-po.h extern void po_message_iterator_free (po_message_iterator_t iterator);
po_message_iterator_t typedef      41 /usr/include/gettext-po.h typedef struct po_message_iterator *po_message_iterator_t;
po_message_msgctxt prototype   197 /usr/include/gettext-po.h extern const char * po_message_msgctxt (po_message_t message);
po_message_msgid prototype   204 /usr/include/gettext-po.h extern const char * po_message_msgid (po_message_t message);
po_message_msgid_plural prototype   211 /usr/include/gettext-po.h extern const char * po_message_msgid_plural (po_message_t message);
po_message_msgstr prototype   219 /usr/include/gettext-po.h extern const char * po_message_msgstr (po_message_t message);
po_message_msgstr_plural prototype   227 /usr/include/gettext-po.h extern const char * po_message_msgstr_plural (po_message_t message, int index);
po_message_prev_msgctxt prototype   264 /usr/include/gettext-po.h extern const char * po_message_prev_msgctxt (po_message_t message);
po_message_prev_msgid prototype   271 /usr/include/gettext-po.h extern const char * po_message_prev_msgid (po_message_t message);
po_message_prev_msgid_plural prototype   279 /usr/include/gettext-po.h extern const char * po_message_prev_msgid_plural (po_message_t message);
po_message_remove_filepos prototype   254 /usr/include/gettext-po.h extern void po_message_remove_filepos (po_message_t message, int i);
po_message_set_comments prototype   238 /usr/include/gettext-po.h extern void po_message_set_comments (po_message_t message, const char *comments);
po_message_set_extracted_comments prototype   245 /usr/include/gettext-po.h extern void po_message_set_extracted_comments (po_message_t message, const char *comments);
po_message_set_format prototype   302 /usr/include/gettext-po.h extern void po_message_set_format (po_message_t message, const char *format_type, /*bool*/int value);
po_message_set_fuzzy prototype   295 /usr/include/gettext-po.h extern void po_message_set_fuzzy (po_message_t message, int fuzzy);
po_message_set_msgctxt prototype   201 /usr/include/gettext-po.h extern void po_message_set_msgctxt (po_message_t message, const char *msgctxt);
po_message_set_msgid prototype   207 /usr/include/gettext-po.h extern void po_message_set_msgid (po_message_t message, const char *msgid);
po_message_set_msgid_plural prototype   215 /usr/include/gettext-po.h extern void po_message_set_msgid_plural (po_message_t message, const char *msgid_plural);
po_message_set_msgstr prototype   223 /usr/include/gettext-po.h extern void po_message_set_msgstr (po_message_t message, const char *msgstr);
po_message_set_msgstr_plural prototype   231 /usr/include/gettext-po.h extern void po_message_set_msgstr_plural (po_message_t message, int index, const char *msgstr);
po_message_set_obsolete prototype   289 /usr/include/gettext-po.h extern void po_message_set_obsolete (po_message_t message, int obsolete);
po_message_set_prev_msgctxt prototype   267 /usr/include/gettext-po.h extern void po_message_set_prev_msgctxt (po_message_t message, const char *prev_msgctxt);
po_message_set_prev_msgid prototype   275 /usr/include/gettext-po.h extern void po_message_set_prev_msgid (po_message_t message, const char *prev_msgid);
po_message_set_prev_msgid_plural prototype   283 /usr/include/gettext-po.h extern void po_message_set_prev_msgid_plural (po_message_t message, const char *prev_msgid_plural);
po_message_set_range prototype   311 /usr/include/gettext-po.h extern void po_message_set_range (po_message_t message, int min, int max);
po_message_t     typedef      44 /usr/include/gettext-po.h typedef struct po_message *po_message_t;
po_next_message  prototype   181 /usr/include/gettext-po.h extern po_message_t po_next_message (po_message_iterator_t iterator);
po_xerror_handler struct       92 /usr/include/gettext-po.h struct po_xerror_handler
po_xerror_handler::xerror member      103 /usr/include/gettext-po.h void (*xerror) (int severity,
po_xerror_handler::xerror2 member      111 /usr/include/gettext-po.h void (*xerror2) (int severity,
po_xerror_handler_t typedef     119 /usr/include/gettext-po.h typedef const struct po_xerror_handler *po_xerror_handler_t;
xerror           member      103 /usr/include/gettext-po.h void (*xerror) (int severity,
xerror2          member      111 /usr/include/gettext-po.h void (*xerror2) (int severity,
