F_LOCK           macro       216 /usr/include/fcntl.h # define F_LOCK 1 /* Lock a region for exclusive use. */
F_OK             macro       121 /usr/include/fcntl.h # define F_OK 0 /* Test for existence. */
F_TEST           macro       218 /usr/include/fcntl.h # define F_TEST 3 /* Test a region for other processes locks. */
F_TLOCK          macro       217 /usr/include/fcntl.h # define F_TLOCK 2 /* Test and lock a region for exclusive use. */
F_ULOCK          macro       215 /usr/include/fcntl.h # define F_ULOCK 0 /* Unlock a previously locked region. */
R_OK             macro       118 /usr/include/fcntl.h # define R_OK 4 /* Test for read permission. */
SEEK_CUR         macro       128 /usr/include/fcntl.h # define SEEK_CUR 1 /* Seek from current position. */
SEEK_END         macro       129 /usr/include/fcntl.h # define SEEK_END 2 /* Seek from end of file. */
SEEK_SET         macro       127 /usr/include/fcntl.h # define SEEK_SET 0 /* Seek from beginning of file. */
S_IFBLK          macro        73 /usr/include/fcntl.h # define S_IFBLK __S_IFBLK
S_IFCHR          macro        72 /usr/include/fcntl.h # define S_IFCHR __S_IFCHR
S_IFDIR          macro        71 /usr/include/fcntl.h # define S_IFDIR __S_IFDIR
S_IFIFO          macro        76 /usr/include/fcntl.h # define S_IFIFO __S_IFIFO
S_IFLNK          macro        79 /usr/include/fcntl.h # define S_IFLNK __S_IFLNK
S_IFMT           macro        70 /usr/include/fcntl.h # define S_IFMT __S_IFMT
S_IFREG          macro        74 /usr/include/fcntl.h # define S_IFREG __S_IFREG
S_IFSOCK         macro        82 /usr/include/fcntl.h # define S_IFSOCK __S_IFSOCK
S_IRGRP          macro       101 /usr/include/fcntl.h # define S_IRGRP (S_IRUSR >> 3) /* Read by group. */
S_IROTH          macro       107 /usr/include/fcntl.h # define S_IROTH (S_IRGRP >> 3) /* Read by others. */
S_IRUSR          macro        95 /usr/include/fcntl.h # define S_IRUSR __S_IREAD /* Read by owner. */
S_IRWXG          macro       105 /usr/include/fcntl.h # define S_IRWXG (S_IRWXU >> 3)
S_IRWXO          macro       111 /usr/include/fcntl.h # define S_IRWXO (S_IRWXG >> 3)
S_IRWXU          macro        99 /usr/include/fcntl.h # define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)
S_ISGID          macro        88 /usr/include/fcntl.h # define S_ISGID __S_ISGID /* Set group ID on execution. */
S_ISUID          macro        87 /usr/include/fcntl.h # define S_ISUID __S_ISUID /* Set user ID on execution. */
S_ISVTX          macro        92 /usr/include/fcntl.h # define S_ISVTX __S_ISVTX
S_IWGRP          macro       102 /usr/include/fcntl.h # define S_IWGRP (S_IWUSR >> 3) /* Write by group. */
S_IWOTH          macro       108 /usr/include/fcntl.h # define S_IWOTH (S_IWGRP >> 3) /* Write by others. */
S_IWUSR          macro        96 /usr/include/fcntl.h # define S_IWUSR __S_IWRITE /* Write by owner. */
S_IXGRP          macro       103 /usr/include/fcntl.h # define S_IXGRP (S_IXUSR >> 3) /* Execute by group. */
S_IXOTH          macro       109 /usr/include/fcntl.h # define S_IXOTH (S_IXGRP >> 3) /* Execute by others. */
S_IXUSR          macro        97 /usr/include/fcntl.h # define S_IXUSR __S_IEXEC /* Execute by owner. */
W_OK             macro       119 /usr/include/fcntl.h # define W_OK 2 /* Test for write permission. */
X_OK             macro       120 /usr/include/fcntl.h # define X_OK 1 /* Test for execute permission. */
_FCNTL_H         macro        23 /usr/include/fcntl.h #define _FCNTL_H 1
__REDIRECT       prototype   149 /usr/include/fcntl.h extern int __REDIRECT (open, (const char *__file, int __oflag, ...), open64)
__REDIRECT       prototype   174 /usr/include/fcntl.h extern int __REDIRECT (openat, (int __fd, const char *__file, int __oflag,
__REDIRECT       prototype   195 /usr/include/fcntl.h extern int __REDIRECT (creat, (const char *__file, mode_t __mode),
__REDIRECT       prototype   224 /usr/include/fcntl.h extern int __REDIRECT (lockf, (int __fd, int __cmd, __off64_t __len), lockf64);
__REDIRECT       prototype   263 /usr/include/fcntl.h extern int __REDIRECT (posix_fallocate, (int __fd, __off64_t __offset,
__REDIRECT_NTH   prototype   242 /usr/include/fcntl.h extern int __REDIRECT_NTH (posix_fadvise, (int __fd, __off64_t __offset,
__mode_t_defined macro        42 /usr/include/fcntl.h # define __mode_t_defined
__need_timespec  macro        66 /usr/include/fcntl.h # define __need_timespec
__off64_t_defined macro        56 /usr/include/fcntl.h # define __off64_t_defined
__off_t_defined  macro        51 /usr/include/fcntl.h # define __off_t_defined
__pid_t_defined  macro        61 /usr/include/fcntl.h # define __pid_t_defined
creat            macro       198 /usr/include/fcntl.h # define creat creat64
creat            prototype   192 /usr/include/fcntl.h extern int creat (const char *__file, mode_t __mode) __nonnull ((1));
creat64          prototype   202 /usr/include/fcntl.h extern int creat64 (const char *__file, mode_t __mode) __nonnull ((1));
fcntl            prototype   137 /usr/include/fcntl.h extern int fcntl (int __fd, int __cmd, ...);
lockf            macro       226 /usr/include/fcntl.h # define lockf lockf64
lockf            prototype   221 /usr/include/fcntl.h extern int lockf (int __fd, int __cmd, off_t __len);
lockf64          prototype   230 /usr/include/fcntl.h extern int lockf64 (int __fd, int __cmd, off64_t __len);
mode_t           typedef      41 /usr/include/fcntl.h typedef __mode_t mode_t;
off64_t          typedef      55 /usr/include/fcntl.h typedef __off64_t off64_t;
off_t            typedef      47 /usr/include/fcntl.h typedef __off_t off_t;
off_t            typedef      49 /usr/include/fcntl.h typedef __off64_t off_t;
open             macro       152 /usr/include/fcntl.h # define open open64
open             prototype   146 /usr/include/fcntl.h extern int open (const char *__file, int __oflag, ...) __nonnull ((1));
open64           prototype   156 /usr/include/fcntl.h extern int open64 (const char *__file, int __oflag, ...) __nonnull ((1));
openat           macro       177 /usr/include/fcntl.h # define openat openat64
openat           prototype   170 /usr/include/fcntl.h extern int openat (int __fd, const char *__file, int __oflag, ...)
openat64         prototype   181 /usr/include/fcntl.h extern int openat64 (int __fd, const char *__file, int __oflag, ...)
pid_t            typedef      60 /usr/include/fcntl.h typedef __pid_t pid_t;
posix_fadvise    macro       246 /usr/include/fcntl.h # define posix_fadvise posix_fadvise64
posix_fadvise    prototype   238 /usr/include/fcntl.h extern int posix_fadvise (int __fd, off_t __offset, off_t __len,
posix_fadvise64  prototype   250 /usr/include/fcntl.h extern int posix_fadvise64 (int __fd, off64_t __offset, off64_t __len,
posix_fallocate  macro       267 /usr/include/fcntl.h # define posix_fallocate posix_fallocate64
posix_fallocate  prototype   260 /usr/include/fcntl.h extern int posix_fallocate (int __fd, off_t __offset, off_t __len);
posix_fallocate64 prototype   271 /usr/include/fcntl.h extern int posix_fallocate64 (int __fd, off64_t __offset, off64_t __len);
