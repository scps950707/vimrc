DF_1_CONFALT     macro       803 /usr/include/elf.h #define DF_1_CONFALT 0x00002000 /* Configuration alternative created.*/
DF_1_DIRECT      macro       798 /usr/include/elf.h #define DF_1_DIRECT 0x00000100 /* Direct binding enabled. */
DF_1_DISPRELDNE  macro       805 /usr/include/elf.h #define DF_1_DISPRELDNE 0x00008000 /* Disp reloc applied at build time. */
DF_1_DISPRELPND  macro       806 /usr/include/elf.h #define DF_1_DISPRELPND 0x00010000 /* Disp reloc applied at run-time. */
DF_1_EDITED      macro       811 /usr/include/elf.h #define DF_1_EDITED 0x00200000 /* Object is modified after built. */
DF_1_ENDFILTEE   macro       804 /usr/include/elf.h #define DF_1_ENDFILTEE 0x00004000 /* Filtee terminates filters search. */
DF_1_GLOBAL      macro       791 /usr/include/elf.h #define DF_1_GLOBAL 0x00000002 /* Set RTLD_GLOBAL for this object. */
DF_1_GLOBAUDIT   macro       814 /usr/include/elf.h #define DF_1_GLOBAUDIT 0x01000000 /* Global auditing required. */
DF_1_GROUP       macro       792 /usr/include/elf.h #define DF_1_GROUP 0x00000004 /* Set RTLD_GROUP for this object. */
DF_1_IGNMULDEF   macro       808 /usr/include/elf.h #define DF_1_IGNMULDEF 0x00040000
DF_1_INITFIRST   macro       795 /usr/include/elf.h #define DF_1_INITFIRST 0x00000020 /* Set RTLD_INITFIRST for this object*/
DF_1_INTERPOSE   macro       800 /usr/include/elf.h #define DF_1_INTERPOSE 0x00000400 /* Object is used to interpose. */
DF_1_LOADFLTR    macro       794 /usr/include/elf.h #define DF_1_LOADFLTR 0x00000010 /* Trigger filtee loading at runtime.*/
DF_1_NODEFLIB    macro       801 /usr/include/elf.h #define DF_1_NODEFLIB 0x00000800 /* Ignore default lib search path. */
DF_1_NODELETE    macro       793 /usr/include/elf.h #define DF_1_NODELETE 0x00000008 /* Set RTLD_NODELETE for this object.*/
DF_1_NODIRECT    macro       807 /usr/include/elf.h #define DF_1_NODIRECT 0x00020000 /* Object has no-direct binding. */
DF_1_NODUMP      macro       802 /usr/include/elf.h #define DF_1_NODUMP 0x00001000 /* Object can't be dldump'ed. */
DF_1_NOHDR       macro       810 /usr/include/elf.h #define DF_1_NOHDR 0x00100000
DF_1_NOKSYMS     macro       809 /usr/include/elf.h #define DF_1_NOKSYMS 0x00080000
DF_1_NOOPEN      macro       796 /usr/include/elf.h #define DF_1_NOOPEN 0x00000040 /* Set RTLD_NOOPEN for this object. */
DF_1_NORELOC     macro       812 /usr/include/elf.h #define DF_1_NORELOC 0x00400000
DF_1_NOW         macro       790 /usr/include/elf.h #define DF_1_NOW 0x00000001 /* Set RTLD_NOW for this object. */
DF_1_ORIGIN      macro       797 /usr/include/elf.h #define DF_1_ORIGIN 0x00000080 /* $ORIGIN must be handled. */
DF_1_SINGLETON   macro       815 /usr/include/elf.h #define DF_1_SINGLETON 0x02000000 /* Singleton symbols are used. */
DF_1_SYMINTPOSE  macro       813 /usr/include/elf.h #define DF_1_SYMINTPOSE 0x00800000 /* Object has individual interposers. */
DF_1_TRANS       macro       799 /usr/include/elf.h #define DF_1_TRANS 0x00000200
DF_BIND_NOW      macro       785 /usr/include/elf.h #define DF_BIND_NOW 0x00000008 /* No lazy binding for this object */
DF_ORIGIN        macro       782 /usr/include/elf.h #define DF_ORIGIN 0x00000001 /* Object may use DF_ORIGIN */
DF_P1_GROUPPERM  macro       823 /usr/include/elf.h #define DF_P1_GROUPPERM 0x00000002 /* Symbols from next object are not
DF_P1_LAZYLOAD   macro       822 /usr/include/elf.h #define DF_P1_LAZYLOAD 0x00000001 /* Lazyload following object. */
DF_STATIC_TLS    macro       786 /usr/include/elf.h #define DF_STATIC_TLS 0x00000010 /* Module uses the static TLS model */
DF_SYMBOLIC      macro       783 /usr/include/elf.h #define DF_SYMBOLIC 0x00000002 /* Symbol resolutions starts here */
DF_TEXTREL       macro       784 /usr/include/elf.h #define DF_TEXTREL 0x00000004 /* Object contains text relocations */
DTF_1_CONFEXP    macro       819 /usr/include/elf.h #define DTF_1_CONFEXP 0x00000002
DTF_1_PARINIT    macro       818 /usr/include/elf.h #define DTF_1_PARINIT 0x00000001
DT_ADDRNUM       macro       754 /usr/include/elf.h #define DT_ADDRNUM 11
DT_ADDRRNGHI     macro       752 /usr/include/elf.h #define DT_ADDRRNGHI 0x6ffffeff
DT_ADDRRNGLO     macro       740 /usr/include/elf.h #define DT_ADDRRNGLO 0x6ffffe00
DT_ADDRTAGIDX    macro       753 /usr/include/elf.h #define DT_ADDRTAGIDX(tag) (DT_ADDRRNGHI - (tag)) /* Reverse order! */
DT_ALPHA_NUM     macro      1960 /usr/include/elf.h #define DT_ALPHA_NUM 1
DT_ALPHA_PLTRO   macro      1959 /usr/include/elf.h #define DT_ALPHA_PLTRO (DT_LOPROC + 0)
DT_AUDIT         macro       748 /usr/include/elf.h #define DT_AUDIT 0x6ffffefc /* Object auditing. */
DT_AUXILIARY     macro       776 /usr/include/elf.h #define DT_AUXILIARY 0x7ffffffd /* Shared object to load before self */
DT_BIND_NOW      macro       698 /usr/include/elf.h #define DT_BIND_NOW 24 /* Process relocations of object */
DT_CHECKSUM      macro       722 /usr/include/elf.h #define DT_CHECKSUM 0x6ffffdf8
DT_CONFIG        macro       746 /usr/include/elf.h #define DT_CONFIG 0x6ffffefa /* Configuration information. */
DT_DEBUG         macro       695 /usr/include/elf.h #define DT_DEBUG 21 /* For debugging; unspecified */
DT_DEPAUDIT      macro       747 /usr/include/elf.h #define DT_DEPAUDIT 0x6ffffefb /* Dependency auditing. */
DT_ENCODING      macro       705 /usr/include/elf.h #define DT_ENCODING 32 /* Start of encoded range */
DT_EXTRANUM      macro       779 /usr/include/elf.h #define DT_EXTRANUM 3
DT_EXTRATAGIDX   macro       778 /usr/include/elf.h #define DT_EXTRATAGIDX(tag) ((Elf32_Word)-((Elf32_Sword) (tag) <<1>>1)-1)
DT_FEATURE_1     macro       726 /usr/include/elf.h #define DT_FEATURE_1 0x6ffffdfc /* Feature selection (DTF_*). */
DT_FILTER        macro       777 /usr/include/elf.h #define DT_FILTER 0x7fffffff /* Shared object to get values from */
DT_FINI          macro       687 /usr/include/elf.h #define DT_FINI 13 /* Address of termination function */
DT_FINI_ARRAY    macro       700 /usr/include/elf.h #define DT_FINI_ARRAY 26 /* Array with addresses of fini fct */
DT_FINI_ARRAYSZ  macro       702 /usr/include/elf.h #define DT_FINI_ARRAYSZ 28 /* Size in bytes of DT_FINI_ARRAY */
DT_FLAGS         macro       704 /usr/include/elf.h #define DT_FLAGS 30 /* Flags for the object being loaded */
DT_FLAGS_1       macro       764 /usr/include/elf.h #define DT_FLAGS_1 0x6ffffffb /* State flags, see DF_1_* below. */
DT_GNU_CONFLICT  macro       744 /usr/include/elf.h #define DT_GNU_CONFLICT 0x6ffffef8 /* Start of conflict section */
DT_GNU_CONFLICTSZ macro       720 /usr/include/elf.h #define DT_GNU_CONFLICTSZ 0x6ffffdf6 /* Size of conflict section */
DT_GNU_HASH      macro       741 /usr/include/elf.h #define DT_GNU_HASH 0x6ffffef5 /* GNU-style hash table. */
DT_GNU_LIBLIST   macro       745 /usr/include/elf.h #define DT_GNU_LIBLIST 0x6ffffef9 /* Library list */
DT_GNU_LIBLISTSZ macro       721 /usr/include/elf.h #define DT_GNU_LIBLISTSZ 0x6ffffdf7 /* Size of library list */
DT_GNU_PRELINKED macro       719 /usr/include/elf.h #define DT_GNU_PRELINKED 0x6ffffdf5 /* Prelinking timestamp */
DT_HASH          macro       678 /usr/include/elf.h #define DT_HASH 4 /* Address of symbol hash table */
DT_HIOS          macro       710 /usr/include/elf.h #define DT_HIOS 0x6ffff000 /* End of OS-specific */
DT_HIPROC        macro       712 /usr/include/elf.h #define DT_HIPROC 0x7fffffff /* End of processor-specific */
DT_IA_64_NUM     macro      2624 /usr/include/elf.h #define DT_IA_64_NUM 1
DT_IA_64_PLT_RESERVE macro      2623 /usr/include/elf.h #define DT_IA_64_PLT_RESERVE (DT_LOPROC + 0)
DT_INIT          macro       686 /usr/include/elf.h #define DT_INIT 12 /* Address of init function */
DT_INIT_ARRAY    macro       699 /usr/include/elf.h #define DT_INIT_ARRAY 25 /* Array with addresses of init fct */
DT_INIT_ARRAYSZ  macro       701 /usr/include/elf.h #define DT_INIT_ARRAYSZ 27 /* Size in bytes of DT_INIT_ARRAY */
DT_JMPREL        macro       697 /usr/include/elf.h #define DT_JMPREL 23 /* Address of PLT relocs */
DT_LOOS          macro       709 /usr/include/elf.h #define DT_LOOS 0x6000000d /* Start of OS-specific */
DT_LOPROC        macro       711 /usr/include/elf.h #define DT_LOPROC 0x70000000 /* Start of processor-specific */
DT_MIPS_AUX_DYNAMIC macro      1636 /usr/include/elf.h #define DT_MIPS_AUX_DYNAMIC 0x70000031 /* Address of aux .dynamic. */
DT_MIPS_BASE_ADDRESS macro      1590 /usr/include/elf.h #define DT_MIPS_BASE_ADDRESS 0x70000006 /* Base address */
DT_MIPS_COMPACT_SIZE macro      1634 /usr/include/elf.h #define DT_MIPS_COMPACT_SIZE 0x7000002f /* (O32)Size of compact rel section. */
DT_MIPS_CONFLICT macro      1592 /usr/include/elf.h #define DT_MIPS_CONFLICT 0x70000008 /* Address of CONFLICT section */
DT_MIPS_CONFLICTNO macro      1595 /usr/include/elf.h #define DT_MIPS_CONFLICTNO 0x7000000b /* Number of CONFLICT entries */
DT_MIPS_CXX_FLAGS macro      1619 /usr/include/elf.h #define DT_MIPS_CXX_FLAGS 0x70000022 /* Flags indicating for C++ flavor. */
DT_MIPS_DELTA_CLASS macro      1602 /usr/include/elf.h #define DT_MIPS_DELTA_CLASS 0x70000017 /* Delta C++ class definition. */
DT_MIPS_DELTA_CLASSSYM macro      1615 /usr/include/elf.h #define DT_MIPS_DELTA_CLASSSYM 0x70000020 /* Delta symbols that hold the
DT_MIPS_DELTA_CLASSSYM_NO macro      1617 /usr/include/elf.h #define DT_MIPS_DELTA_CLASSSYM_NO 0x70000021 /* Number of entries in
DT_MIPS_DELTA_CLASS_NO macro      1603 /usr/include/elf.h #define DT_MIPS_DELTA_CLASS_NO 0x70000018 /* Number of entries in
DT_MIPS_DELTA_INSTANCE macro      1605 /usr/include/elf.h #define DT_MIPS_DELTA_INSTANCE 0x70000019 /* Delta C++ class instances. */
DT_MIPS_DELTA_INSTANCE_NO macro      1606 /usr/include/elf.h #define DT_MIPS_DELTA_INSTANCE_NO 0x7000001a /* Number of entries in
DT_MIPS_DELTA_RELOC macro      1608 /usr/include/elf.h #define DT_MIPS_DELTA_RELOC 0x7000001b /* Delta relocations. */
DT_MIPS_DELTA_RELOC_NO macro      1609 /usr/include/elf.h #define DT_MIPS_DELTA_RELOC_NO 0x7000001c /* Number of entries in
DT_MIPS_DELTA_SYM macro      1611 /usr/include/elf.h #define DT_MIPS_DELTA_SYM 0x7000001d /* Delta symbols that Delta
DT_MIPS_DELTA_SYM_NO macro      1613 /usr/include/elf.h #define DT_MIPS_DELTA_SYM_NO 0x7000001e /* Number of entries in
DT_MIPS_DYNSTR_ALIGN macro      1628 /usr/include/elf.h #define DT_MIPS_DYNSTR_ALIGN 0x7000002b
DT_MIPS_FLAGS    macro      1589 /usr/include/elf.h #define DT_MIPS_FLAGS 0x70000005 /* Flags */
DT_MIPS_GOTSYM   macro      1599 /usr/include/elf.h #define DT_MIPS_GOTSYM 0x70000013 /* First GOT entry in DYNSYM */
DT_MIPS_GP_VALUE macro      1635 /usr/include/elf.h #define DT_MIPS_GP_VALUE 0x70000030 /* GP value for aux GOTs. */
DT_MIPS_HIDDEN_GOTIDX macro      1624 /usr/include/elf.h #define DT_MIPS_HIDDEN_GOTIDX 0x70000027
DT_MIPS_HIPAGENO macro      1600 /usr/include/elf.h #define DT_MIPS_HIPAGENO 0x70000014 /* Number of GOT page table entries */
DT_MIPS_ICHECKSUM macro      1587 /usr/include/elf.h #define DT_MIPS_ICHECKSUM 0x70000003 /* Checksum */
DT_MIPS_INTERFACE macro      1627 /usr/include/elf.h #define DT_MIPS_INTERFACE 0x7000002a /* Address of .interface. */
DT_MIPS_INTERFACE_SIZE macro      1629 /usr/include/elf.h #define DT_MIPS_INTERFACE_SIZE 0x7000002c /* Size of the .interface section. */
DT_MIPS_IVERSION macro      1588 /usr/include/elf.h #define DT_MIPS_IVERSION 0x70000004 /* Version string (string tbl index) */
DT_MIPS_LIBLIST  macro      1593 /usr/include/elf.h #define DT_MIPS_LIBLIST 0x70000009 /* Address of LIBLIST section */
DT_MIPS_LIBLISTNO macro      1596 /usr/include/elf.h #define DT_MIPS_LIBLISTNO 0x70000010 /* Number of LIBLIST entries */
DT_MIPS_LOCALPAGE_GOTIDX macro      1622 /usr/include/elf.h #define DT_MIPS_LOCALPAGE_GOTIDX 0x70000025
DT_MIPS_LOCAL_GOTIDX macro      1623 /usr/include/elf.h #define DT_MIPS_LOCAL_GOTIDX 0x70000026
DT_MIPS_LOCAL_GOTNO macro      1594 /usr/include/elf.h #define DT_MIPS_LOCAL_GOTNO 0x7000000a /* Number of local GOT entries */
DT_MIPS_MSYM     macro      1591 /usr/include/elf.h #define DT_MIPS_MSYM 0x70000007
DT_MIPS_NUM      macro      1643 /usr/include/elf.h #define DT_MIPS_NUM 0x35
DT_MIPS_OPTIONS  macro      1626 /usr/include/elf.h #define DT_MIPS_OPTIONS 0x70000029 /* Address of .options. */
DT_MIPS_PERF_SUFFIX macro      1632 /usr/include/elf.h #define DT_MIPS_PERF_SUFFIX 0x7000002e /* Default suffix of dso to be added
DT_MIPS_PIXIE_INIT macro      1620 /usr/include/elf.h #define DT_MIPS_PIXIE_INIT 0x70000023
DT_MIPS_PLTGOT   macro      1638 /usr/include/elf.h #define DT_MIPS_PLTGOT 0x70000032
DT_MIPS_PROTECTED_GOTIDX macro      1625 /usr/include/elf.h #define DT_MIPS_PROTECTED_GOTIDX 0x70000028
DT_MIPS_RLD_MAP  macro      1601 /usr/include/elf.h #define DT_MIPS_RLD_MAP 0x70000016 /* Address of run time loader map. */
DT_MIPS_RLD_TEXT_RESOLVE_ADDR macro      1630 /usr/include/elf.h #define DT_MIPS_RLD_TEXT_RESOLVE_ADDR 0x7000002d /* Address of rld_text_rsolve
DT_MIPS_RLD_VERSION macro      1585 /usr/include/elf.h #define DT_MIPS_RLD_VERSION 0x70000001 /* Runtime linker interface version */
DT_MIPS_RWPLT    macro      1642 /usr/include/elf.h #define DT_MIPS_RWPLT 0x70000034
DT_MIPS_SYMBOL_LIB macro      1621 /usr/include/elf.h #define DT_MIPS_SYMBOL_LIB 0x70000024
DT_MIPS_SYMTABNO macro      1597 /usr/include/elf.h #define DT_MIPS_SYMTABNO 0x70000011 /* Number of DYNSYM entries */
DT_MIPS_TIME_STAMP macro      1586 /usr/include/elf.h #define DT_MIPS_TIME_STAMP 0x70000002 /* Timestamp */
DT_MIPS_UNREFEXTNO macro      1598 /usr/include/elf.h #define DT_MIPS_UNREFEXTNO 0x70000012 /* First external DYNSYM */
DT_MOVEENT       macro       724 /usr/include/elf.h #define DT_MOVEENT 0x6ffffdfa
DT_MOVESZ        macro       725 /usr/include/elf.h #define DT_MOVESZ 0x6ffffdfb
DT_MOVETAB       macro       750 /usr/include/elf.h #define DT_MOVETAB 0x6ffffefe /* Move table. */
DT_NEEDED        macro       675 /usr/include/elf.h #define DT_NEEDED 1 /* Name of needed library */
DT_NULL          macro       674 /usr/include/elf.h #define DT_NULL 0 /* Marks end of dynamic section */
DT_NUM           macro       708 /usr/include/elf.h #define DT_NUM 34 /* Number used */
DT_PLTGOT        macro       677 /usr/include/elf.h #define DT_PLTGOT 3 /* Processor defined value */
DT_PLTPAD        macro       749 /usr/include/elf.h #define DT_PLTPAD 0x6ffffefd /* PLT padding. */
DT_PLTPADSZ      macro       723 /usr/include/elf.h #define DT_PLTPADSZ 0x6ffffdf9
DT_PLTREL        macro       694 /usr/include/elf.h #define DT_PLTREL 20 /* Type of reloc in PLT */
DT_PLTRELSZ      macro       676 /usr/include/elf.h #define DT_PLTRELSZ 2 /* Size in bytes of PLT relocs */
DT_POSFLAG_1     macro       727 /usr/include/elf.h #define DT_POSFLAG_1 0x6ffffdfd /* Flags for DT_* entries, effecting
DT_PPC64_GLINK   macro      2223 /usr/include/elf.h #define DT_PPC64_GLINK (DT_LOPROC + 0)
DT_PPC64_NUM     macro      2227 /usr/include/elf.h #define DT_PPC64_NUM 3
DT_PPC64_OPD     macro      2224 /usr/include/elf.h #define DT_PPC64_OPD (DT_LOPROC + 1)
DT_PPC64_OPDSZ   macro      2225 /usr/include/elf.h #define DT_PPC64_OPDSZ (DT_LOPROC + 2)
DT_PPC64_OPT     macro      2226 /usr/include/elf.h #define DT_PPC64_OPT (DT_LOPROC + 3)
DT_PPC_GOT       macro      2082 /usr/include/elf.h #define DT_PPC_GOT (DT_LOPROC + 0)
DT_PPC_NUM       macro      2083 /usr/include/elf.h #define DT_PPC_NUM 1
DT_PREINIT_ARRAY macro       706 /usr/include/elf.h #define DT_PREINIT_ARRAY 32 /* Array with addresses of preinit fct*/
DT_PREINIT_ARRAYSZ macro       707 /usr/include/elf.h #define DT_PREINIT_ARRAYSZ 33 /* size in bytes of DT_PREINIT_ARRAY */
DT_PROCNUM       macro       713 /usr/include/elf.h #define DT_PROCNUM DT_MIPS_NUM /* Most used by any processor */
DT_REL           macro       691 /usr/include/elf.h #define DT_REL 17 /* Address of Rel relocs */
DT_RELA          macro       681 /usr/include/elf.h #define DT_RELA 7 /* Address of Rela relocs */
DT_RELACOUNT     macro       760 /usr/include/elf.h #define DT_RELACOUNT 0x6ffffff9
DT_RELAENT       macro       683 /usr/include/elf.h #define DT_RELAENT 9 /* Size of one Rela reloc */
DT_RELASZ        macro       682 /usr/include/elf.h #define DT_RELASZ 8 /* Total size of Rela relocs */
DT_RELCOUNT      macro       761 /usr/include/elf.h #define DT_RELCOUNT 0x6ffffffa
DT_RELENT        macro       693 /usr/include/elf.h #define DT_RELENT 19 /* Size of one Rel reloc */
DT_RELSZ         macro       692 /usr/include/elf.h #define DT_RELSZ 18 /* Total size of Rel relocs */
DT_RPATH         macro       689 /usr/include/elf.h #define DT_RPATH 15 /* Library search path (deprecated) */
DT_RUNPATH       macro       703 /usr/include/elf.h #define DT_RUNPATH 29 /* Library search path */
DT_SONAME        macro       688 /usr/include/elf.h #define DT_SONAME 14 /* Name of shared object */
DT_SPARC_NUM     macro      1314 /usr/include/elf.h #define DT_SPARC_NUM 2
DT_SPARC_REGISTER macro      1313 /usr/include/elf.h #define DT_SPARC_REGISTER 0x70000001
DT_STRSZ         macro       684 /usr/include/elf.h #define DT_STRSZ 10 /* Size of string table */
DT_STRTAB        macro       679 /usr/include/elf.h #define DT_STRTAB 5 /* Address of string table */
DT_SYMBOLIC      macro       690 /usr/include/elf.h #define DT_SYMBOLIC 16 /* Start symbol search here */
DT_SYMENT        macro       685 /usr/include/elf.h #define DT_SYMENT 11 /* Size of one symbol table entry */
DT_SYMINENT      macro       730 /usr/include/elf.h #define DT_SYMINENT 0x6ffffdff /* Entry size of syminfo */
DT_SYMINFO       macro       751 /usr/include/elf.h #define DT_SYMINFO 0x6ffffeff /* Syminfo table. */
DT_SYMINSZ       macro       729 /usr/include/elf.h #define DT_SYMINSZ 0x6ffffdfe /* Size of syminfo table (in bytes) */
DT_SYMTAB        macro       680 /usr/include/elf.h #define DT_SYMTAB 6 /* Address of symbol table */
DT_TEXTREL       macro       696 /usr/include/elf.h #define DT_TEXTREL 22 /* Reloc might modify .text */
DT_TLSDESC_GOT   macro       743 /usr/include/elf.h #define DT_TLSDESC_GOT 0x6ffffef7
DT_TLSDESC_PLT   macro       742 /usr/include/elf.h #define DT_TLSDESC_PLT 0x6ffffef6
DT_VALNUM        macro       733 /usr/include/elf.h #define DT_VALNUM 12
DT_VALRNGHI      macro       731 /usr/include/elf.h #define DT_VALRNGHI 0x6ffffdff
DT_VALRNGLO      macro       718 /usr/include/elf.h #define DT_VALRNGLO 0x6ffffd00
DT_VALTAGIDX     macro       732 /usr/include/elf.h #define DT_VALTAGIDX(tag) (DT_VALRNGHI - (tag)) /* Reverse order! */
DT_VERDEF        macro       765 /usr/include/elf.h #define DT_VERDEF 0x6ffffffc /* Address of version definition
DT_VERDEFNUM     macro       767 /usr/include/elf.h #define DT_VERDEFNUM 0x6ffffffd /* Number of version definitions */
DT_VERNEED       macro       768 /usr/include/elf.h #define DT_VERNEED 0x6ffffffe /* Address of table with needed
DT_VERNEEDNUM    macro       770 /usr/include/elf.h #define DT_VERNEEDNUM 0x6fffffff /* Number of needed versions */
DT_VERSIONTAGIDX macro       771 /usr/include/elf.h #define DT_VERSIONTAGIDX(tag) (DT_VERNEEDNUM - (tag)) /* Reverse order! */
DT_VERSIONTAGNUM macro       772 /usr/include/elf.h #define DT_VERSIONTAGNUM 16
DT_VERSYM        macro       758 /usr/include/elf.h #define DT_VERSYM 0x6ffffff0
EFA_PARISC_1_0   macro      1715 /usr/include/elf.h #define EFA_PARISC_1_0 0x020b /* PA-RISC 1.0 big-endian. */
EFA_PARISC_1_1   macro      1716 /usr/include/elf.h #define EFA_PARISC_1_1 0x0210 /* PA-RISC 1.1 big-endian. */
EFA_PARISC_2_0   macro      1717 /usr/include/elf.h #define EFA_PARISC_2_0 0x0214 /* PA-RISC 2.0 big-endian. */
EF_ALPHA_32BIT   macro      1895 /usr/include/elf.h #define EF_ALPHA_32BIT 1 /* All addresses must be < 2GB. */
EF_ALPHA_CANRELAX macro      1896 /usr/include/elf.h #define EF_ALPHA_CANRELAX 2 /* Relocations for relaxing exist. */
EF_ARM_ABI_FLOAT_HARD macro      2257 /usr/include/elf.h #define EF_ARM_ABI_FLOAT_HARD 0x400 /* NB conflicts with EF_ARM_VFP_FLOAT */
EF_ARM_ABI_FLOAT_SOFT macro      2256 /usr/include/elf.h #define EF_ARM_ABI_FLOAT_SOFT 0x200 /* NB conflicts with EF_ARM_SOFT_FLOAT */
EF_ARM_ALIGN8    macro      2249 /usr/include/elf.h #define EF_ARM_ALIGN8 0x40 /* 8-bit structure alignment is in use */
EF_ARM_APCS_26   macro      2246 /usr/include/elf.h #define EF_ARM_APCS_26 0x08
EF_ARM_APCS_FLOAT macro      2247 /usr/include/elf.h #define EF_ARM_APCS_FLOAT 0x10
EF_ARM_BE8       macro      2268 /usr/include/elf.h #define EF_ARM_BE8 0x00800000
EF_ARM_DYNSYMSUSESEGIDX macro      2263 /usr/include/elf.h #define EF_ARM_DYNSYMSUSESEGIDX 0x08
EF_ARM_EABIMASK  macro      2265 /usr/include/elf.h #define EF_ARM_EABIMASK 0XFF000000
EF_ARM_EABI_UNKNOWN macro      2272 /usr/include/elf.h #define EF_ARM_EABI_UNKNOWN 0x00000000
EF_ARM_EABI_VER1 macro      2273 /usr/include/elf.h #define EF_ARM_EABI_VER1 0x01000000
EF_ARM_EABI_VER2 macro      2274 /usr/include/elf.h #define EF_ARM_EABI_VER2 0x02000000
EF_ARM_EABI_VER3 macro      2275 /usr/include/elf.h #define EF_ARM_EABI_VER3 0x03000000
EF_ARM_EABI_VER4 macro      2276 /usr/include/elf.h #define EF_ARM_EABI_VER4 0x04000000
EF_ARM_EABI_VER5 macro      2277 /usr/include/elf.h #define EF_ARM_EABI_VER5 0x05000000
EF_ARM_EABI_VERSION macro      2271 /usr/include/elf.h #define EF_ARM_EABI_VERSION(flags) ((flags) & EF_ARM_EABIMASK)
EF_ARM_HASENTRY  macro      2244 /usr/include/elf.h #define EF_ARM_HASENTRY 0x02
EF_ARM_INTERWORK macro      2245 /usr/include/elf.h #define EF_ARM_INTERWORK 0x04
EF_ARM_LE8       macro      2269 /usr/include/elf.h #define EF_ARM_LE8 0x00400000
EF_ARM_MAPSYMSFIRST macro      2264 /usr/include/elf.h #define EF_ARM_MAPSYMSFIRST 0x10
EF_ARM_MAVERICK_FLOAT macro      2254 /usr/include/elf.h #define EF_ARM_MAVERICK_FLOAT 0x800
EF_ARM_NEW_ABI   macro      2250 /usr/include/elf.h #define EF_ARM_NEW_ABI 0x80
EF_ARM_OLD_ABI   macro      2251 /usr/include/elf.h #define EF_ARM_OLD_ABI 0x100
EF_ARM_PIC       macro      2248 /usr/include/elf.h #define EF_ARM_PIC 0x20
EF_ARM_RELEXEC   macro      2243 /usr/include/elf.h #define EF_ARM_RELEXEC 0x01
EF_ARM_SOFT_FLOAT macro      2252 /usr/include/elf.h #define EF_ARM_SOFT_FLOAT 0x200
EF_ARM_SYMSARESORTED macro      2262 /usr/include/elf.h #define EF_ARM_SYMSARESORTED 0x04
EF_ARM_VFP_FLOAT macro      2253 /usr/include/elf.h #define EF_ARM_VFP_FLOAT 0x400
EF_CPU32         macro      1074 /usr/include/elf.h #define EF_CPU32 0x00810000
EF_IA_64_ABI64   macro      2601 /usr/include/elf.h #define EF_IA_64_ABI64 0x00000010 /* 64-bit ABI */
EF_IA_64_ARCH    macro      2602 /usr/include/elf.h #define EF_IA_64_ARCH 0xff000000 /* arch. version mask */
EF_IA_64_MASKOS  macro      2600 /usr/include/elf.h #define EF_IA_64_MASKOS 0x0000000f /* os-specific flags */
EF_MIPS_64BIT_WHIRL macro      1324 /usr/include/elf.h #define EF_MIPS_64BIT_WHIRL 16
EF_MIPS_ABI2     macro      1325 /usr/include/elf.h #define EF_MIPS_ABI2 32
EF_MIPS_ABI_ON32 macro      1326 /usr/include/elf.h #define EF_MIPS_ABI_ON32 64
EF_MIPS_ARCH     macro      1328 /usr/include/elf.h #define EF_MIPS_ARCH 0xf0000000 /* MIPS architecture level. */
EF_MIPS_ARCH_1   macro      1332 /usr/include/elf.h #define EF_MIPS_ARCH_1 0x00000000 /* -mips1 code. */
EF_MIPS_ARCH_2   macro      1333 /usr/include/elf.h #define EF_MIPS_ARCH_2 0x10000000 /* -mips2 code. */
EF_MIPS_ARCH_3   macro      1334 /usr/include/elf.h #define EF_MIPS_ARCH_3 0x20000000 /* -mips3 code. */
EF_MIPS_ARCH_32  macro      1337 /usr/include/elf.h #define EF_MIPS_ARCH_32 0x50000000 /* MIPS32 code. */
EF_MIPS_ARCH_32R2 macro      1339 /usr/include/elf.h #define EF_MIPS_ARCH_32R2 0x70000000 /* MIPS32r2 code. */
EF_MIPS_ARCH_4   macro      1335 /usr/include/elf.h #define EF_MIPS_ARCH_4 0x30000000 /* -mips4 code. */
EF_MIPS_ARCH_5   macro      1336 /usr/include/elf.h #define EF_MIPS_ARCH_5 0x40000000 /* -mips5 code. */
EF_MIPS_ARCH_64  macro      1338 /usr/include/elf.h #define EF_MIPS_ARCH_64 0x60000000 /* MIPS64 code. */
EF_MIPS_ARCH_64R2 macro      1340 /usr/include/elf.h #define EF_MIPS_ARCH_64R2 0x80000000 /* MIPS64r2 code. */
EF_MIPS_CPIC     macro      1322 /usr/include/elf.h #define EF_MIPS_CPIC 4 /* Uses PIC calling sequence. */
EF_MIPS_NAN2008  macro      1327 /usr/include/elf.h #define EF_MIPS_NAN2008 1024 /* Uses IEEE 754-2008 NaN encoding. */
EF_MIPS_NOREORDER macro      1320 /usr/include/elf.h #define EF_MIPS_NOREORDER 1 /* A .noreorder directive was used. */
EF_MIPS_PIC      macro      1321 /usr/include/elf.h #define EF_MIPS_PIC 2 /* Contains PIC code. */
EF_MIPS_XGOT     macro      1323 /usr/include/elf.h #define EF_MIPS_XGOT 8
EF_PARISC_ARCH   macro      1711 /usr/include/elf.h #define EF_PARISC_ARCH 0x0000ffff /* Architecture version. */
EF_PARISC_EXT    macro      1705 /usr/include/elf.h #define EF_PARISC_EXT 0x00020000 /* Program uses arch. extensions. */
EF_PARISC_LAZYSWAP macro      1710 /usr/include/elf.h #define EF_PARISC_LAZYSWAP 0x00400000 /* Allow lazy swapping. */
EF_PARISC_LSB    macro      1706 /usr/include/elf.h #define EF_PARISC_LSB 0x00040000 /* Program expects little endian. */
EF_PARISC_NO_KABP macro      1708 /usr/include/elf.h #define EF_PARISC_NO_KABP 0x00100000 /* No kernel assisted branch
EF_PARISC_TRAPNIL macro      1704 /usr/include/elf.h #define EF_PARISC_TRAPNIL 0x00010000 /* Trap nil pointer dereference. */
EF_PARISC_WIDE   macro      1707 /usr/include/elf.h #define EF_PARISC_WIDE 0x00080000 /* Program expects wide mode. */
EF_PPC64_ABI     macro      2220 /usr/include/elf.h #define EF_PPC64_ABI 3
EF_PPC_EMB       macro      1965 /usr/include/elf.h #define EF_PPC_EMB 0x80000000 /* PowerPC embedded flag */
EF_PPC_RELOCATABLE macro      1968 /usr/include/elf.h #define EF_PPC_RELOCATABLE 0x00010000 /* PowerPC -mrelocatable flag*/
EF_PPC_RELOCATABLE_LIB macro      1969 /usr/include/elf.h #define EF_PPC_RELOCATABLE_LIB 0x00008000 /* PowerPC -mrelocatable-lib
EF_S390_HIGH_GPRS macro      2780 /usr/include/elf.h #define EF_S390_HIGH_GPRS 0x00000001 /* High GPRs kernel facility needed. */
EF_SH1           macro      2714 /usr/include/elf.h #define EF_SH1 0x1
EF_SH2           macro      2715 /usr/include/elf.h #define EF_SH2 0x2
EF_SH2A          macro      2724 /usr/include/elf.h #define EF_SH2A 0xd
EF_SH2A_NOFPU    macro      2728 /usr/include/elf.h #define EF_SH2A_NOFPU 0x13
EF_SH2A_SH3E     macro      2733 /usr/include/elf.h #define EF_SH2A_SH3E 0x18
EF_SH2A_SH3_NOFPU macro      2731 /usr/include/elf.h #define EF_SH2A_SH3_NOFPU 0x16
EF_SH2A_SH4      macro      2732 /usr/include/elf.h #define EF_SH2A_SH4 0x17
EF_SH2A_SH4_NOFPU macro      2730 /usr/include/elf.h #define EF_SH2A_SH4_NOFPU 0x15
EF_SH2E          macro      2722 /usr/include/elf.h #define EF_SH2E 0xb
EF_SH3           macro      2716 /usr/include/elf.h #define EF_SH3 0x3
EF_SH3E          macro      2720 /usr/include/elf.h #define EF_SH3E 0x8
EF_SH3_DSP       macro      2718 /usr/include/elf.h #define EF_SH3_DSP 0x5
EF_SH3_NOMMU     macro      2729 /usr/include/elf.h #define EF_SH3_NOMMU 0x14
EF_SH4           macro      2721 /usr/include/elf.h #define EF_SH4 0x9
EF_SH4A          macro      2723 /usr/include/elf.h #define EF_SH4A 0xc
EF_SH4AL_DSP     macro      2719 /usr/include/elf.h #define EF_SH4AL_DSP 0x6
EF_SH4A_NOFPU    macro      2726 /usr/include/elf.h #define EF_SH4A_NOFPU 0x11
EF_SH4_NOFPU     macro      2725 /usr/include/elf.h #define EF_SH4_NOFPU 0x10
EF_SH4_NOMMU_NOFPU macro      2727 /usr/include/elf.h #define EF_SH4_NOMMU_NOFPU 0x12
EF_SH_DSP        macro      2717 /usr/include/elf.h #define EF_SH_DSP 0x4
EF_SH_MACH_MASK  macro      2712 /usr/include/elf.h #define EF_SH_MACH_MASK 0x1f
EF_SH_UNKNOWN    macro      2713 /usr/include/elf.h #define EF_SH_UNKNOWN 0x0
EF_SPARCV9_MM    macro      1198 /usr/include/elf.h #define EF_SPARCV9_MM 3
EF_SPARCV9_PSO   macro      1200 /usr/include/elf.h #define EF_SPARCV9_PSO 1
EF_SPARCV9_RMO   macro      1201 /usr/include/elf.h #define EF_SPARCV9_RMO 2
EF_SPARCV9_TSO   macro      1199 /usr/include/elf.h #define EF_SPARCV9_TSO 0
EF_SPARC_32PLUS  macro      1204 /usr/include/elf.h #define EF_SPARC_32PLUS 0x000100 /* generic V8+ features */
EF_SPARC_EXT_MASK macro      1203 /usr/include/elf.h #define EF_SPARC_EXT_MASK 0xFFFF00
EF_SPARC_HAL_R1  macro      1206 /usr/include/elf.h #define EF_SPARC_HAL_R1 0x000400 /* HAL R1 extensions */
EF_SPARC_LEDATA  macro      1202 /usr/include/elf.h #define EF_SPARC_LEDATA 0x800000 /* little endian data */
EF_SPARC_SUN_US1 macro      1205 /usr/include/elf.h #define EF_SPARC_SUN_US1 0x000200 /* Sun UltraSPARC1 extensions */
EF_SPARC_SUN_US3 macro      1207 /usr/include/elf.h #define EF_SPARC_SUN_US3 0x000800 /* Sun UltraSPARCIII extensions */
EI_ABIVERSION    macro       156 /usr/include/elf.h #define EI_ABIVERSION 8 /* ABI version */
EI_CLASS         macro       123 /usr/include/elf.h #define EI_CLASS 4 /* File class byte index */
EI_DATA          macro       129 /usr/include/elf.h #define EI_DATA 5 /* Data encoding byte index */
EI_MAG0          macro       107 /usr/include/elf.h #define EI_MAG0 0 /* File identification byte 0 index */
EI_MAG1          macro       110 /usr/include/elf.h #define EI_MAG1 1 /* File identification byte 1 index */
EI_MAG2          macro       113 /usr/include/elf.h #define EI_MAG2 2 /* File identification byte 2 index */
EI_MAG3          macro       116 /usr/include/elf.h #define EI_MAG3 3 /* File identification byte 3 index */
EI_NIDENT        macro        65 /usr/include/elf.h #define EI_NIDENT (16)
EI_OSABI         macro       138 /usr/include/elf.h #define EI_OSABI 7 /* OS ABI identification */
EI_PAD           macro       158 /usr/include/elf.h #define EI_PAD 9 /* Byte index of padding bytes */
EI_VERSION       macro       135 /usr/include/elf.h #define EI_VERSION 6 /* File version byte index */
ELF32_M_INFO     macro      1064 /usr/include/elf.h #define ELF32_M_INFO(sym, size) (((sym) << 8) + (unsigned char) (size))
ELF32_M_SIZE     macro      1063 /usr/include/elf.h #define ELF32_M_SIZE(info) ((unsigned char) (info))
ELF32_M_SYM      macro      1062 /usr/include/elf.h #define ELF32_M_SYM(info) ((info) >> 8)
ELF32_R_INFO     macro       533 /usr/include/elf.h #define ELF32_R_INFO(sym, type) (((sym) << 8) + ((type) & 0xff))
ELF32_R_SYM      macro       531 /usr/include/elf.h #define ELF32_R_SYM(val) ((val) >> 8)
ELF32_R_TYPE     macro       532 /usr/include/elf.h #define ELF32_R_TYPE(val) ((val) & 0xff)
ELF32_ST_BIND    macro       435 /usr/include/elf.h #define ELF32_ST_BIND(val) (((unsigned char) (val)) >> 4)
ELF32_ST_INFO    macro       437 /usr/include/elf.h #define ELF32_ST_INFO(bind, type) (((bind) << 4) + ((type) & 0xf))
ELF32_ST_TYPE    macro       436 /usr/include/elf.h #define ELF32_ST_TYPE(val) ((val) & 0xf)
ELF32_ST_VISIBILITY macro       482 /usr/include/elf.h #define ELF32_ST_VISIBILITY(o) ((o) & 0x03)
ELF64_M_INFO     macro      1068 /usr/include/elf.h #define ELF64_M_INFO(sym, size) ELF32_M_INFO (sym, size)
ELF64_M_SIZE     macro      1067 /usr/include/elf.h #define ELF64_M_SIZE(info) ELF32_M_SIZE (info)
ELF64_M_SYM      macro      1066 /usr/include/elf.h #define ELF64_M_SYM(info) ELF32_M_SYM (info)
ELF64_R_INFO     macro       537 /usr/include/elf.h #define ELF64_R_INFO(sym,type) ((((Elf64_Xword) (sym)) << 32) + (type))
ELF64_R_SYM      macro       535 /usr/include/elf.h #define ELF64_R_SYM(i) ((i) >> 32)
ELF64_R_TYPE     macro       536 /usr/include/elf.h #define ELF64_R_TYPE(i) ((i) & 0xffffffff)
ELF64_ST_BIND    macro       440 /usr/include/elf.h #define ELF64_ST_BIND(val) ELF32_ST_BIND (val)
ELF64_ST_INFO    macro       442 /usr/include/elf.h #define ELF64_ST_INFO(bind, type) ELF32_ST_INFO ((bind), (type))
ELF64_ST_TYPE    macro       441 /usr/include/elf.h #define ELF64_ST_TYPE(val) ELF32_ST_TYPE (val)
ELF64_ST_VISIBILITY macro       485 /usr/include/elf.h #define ELF64_ST_VISIBILITY(o) ELF32_ST_VISIBILITY (o)
ELFCLASS32       macro       125 /usr/include/elf.h #define ELFCLASS32 1 /* 32-bit objects */
ELFCLASS64       macro       126 /usr/include/elf.h #define ELFCLASS64 2 /* 64-bit objects */
ELFCLASSNONE     macro       124 /usr/include/elf.h #define ELFCLASSNONE 0 /* Invalid class */
ELFCLASSNUM      macro       127 /usr/include/elf.h #define ELFCLASSNUM 3
ELFDATA2LSB      macro       131 /usr/include/elf.h #define ELFDATA2LSB 1 /* 2's complement, little endian */
ELFDATA2MSB      macro       132 /usr/include/elf.h #define ELFDATA2MSB 2 /* 2's complement, big endian */
ELFDATANONE      macro       130 /usr/include/elf.h #define ELFDATANONE 0 /* Invalid data encoding */
ELFDATANUM       macro       133 /usr/include/elf.h #define ELFDATANUM 3
ELFMAG           macro       120 /usr/include/elf.h #define ELFMAG "\177ELF"
ELFMAG0          macro       108 /usr/include/elf.h #define ELFMAG0 0x7f /* Magic number byte 0 */
ELFMAG1          macro       111 /usr/include/elf.h #define ELFMAG1 'E' /* Magic number byte 1 */
ELFMAG2          macro       114 /usr/include/elf.h #define ELFMAG2 'L' /* Magic number byte 2 */
ELFMAG3          macro       117 /usr/include/elf.h #define ELFMAG3 'F' /* Magic number byte 3 */
ELFOSABI_AIX     macro       146 /usr/include/elf.h #define ELFOSABI_AIX 7 /* IBM AIX. */
ELFOSABI_ARM     macro       153 /usr/include/elf.h #define ELFOSABI_ARM 97 /* ARM */
ELFOSABI_ARM_AEABI macro       152 /usr/include/elf.h #define ELFOSABI_ARM_AEABI 64 /* ARM EABI */
ELFOSABI_FREEBSD macro       148 /usr/include/elf.h #define ELFOSABI_FREEBSD 9 /* FreeBSD. */
ELFOSABI_GNU     macro       143 /usr/include/elf.h #define ELFOSABI_GNU 3 /* Object uses GNU ELF extensions. */
ELFOSABI_HPUX    macro       141 /usr/include/elf.h #define ELFOSABI_HPUX 1 /* HP-UX */
ELFOSABI_IRIX    macro       147 /usr/include/elf.h #define ELFOSABI_IRIX 8 /* SGI Irix. */
ELFOSABI_LINUX   macro       144 /usr/include/elf.h #define ELFOSABI_LINUX ELFOSABI_GNU /* Compatibility alias. */
ELFOSABI_MODESTO macro       150 /usr/include/elf.h #define ELFOSABI_MODESTO 11 /* Novell Modesto. */
ELFOSABI_NETBSD  macro       142 /usr/include/elf.h #define ELFOSABI_NETBSD 2 /* NetBSD. */
ELFOSABI_NONE    macro       139 /usr/include/elf.h #define ELFOSABI_NONE 0 /* UNIX System V ABI */
ELFOSABI_OPENBSD macro       151 /usr/include/elf.h #define ELFOSABI_OPENBSD 12 /* OpenBSD. */
ELFOSABI_SOLARIS macro       145 /usr/include/elf.h #define ELFOSABI_SOLARIS 6 /* Sun Solaris. */
ELFOSABI_STANDALONE macro       154 /usr/include/elf.h #define ELFOSABI_STANDALONE 255 /* Standalone (embedded) application */
ELFOSABI_SYSV    macro       140 /usr/include/elf.h #define ELFOSABI_SYSV 0 /* Alias. */
ELFOSABI_TRU64   macro       149 /usr/include/elf.h #define ELFOSABI_TRU64 10 /* Compaq TRU64 UNIX. */
ELF_NOTE_ABI     macro      1017 /usr/include/elf.h #define ELF_NOTE_ABI NT_GNU_ABI_TAG /* Old name. */
ELF_NOTE_GNU     macro       999 /usr/include/elf.h #define ELF_NOTE_GNU "GNU"
ELF_NOTE_OS_FREEBSD macro      1024 /usr/include/elf.h #define ELF_NOTE_OS_FREEBSD 3
ELF_NOTE_OS_GNU  macro      1022 /usr/include/elf.h #define ELF_NOTE_OS_GNU 1
ELF_NOTE_OS_LINUX macro      1021 /usr/include/elf.h #define ELF_NOTE_OS_LINUX 0
ELF_NOTE_OS_SOLARIS2 macro      1023 /usr/include/elf.h #define ELF_NOTE_OS_SOLARIS2 2
ELF_NOTE_PAGESIZE_HINT macro      1005 /usr/include/elf.h #define ELF_NOTE_PAGESIZE_HINT 1
ELF_NOTE_SOLARIS macro       996 /usr/include/elf.h #define ELF_NOTE_SOLARIS "SUNW Solaris"
EM_386           macro       178 /usr/include/elf.h #define EM_386 3 /* Intel 80386 */
EM_68HC05        macro       229 /usr/include/elf.h #define EM_68HC05 72 /* Motorola MC68HC05 microcontroller */
EM_68HC08        macro       228 /usr/include/elf.h #define EM_68HC08 71 /* Motorola MC68HC08 microcontroller */
EM_68HC11        macro       227 /usr/include/elf.h #define EM_68HC11 70 /* Motorola MC68HC11 microcontroller */
EM_68HC12        macro       211 /usr/include/elf.h #define EM_68HC12 53 /* Motorola M68HC12 */
EM_68HC16        macro       226 /usr/include/elf.h #define EM_68HC16 69 /* Motorola MC68HC16 microcontroller */
EM_68K           macro       179 /usr/include/elf.h #define EM_68K 4 /* Motorola m68k family */
EM_860           macro       181 /usr/include/elf.h #define EM_860 7 /* Intel 80860 */
EM_88K           macro       180 /usr/include/elf.h #define EM_88K 5 /* Motorola m88k family */
EM_960           macro       189 /usr/include/elf.h #define EM_960 19 /* Intel 80960 */
EM_AARCH64       macro       252 /usr/include/elf.h #define EM_AARCH64 183 /* ARM AARCH64 */
EM_ALPHA         macro       262 /usr/include/elf.h #define EM_ALPHA 0x9026
EM_ARC           macro       203 /usr/include/elf.h #define EM_ARC 45 /* Argonaut RISC Core */
EM_ARC_A5        macro       250 /usr/include/elf.h #define EM_ARC_A5 93 /* ARC Cores Tangent-A5 */
EM_ARM           macro       198 /usr/include/elf.h #define EM_ARM 40 /* ARM */
EM_AVR           macro       240 /usr/include/elf.h #define EM_AVR 83 /* Atmel AVR 8-bit microcontroller */
EM_COLDFIRE      macro       210 /usr/include/elf.h #define EM_COLDFIRE 52 /* Motorola Coldfire */
EM_CRIS          macro       233 /usr/include/elf.h #define EM_CRIS 76 /* Axis Communications 32-bit embedded processor */
EM_D10V          macro       242 /usr/include/elf.h #define EM_D10V 85 /* Mitsubishi D10V */
EM_D30V          macro       243 /usr/include/elf.h #define EM_D30V 86 /* Mitsubishi D30V */
EM_FAKE_ALPHA    macro       199 /usr/include/elf.h #define EM_FAKE_ALPHA 41 /* Digital Alpha */
EM_FIREPATH      macro       235 /usr/include/elf.h #define EM_FIREPATH 78 /* Element 14 64-bit DSP Processor */
EM_FR20          macro       195 /usr/include/elf.h #define EM_FR20 37 /* Fujitsu FR20 */
EM_FR30          macro       241 /usr/include/elf.h #define EM_FR30 84 /* Fujitsu FR30 */
EM_FX66          macro       223 /usr/include/elf.h #define EM_FX66 66 /* Siemens FX66 microcontroller */
EM_H8S           macro       206 /usr/include/elf.h #define EM_H8S 48 /* Hitachi H8S */
EM_H8_300        macro       204 /usr/include/elf.h #define EM_H8_300 46 /* Hitachi H8/300 */
EM_H8_300H       macro       205 /usr/include/elf.h #define EM_H8_300H 47 /* Hitachi H8/300H */
EM_H8_500        macro       207 /usr/include/elf.h #define EM_H8_500 49 /* Hitachi H8/500 */
EM_HUANY         macro       238 /usr/include/elf.h #define EM_HUANY 81 /* Harvard University machine-independent object files */
EM_IA_64         macro       208 /usr/include/elf.h #define EM_IA_64 50 /* Intel Merced */
EM_JAVELIN       macro       234 /usr/include/elf.h #define EM_JAVELIN 77 /* Infineon Technologies 32-bit embedded processor */
EM_M32           macro       176 /usr/include/elf.h #define EM_M32 1 /* AT&T WE 32100 */
EM_M32R          macro       245 /usr/include/elf.h #define EM_M32R 88 /* Mitsubishi M32R */
EM_ME16          macro       217 /usr/include/elf.h #define EM_ME16 59 /* Toyota ME16 processor */
EM_MICROBLAZE    macro       254 /usr/include/elf.h #define EM_MICROBLAZE 189 /* Xilinx MicroBlaze */
EM_MIPS          macro       182 /usr/include/elf.h #define EM_MIPS 8 /* MIPS R3000 big-endian */
EM_MIPS_RS3_LE   macro       184 /usr/include/elf.h #define EM_MIPS_RS3_LE 10 /* MIPS R3000 little-endian */
EM_MIPS_X        macro       209 /usr/include/elf.h #define EM_MIPS_X 51 /* Stanford MIPS-X */
EM_MMA           macro       212 /usr/include/elf.h #define EM_MMA 54 /* Fujitsu MMA Multimedia Accelerator*/
EM_MMIX          macro       237 /usr/include/elf.h #define EM_MMIX 80 /* Donald Knuth's educational 64-bit processor */
EM_MN10200       macro       247 /usr/include/elf.h #define EM_MN10200 90 /* Matsushita MN10200 */
EM_MN10300       macro       246 /usr/include/elf.h #define EM_MN10300 89 /* Matsushita MN10300 */
EM_NCPU          macro       214 /usr/include/elf.h #define EM_NCPU 56 /* Sony nCPU embeeded RISC */
EM_NDR1          macro       215 /usr/include/elf.h #define EM_NDR1 57 /* Denso NDR1 microprocessor */
EM_NONE          macro       175 /usr/include/elf.h #define EM_NONE 0 /* No machine */
EM_NUM           macro       256 /usr/include/elf.h #define EM_NUM 192
EM_OPENRISC      macro       249 /usr/include/elf.h #define EM_OPENRISC 92 /* OpenRISC 32-bit embedded processor */
EM_PARISC        macro       186 /usr/include/elf.h #define EM_PARISC 15 /* HPPA */
EM_PCP           macro       213 /usr/include/elf.h #define EM_PCP 55 /* Siemens PCP */
EM_PDSP          macro       221 /usr/include/elf.h #define EM_PDSP 63 /* Sony DSP Processor */
EM_PJ            macro       248 /usr/include/elf.h #define EM_PJ 91 /* picoJava */
EM_PPC           macro       190 /usr/include/elf.h #define EM_PPC 20 /* PowerPC */
EM_PPC64         macro       191 /usr/include/elf.h #define EM_PPC64 21 /* PowerPC 64-bit */
EM_PRISM         macro       239 /usr/include/elf.h #define EM_PRISM 82 /* SiTera Prism */
EM_RCE           macro       197 /usr/include/elf.h #define EM_RCE 39 /* Motorola RCE */
EM_RH32          macro       196 /usr/include/elf.h #define EM_RH32 38 /* TRW RH-32 */
EM_S370          macro       183 /usr/include/elf.h #define EM_S370 9 /* IBM System/370 */
EM_S390          macro       192 /usr/include/elf.h #define EM_S390 22 /* IBM S390 */
EM_SH            macro       200 /usr/include/elf.h #define EM_SH 42 /* Hitachi SH */
EM_SPARC         macro       177 /usr/include/elf.h #define EM_SPARC 2 /* SUN SPARC */
EM_SPARC32PLUS   macro       188 /usr/include/elf.h #define EM_SPARC32PLUS 18 /* Sun's "v8plus" */
EM_SPARCV9       macro       201 /usr/include/elf.h #define EM_SPARCV9 43 /* SPARC v9 64-bit */
EM_ST100         macro       218 /usr/include/elf.h #define EM_ST100 60 /* STMicroelectronic ST100 processor */
EM_ST19          macro       231 /usr/include/elf.h #define EM_ST19 74 /* STMicroelectronics ST19 8 bit mc */
EM_ST7           macro       225 /usr/include/elf.h #define EM_ST7 68 /* STmicroelectronics ST7 8 bit mc */
EM_ST9PLUS       macro       224 /usr/include/elf.h #define EM_ST9PLUS 67 /* STMicroelectronics ST9+ 8/16 mc */
EM_STARCORE      macro       216 /usr/include/elf.h #define EM_STARCORE 58 /* Motorola Start*Core processor */
EM_SVX           macro       230 /usr/include/elf.h #define EM_SVX 73 /* Silicon Graphics SVx */
EM_TILEGX        macro       255 /usr/include/elf.h #define EM_TILEGX 191 /* Tilera TILE-Gx */
EM_TILEPRO       macro       253 /usr/include/elf.h #define EM_TILEPRO 188 /* Tilera TILEPro */
EM_TINYJ         macro       219 /usr/include/elf.h #define EM_TINYJ 61 /* Advanced Logic Corp. Tinyj emb.fam*/
EM_TRICORE       macro       202 /usr/include/elf.h #define EM_TRICORE 44 /* Siemens Tricore */
EM_V800          macro       194 /usr/include/elf.h #define EM_V800 36 /* NEC V800 series */
EM_V850          macro       244 /usr/include/elf.h #define EM_V850 87 /* NEC v850 */
EM_VAX           macro       232 /usr/include/elf.h #define EM_VAX 75 /* Digital VAX */
EM_VPP500        macro       187 /usr/include/elf.h #define EM_VPP500 17 /* Fujitsu VPP500 */
EM_X86_64        macro       220 /usr/include/elf.h #define EM_X86_64 62 /* AMD x86-64 architecture */
EM_XTENSA        macro       251 /usr/include/elf.h #define EM_XTENSA 94 /* Tensilica Xtensa Architecture */
EM_ZSP           macro       236 /usr/include/elf.h #define EM_ZSP 79 /* LSI Logic 16-bit DSP Processor */
ET_CORE          macro       166 /usr/include/elf.h #define ET_CORE 4 /* Core file */
ET_DYN           macro       165 /usr/include/elf.h #define ET_DYN 3 /* Shared object file */
ET_EXEC          macro       164 /usr/include/elf.h #define ET_EXEC 2 /* Executable file */
ET_HIOS          macro       169 /usr/include/elf.h #define ET_HIOS 0xfeff /* OS-specific range end */
ET_HIPROC        macro       171 /usr/include/elf.h #define ET_HIPROC 0xffff /* Processor-specific range end */
ET_LOOS          macro       168 /usr/include/elf.h #define ET_LOOS 0xfe00 /* OS-specific range start */
ET_LOPROC        macro       170 /usr/include/elf.h #define ET_LOPROC 0xff00 /* Processor-specific range start */
ET_NONE          macro       162 /usr/include/elf.h #define ET_NONE 0 /* No file type */
ET_NUM           macro       167 /usr/include/elf.h #define ET_NUM 5 /* Number of defined types */
ET_REL           macro       163 /usr/include/elf.h #define ET_REL 1 /* Relocatable file */
EV_CURRENT       macro       267 /usr/include/elf.h #define EV_CURRENT 1 /* Current version */
EV_NONE          macro       266 /usr/include/elf.h #define EV_NONE 0 /* Invalid ELF version */
EV_NUM           macro       268 /usr/include/elf.h #define EV_NUM 2
E_MIPS_ARCH_1    macro      1344 /usr/include/elf.h #define E_MIPS_ARCH_1 EF_MIPS_ARCH_1
E_MIPS_ARCH_2    macro      1345 /usr/include/elf.h #define E_MIPS_ARCH_2 EF_MIPS_ARCH_2
E_MIPS_ARCH_3    macro      1346 /usr/include/elf.h #define E_MIPS_ARCH_3 EF_MIPS_ARCH_3
E_MIPS_ARCH_32   macro      1349 /usr/include/elf.h #define E_MIPS_ARCH_32 EF_MIPS_ARCH_32
E_MIPS_ARCH_4    macro      1347 /usr/include/elf.h #define E_MIPS_ARCH_4 EF_MIPS_ARCH_4
E_MIPS_ARCH_5    macro      1348 /usr/include/elf.h #define E_MIPS_ARCH_5 EF_MIPS_ARCH_5
E_MIPS_ARCH_64   macro      1350 /usr/include/elf.h #define E_MIPS_ARCH_64 EF_MIPS_ARCH_64
Elf32_Addr       typedef      47 /usr/include/elf.h typedef uint32_t Elf32_Addr;
Elf32_Conflict   typedef    1697 /usr/include/elf.h typedef Elf32_Addr Elf32_Conflict;
Elf32_Dyn        typedef     660 /usr/include/elf.h } Elf32_Dyn;
Elf32_Ehdr       typedef      83 /usr/include/elf.h } Elf32_Ehdr;
Elf32_Half       typedef      31 /usr/include/elf.h typedef uint16_t Elf32_Half;
Elf32_Lib        typedef    1673 /usr/include/elf.h } Elf32_Lib;
Elf32_Move       typedef    1050 /usr/include/elf.h } Elf32_Move;
Elf32_Nhdr       typedef     984 /usr/include/elf.h } Elf32_Nhdr;
Elf32_Off        typedef      51 /usr/include/elf.h typedef uint32_t Elf32_Off;
Elf32_Phdr       typedef     551 /usr/include/elf.h } Elf32_Phdr;
Elf32_RegInfo    typedef    1450 /usr/include/elf.h } Elf32_RegInfo;
Elf32_Rel        typedef     500 /usr/include/elf.h } Elf32_Rel;
Elf32_Rela       typedef     520 /usr/include/elf.h } Elf32_Rela;
Elf32_Section    typedef      55 /usr/include/elf.h typedef uint16_t Elf32_Section;
Elf32_Shdr       typedef     284 /usr/include/elf.h } Elf32_Shdr;
Elf32_Sword      typedef      36 /usr/include/elf.h typedef int32_t Elf32_Sword;
Elf32_Sxword     typedef      42 /usr/include/elf.h typedef int64_t Elf32_Sxword;
Elf32_Sym        typedef     389 /usr/include/elf.h } Elf32_Sym;
Elf32_Syminfo    typedef     408 /usr/include/elf.h } Elf32_Syminfo;
Elf32_Verdaux    typedef     875 /usr/include/elf.h } Elf32_Verdaux;
Elf32_Verdef     typedef     838 /usr/include/elf.h } Elf32_Verdef;
Elf32_Vernaux    typedef     925 /usr/include/elf.h } Elf32_Vernaux;
Elf32_Verneed    typedef     896 /usr/include/elf.h } Elf32_Verneed;
Elf32_Versym     typedef      59 /usr/include/elf.h typedef Elf32_Half Elf32_Versym;
Elf32_Word       typedef      35 /usr/include/elf.h typedef uint32_t Elf32_Word;
Elf32_Xword      typedef      41 /usr/include/elf.h typedef uint64_t Elf32_Xword;
Elf32_auxv_t     typedef     961 /usr/include/elf.h } Elf32_auxv_t;
Elf32_gptab      typedef    1441 /usr/include/elf.h } Elf32_gptab;
Elf64_Addr       typedef      48 /usr/include/elf.h typedef uint64_t Elf64_Addr;
Elf64_Dyn        typedef     670 /usr/include/elf.h } Elf64_Dyn;
Elf64_Ehdr       typedef     101 /usr/include/elf.h } Elf64_Ehdr;
Elf64_Half       typedef      32 /usr/include/elf.h typedef uint16_t Elf64_Half;
Elf64_Lib        typedef    1682 /usr/include/elf.h } Elf64_Lib;
Elf64_Move       typedef    1059 /usr/include/elf.h } Elf64_Move;
Elf64_Nhdr       typedef     991 /usr/include/elf.h } Elf64_Nhdr;
Elf64_Off        typedef      52 /usr/include/elf.h typedef uint64_t Elf64_Off;
Elf64_Phdr       typedef     563 /usr/include/elf.h } Elf64_Phdr;
Elf64_Rel        typedef     511 /usr/include/elf.h } Elf64_Rel;
Elf64_Rela       typedef     527 /usr/include/elf.h } Elf64_Rela;
Elf64_Section    typedef      56 /usr/include/elf.h typedef uint16_t Elf64_Section;
Elf64_Shdr       typedef     298 /usr/include/elf.h } Elf64_Shdr;
Elf64_Sword      typedef      38 /usr/include/elf.h typedef int32_t Elf64_Sword;
Elf64_Sxword     typedef      44 /usr/include/elf.h typedef int64_t Elf64_Sxword;
Elf64_Sym        typedef     399 /usr/include/elf.h } Elf64_Sym;
Elf64_Syminfo    typedef     414 /usr/include/elf.h } Elf64_Syminfo;
Elf64_Verdaux    typedef     882 /usr/include/elf.h } Elf64_Verdaux;
Elf64_Verdef     typedef     850 /usr/include/elf.h } Elf64_Verdef;
Elf64_Vernaux    typedef     935 /usr/include/elf.h } Elf64_Vernaux;
Elf64_Verneed    typedef     907 /usr/include/elf.h } Elf64_Verneed;
Elf64_Versym     typedef      60 /usr/include/elf.h typedef Elf64_Half Elf64_Versym;
Elf64_Word       typedef      37 /usr/include/elf.h typedef uint32_t Elf64_Word;
Elf64_Xword      typedef      43 /usr/include/elf.h typedef uint64_t Elf64_Xword;
Elf64_auxv_t     typedef     973 /usr/include/elf.h } Elf64_auxv_t;
Elf_Options      typedef    1462 /usr/include/elf.h } Elf_Options;
Elf_Options_Hw   typedef    1509 /usr/include/elf.h } Elf_Options_Hw;
GRP_COMDAT       macro       377 /usr/include/elf.h #define GRP_COMDAT 0x1 /* Mark group as COMDAT. */
LITUSE_ALPHA_ADDR macro      1951 /usr/include/elf.h #define LITUSE_ALPHA_ADDR 0
LITUSE_ALPHA_BASE macro      1952 /usr/include/elf.h #define LITUSE_ALPHA_BASE 1
LITUSE_ALPHA_BYTOFF macro      1953 /usr/include/elf.h #define LITUSE_ALPHA_BYTOFF 2
LITUSE_ALPHA_JSR macro      1954 /usr/include/elf.h #define LITUSE_ALPHA_JSR 3
LITUSE_ALPHA_TLS_GD macro      1955 /usr/include/elf.h #define LITUSE_ALPHA_TLS_GD 4
LITUSE_ALPHA_TLS_LDM macro      1956 /usr/include/elf.h #define LITUSE_ALPHA_TLS_LDM 5
LL_DELAY_LOAD    macro      1692 /usr/include/elf.h #define LL_DELAY_LOAD (1 << 4)
LL_DELTA         macro      1693 /usr/include/elf.h #define LL_DELTA (1 << 5)
LL_EXACT_MATCH   macro      1688 /usr/include/elf.h #define LL_EXACT_MATCH (1 << 0) /* Require exact match */
LL_EXPORTS       macro      1691 /usr/include/elf.h #define LL_EXPORTS (1 << 3)
LL_IGNORE_INT_VER macro      1689 /usr/include/elf.h #define LL_IGNORE_INT_VER (1 << 1) /* Ignore interface version */
LL_NONE          macro      1687 /usr/include/elf.h #define LL_NONE 0
LL_REQUIRE_MINOR macro      1690 /usr/include/elf.h #define LL_REQUIRE_MINOR (1 << 2)
NT_386_IOPERM    macro       629 /usr/include/elf.h #define NT_386_IOPERM 0x201 /* x86 io permission bitmap (1=deny) */
NT_386_TLS       macro       628 /usr/include/elf.h #define NT_386_TLS 0x200 /* i386 TLS slots (struct user_desc) */
NT_ARM_HW_BREAK  macro       642 /usr/include/elf.h #define NT_ARM_HW_BREAK 0x402 /* ARM hardware breakpoint registers */
NT_ARM_HW_WATCH  macro       643 /usr/include/elf.h #define NT_ARM_HW_WATCH 0x403 /* ARM hardware watchpoint registers */
NT_ARM_TLS       macro       641 /usr/include/elf.h #define NT_ARM_TLS 0x401 /* ARM TLS register */
NT_ARM_VFP       macro       640 /usr/include/elf.h #define NT_ARM_VFP 0x400 /* ARM VFP/NEON registers */
NT_ASRS          macro       612 /usr/include/elf.h #define NT_ASRS 8 /* Contains copy of asrset struct */
NT_AUXV          macro       610 /usr/include/elf.h #define NT_AUXV 6 /* Contains copy of auxv array */
NT_FILE          macro       622 /usr/include/elf.h #define NT_FILE 0x46494c45 /* Contains information about mapped
NT_FPREGSET      macro       605 /usr/include/elf.h #define NT_FPREGSET 2 /* Contains copy of fpregset struct */
NT_GNU_ABI_TAG   macro      1016 /usr/include/elf.h #define NT_GNU_ABI_TAG 1
NT_GNU_BUILD_ID  macro      1036 /usr/include/elf.h #define NT_GNU_BUILD_ID 3
NT_GNU_GOLD_VERSION macro      1039 /usr/include/elf.h #define NT_GNU_GOLD_VERSION 4
NT_GNU_HWCAP     macro      1032 /usr/include/elf.h #define NT_GNU_HWCAP 2
NT_GWINDOWS      macro       611 /usr/include/elf.h #define NT_GWINDOWS 7 /* Contains copy of gwindows struct */
NT_LWPSINFO      macro       618 /usr/include/elf.h #define NT_LWPSINFO 17 /* Contains copy of lwpinfo struct */
NT_LWPSTATUS     macro       617 /usr/include/elf.h #define NT_LWPSTATUS 16 /* Contains copy of lwpstatus struct */
NT_PLATFORM      macro       609 /usr/include/elf.h #define NT_PLATFORM 5 /* String from sysinfo(SI_PLATFORM) */
NT_PPC_SPE       macro       626 /usr/include/elf.h #define NT_PPC_SPE 0x101 /* PowerPC SPE/EVR registers */
NT_PPC_VMX       macro       625 /usr/include/elf.h #define NT_PPC_VMX 0x100 /* PowerPC Altivec/VMX registers */
NT_PPC_VSX       macro       627 /usr/include/elf.h #define NT_PPC_VSX 0x102 /* PowerPC VSX registers */
NT_PRCRED        macro       615 /usr/include/elf.h #define NT_PRCRED 14 /* Contains copy of prcred struct */
NT_PRFPXREG      macro       619 /usr/include/elf.h #define NT_PRFPXREG 20 /* Contains copy of fprxregset struct */
NT_PRPSINFO      macro       606 /usr/include/elf.h #define NT_PRPSINFO 3 /* Contains copy of prpsinfo struct */
NT_PRSTATUS      macro       604 /usr/include/elf.h #define NT_PRSTATUS 1 /* Contains copy of prstatus struct */
NT_PRXFPREG      macro       624 /usr/include/elf.h #define NT_PRXFPREG 0x46e62b7f /* Contains copy of user_fxsr_struct */
NT_PRXREG        macro       607 /usr/include/elf.h #define NT_PRXREG 4 /* Contains copy of prxregset struct */
NT_PSINFO        macro       614 /usr/include/elf.h #define NT_PSINFO 13 /* Contains copy of psinfo struct */
NT_PSTATUS       macro       613 /usr/include/elf.h #define NT_PSTATUS 10 /* Contains copy of pstatus struct */
NT_S390_CTRS     macro       635 /usr/include/elf.h #define NT_S390_CTRS 0x304 /* s390 control registers */
NT_S390_HIGH_GPRS macro       631 /usr/include/elf.h #define NT_S390_HIGH_GPRS 0x300 /* s390 upper register halves */
NT_S390_LAST_BREAK macro       637 /usr/include/elf.h #define NT_S390_LAST_BREAK 0x306 /* s390 breaking event address */
NT_S390_PREFIX   macro       636 /usr/include/elf.h #define NT_S390_PREFIX 0x305 /* s390 prefix register */
NT_S390_SYSTEM_CALL macro       638 /usr/include/elf.h #define NT_S390_SYSTEM_CALL 0x307 /* s390 system call restart data */
NT_S390_TDB      macro       639 /usr/include/elf.h #define NT_S390_TDB 0x308 /* s390 transaction diagnostic block */
NT_S390_TIMER    macro       632 /usr/include/elf.h #define NT_S390_TIMER 0x301 /* s390 timer register */
NT_S390_TODCMP   macro       633 /usr/include/elf.h #define NT_S390_TODCMP 0x302 /* s390 TOD clock comparator register */
NT_S390_TODPREG  macro       634 /usr/include/elf.h #define NT_S390_TODPREG 0x303 /* s390 TOD programmable register */
NT_SIGINFO       macro       620 /usr/include/elf.h #define NT_SIGINFO 0x53494749 /* Contains copy of siginfo_t,
NT_TASKSTRUCT    macro       608 /usr/include/elf.h #define NT_TASKSTRUCT 4 /* Contains copy of task structure */
NT_UTSNAME       macro       616 /usr/include/elf.h #define NT_UTSNAME 15 /* Contains copy of utsname struct */
NT_VERSION       macro       647 /usr/include/elf.h #define NT_VERSION 1 /* Contains a version string. */
NT_X86_XSTATE    macro       630 /usr/include/elf.h #define NT_X86_XSTATE 0x202 /* x86 extended state using xsave */
ODK_EXCEPTIONS   macro      1468 /usr/include/elf.h #define ODK_EXCEPTIONS 2 /* Exception processing options. */
ODK_FILL         macro      1471 /usr/include/elf.h #define ODK_FILL 5 /* record the fill value used by the linker. */
ODK_HWAND        macro      1473 /usr/include/elf.h #define ODK_HWAND 7 /* HW workarounds. 'AND' bits when merging. */
ODK_HWOR         macro      1474 /usr/include/elf.h #define ODK_HWOR 8 /* HW workarounds. 'OR' bits when merging. */
ODK_HWPATCH      macro      1470 /usr/include/elf.h #define ODK_HWPATCH 4 /* Hardware workarounds performed */
ODK_NULL         macro      1466 /usr/include/elf.h #define ODK_NULL 0 /* Undefined. */
ODK_PAD          macro      1469 /usr/include/elf.h #define ODK_PAD 3 /* Section padding options. */
ODK_REGINFO      macro      1467 /usr/include/elf.h #define ODK_REGINFO 1 /* Register usage information. */
ODK_TAGS         macro      1472 /usr/include/elf.h #define ODK_TAGS 6 /* reserve space for desktop tools to write. */
OEX_DISMISS      macro      1484 /usr/include/elf.h #define OEX_DISMISS 0x80000 /* Dismiss invalid address faults? */
OEX_FPDBUG       macro      1482 /usr/include/elf.h #define OEX_FPDBUG 0x40000 /* Force floating point debug mode? */
OEX_FPU_DIV0     macro      1487 /usr/include/elf.h #define OEX_FPU_DIV0 0x08
OEX_FPU_INEX     macro      1490 /usr/include/elf.h #define OEX_FPU_INEX 0x01
OEX_FPU_INVAL    macro      1486 /usr/include/elf.h #define OEX_FPU_INVAL 0x10
OEX_FPU_MAX      macro      1479 /usr/include/elf.h #define OEX_FPU_MAX 0x1f00 /* FPE's which MAY be enabled. */
OEX_FPU_MIN      macro      1478 /usr/include/elf.h #define OEX_FPU_MIN 0x1f /* FPE's which MUST be enabled. */
OEX_FPU_OFLO     macro      1488 /usr/include/elf.h #define OEX_FPU_OFLO 0x04
OEX_FPU_UFLO     macro      1489 /usr/include/elf.h #define OEX_FPU_UFLO 0x02
OEX_PAGE0        macro      1480 /usr/include/elf.h #define OEX_PAGE0 0x10000 /* page zero must be mapped. */
OEX_PRECISEFP    macro      1483 /usr/include/elf.h #define OEX_PRECISEFP OEX_FPDBUG
OEX_SMM          macro      1481 /usr/include/elf.h #define OEX_SMM 0x20000 /* Force sequential memory mode? */
OHWA0_R4KEOP_CHECKED macro      1513 /usr/include/elf.h #define OHWA0_R4KEOP_CHECKED 0x00000001
OHWA1_R4KEOP_CLEAN macro      1514 /usr/include/elf.h #define OHWA1_R4KEOP_CLEAN 0x00000002
OHW_R4KEOP       macro      1494 /usr/include/elf.h #define OHW_R4KEOP 0x1 /* R4000 end-of-page patch. */
OHW_R5KCVTL      macro      1497 /usr/include/elf.h #define OHW_R5KCVTL 0x8 /* R5000 cvt.[ds].l bug. clean=1. */
OHW_R5KEOP       macro      1496 /usr/include/elf.h #define OHW_R5KEOP 0x4 /* R5000 end-of-page patch. */
OHW_R8KPFETCH    macro      1495 /usr/include/elf.h #define OHW_R8KPFETCH 0x2 /* may need R8000 prefetch patch. */
OPAD_POSTFIX     macro      1500 /usr/include/elf.h #define OPAD_POSTFIX 0x2
OPAD_PREFIX      macro      1499 /usr/include/elf.h #define OPAD_PREFIX 0x1
OPAD_SYMBOL      macro      1501 /usr/include/elf.h #define OPAD_SYMBOL 0x4
PF_ARM_ABS       macro      2292 /usr/include/elf.h #define PF_ARM_ABS 0x40000000 /* Absolute segment. */
PF_ARM_PI        macro      2291 /usr/include/elf.h #define PF_ARM_PI 0x20000000 /* Position-independent segment. */
PF_ARM_SB        macro      2289 /usr/include/elf.h #define PF_ARM_SB 0x10000000 /* Segment contains the location
PF_HP_CODE       macro      1885 /usr/include/elf.h #define PF_HP_CODE 0x01000000
PF_HP_FAR_SHARED macro      1883 /usr/include/elf.h #define PF_HP_FAR_SHARED 0x00200000
PF_HP_LAZYSWAP   macro      1887 /usr/include/elf.h #define PF_HP_LAZYSWAP 0x04000000
PF_HP_MODIFY     macro      1886 /usr/include/elf.h #define PF_HP_MODIFY 0x02000000
PF_HP_NEAR_SHARED macro      1884 /usr/include/elf.h #define PF_HP_NEAR_SHARED 0x00400000
PF_HP_PAGE_SIZE  macro      1882 /usr/include/elf.h #define PF_HP_PAGE_SIZE 0x00100000
PF_HP_SBP        macro      1888 /usr/include/elf.h #define PF_HP_SBP 0x08000000
PF_IA_64_NORECOV macro      2612 /usr/include/elf.h #define PF_IA_64_NORECOV 0x80000000 /* spec insns w/o recovery */
PF_MASKOS        macro       599 /usr/include/elf.h #define PF_MASKOS 0x0ff00000 /* OS-specific */
PF_MASKPROC      macro       600 /usr/include/elf.h #define PF_MASKPROC 0xf0000000 /* Processor-specific */
PF_MIPS_LOCAL    macro      1581 /usr/include/elf.h #define PF_MIPS_LOCAL 0x10000000
PF_PARISC_SBP    macro      1880 /usr/include/elf.h #define PF_PARISC_SBP 0x08000000
PF_R             macro       598 /usr/include/elf.h #define PF_R (1 << 2) /* Segment is readable */
PF_W             macro       597 /usr/include/elf.h #define PF_W (1 << 1) /* Segment is writable */
PF_X             macro       596 /usr/include/elf.h #define PF_X (1 << 0) /* Segment is executable */
PN_XNUM          macro       569 /usr/include/elf.h #define PN_XNUM 0xffff
PPC64_LOCAL_ENTRY_OFFSET macro      2236 /usr/include/elf.h #define PPC64_LOCAL_ENTRY_OFFSET(other) \
PPC64_OPT_MULTI_TOC macro      2231 /usr/include/elf.h #define PPC64_OPT_MULTI_TOC 2
PPC64_OPT_TLS    macro      2230 /usr/include/elf.h #define PPC64_OPT_TLS 1
PT_ARM_EXIDX     macro      2295 /usr/include/elf.h #define PT_ARM_EXIDX (PT_LOPROC + 1) /* ARM unwind segment. */
PT_DYNAMIC       macro       575 /usr/include/elf.h #define PT_DYNAMIC 2 /* Dynamic linking information */
PT_GNU_EH_FRAME  macro       583 /usr/include/elf.h #define PT_GNU_EH_FRAME 0x6474e550 /* GCC .eh_frame_hdr segment */
PT_GNU_RELRO     macro       585 /usr/include/elf.h #define PT_GNU_RELRO 0x6474e552 /* Read-only after relocation */
PT_GNU_STACK     macro       584 /usr/include/elf.h #define PT_GNU_STACK 0x6474e551 /* Indicates stack executability */
PT_HIOS          macro       590 /usr/include/elf.h #define PT_HIOS 0x6fffffff /* End of OS-specific */
PT_HIPROC        macro       592 /usr/include/elf.h #define PT_HIPROC 0x7fffffff /* End of processor-specific */
PT_HISUNW        macro       589 /usr/include/elf.h #define PT_HISUNW 0x6fffffff
PT_HP_CORE_COMM  macro      1863 /usr/include/elf.h #define PT_HP_CORE_COMM (PT_LOOS + 0x4)
PT_HP_CORE_KERNEL macro      1862 /usr/include/elf.h #define PT_HP_CORE_KERNEL (PT_LOOS + 0x3)
PT_HP_CORE_LOADABLE macro      1865 /usr/include/elf.h #define PT_HP_CORE_LOADABLE (PT_LOOS + 0x6)
PT_HP_CORE_MMF   macro      1868 /usr/include/elf.h #define PT_HP_CORE_MMF (PT_LOOS + 0x9)
PT_HP_CORE_NONE  macro      1860 /usr/include/elf.h #define PT_HP_CORE_NONE (PT_LOOS + 0x1)
PT_HP_CORE_PROC  macro      1864 /usr/include/elf.h #define PT_HP_CORE_PROC (PT_LOOS + 0x5)
PT_HP_CORE_SHM   macro      1867 /usr/include/elf.h #define PT_HP_CORE_SHM (PT_LOOS + 0x8)
PT_HP_CORE_STACK macro      1866 /usr/include/elf.h #define PT_HP_CORE_STACK (PT_LOOS + 0x7)
PT_HP_CORE_VERSION macro      1861 /usr/include/elf.h #define PT_HP_CORE_VERSION (PT_LOOS + 0x2)
PT_HP_FASTBIND   macro      1870 /usr/include/elf.h #define PT_HP_FASTBIND (PT_LOOS + 0x11)
PT_HP_HSL_ANNOT  macro      1872 /usr/include/elf.h #define PT_HP_HSL_ANNOT (PT_LOOS + 0x13)
PT_HP_OPT_ANNOT  macro      1871 /usr/include/elf.h #define PT_HP_OPT_ANNOT (PT_LOOS + 0x12)
PT_HP_PARALLEL   macro      1869 /usr/include/elf.h #define PT_HP_PARALLEL (PT_LOOS + 0x10)
PT_HP_STACK      macro      1873 /usr/include/elf.h #define PT_HP_STACK (PT_LOOS + 0x14)
PT_HP_TLS        macro      1859 /usr/include/elf.h #define PT_HP_TLS (PT_LOOS + 0x0)
PT_IA_64_ARCHEXT macro      2605 /usr/include/elf.h #define PT_IA_64_ARCHEXT (PT_LOPROC + 0) /* arch extension bits */
PT_IA_64_HP_HSL_ANOT macro      2608 /usr/include/elf.h #define PT_IA_64_HP_HSL_ANOT (PT_LOOS + 0x13)
PT_IA_64_HP_OPT_ANOT macro      2607 /usr/include/elf.h #define PT_IA_64_HP_OPT_ANOT (PT_LOOS + 0x12)
PT_IA_64_HP_STACK macro      2609 /usr/include/elf.h #define PT_IA_64_HP_STACK (PT_LOOS + 0x14)
PT_IA_64_UNWIND  macro      2606 /usr/include/elf.h #define PT_IA_64_UNWIND (PT_LOPROC + 1) /* ia64 unwind bits */
PT_INTERP        macro       576 /usr/include/elf.h #define PT_INTERP 3 /* Program interpreter */
PT_LOAD          macro       574 /usr/include/elf.h #define PT_LOAD 1 /* Loadable program segment */
PT_LOOS          macro       582 /usr/include/elf.h #define PT_LOOS 0x60000000 /* Start of OS-specific */
PT_LOPROC        macro       591 /usr/include/elf.h #define PT_LOPROC 0x70000000 /* Start of processor-specific */
PT_LOSUNW        macro       586 /usr/include/elf.h #define PT_LOSUNW 0x6ffffffa
PT_MIPS_OPTIONS  macro      1577 /usr/include/elf.h #define PT_MIPS_OPTIONS 0x70000002
PT_MIPS_REGINFO  macro      1575 /usr/include/elf.h #define PT_MIPS_REGINFO 0x70000000 /* Register usage information */
PT_MIPS_RTPROC   macro      1576 /usr/include/elf.h #define PT_MIPS_RTPROC 0x70000001 /* Runtime procedure table. */
PT_NOTE          macro       577 /usr/include/elf.h #define PT_NOTE 4 /* Auxiliary information */
PT_NULL          macro       573 /usr/include/elf.h #define PT_NULL 0 /* Program header table entry unused */
PT_NUM           macro       581 /usr/include/elf.h #define PT_NUM 8 /* Number of defined types */
PT_PARISC_ARCHEXT macro      1875 /usr/include/elf.h #define PT_PARISC_ARCHEXT 0x70000000
PT_PARISC_UNWIND macro      1876 /usr/include/elf.h #define PT_PARISC_UNWIND 0x70000001
PT_PHDR          macro       579 /usr/include/elf.h #define PT_PHDR 6 /* Entry for header table itself */
PT_SHLIB         macro       578 /usr/include/elf.h #define PT_SHLIB 5 /* Reserved */
PT_SUNWBSS       macro       587 /usr/include/elf.h #define PT_SUNWBSS 0x6ffffffa /* Sun Specific segment */
PT_SUNWSTACK     macro       588 /usr/include/elf.h #define PT_SUNWSTACK 0x6ffffffb /* Stack segment */
PT_TLS           macro       580 /usr/include/elf.h #define PT_TLS 7 /* Thread-local storage segment */
RHF_CORD         macro      1660 /usr/include/elf.h #define RHF_CORD (1 << 12)
RHF_DEFAULT_DELAY_LOAD macro      1657 /usr/include/elf.h #define RHF_DEFAULT_DELAY_LOAD (1 << 9)
RHF_DELTA_C_PLUS_PLUS macro      1654 /usr/include/elf.h #define RHF_DELTA_C_PLUS_PLUS (1 << 6)
RHF_GUARANTEE_INIT macro      1653 /usr/include/elf.h #define RHF_GUARANTEE_INIT (1 << 5)
RHF_GUARANTEE_START_INIT macro      1655 /usr/include/elf.h #define RHF_GUARANTEE_START_INIT (1 << 7)
RHF_NONE         macro      1647 /usr/include/elf.h #define RHF_NONE 0 /* No flags */
RHF_NOTPOT       macro      1649 /usr/include/elf.h #define RHF_NOTPOT (1 << 1) /* Hash size not power of 2 */
RHF_NO_LIBRARY_REPLACEMENT macro      1650 /usr/include/elf.h #define RHF_NO_LIBRARY_REPLACEMENT (1 << 2) /* Ignore LD_LIBRARY_PATH */
RHF_NO_MOVE      macro      1651 /usr/include/elf.h #define RHF_NO_MOVE (1 << 3)
RHF_NO_UNRES_UNDEF macro      1661 /usr/include/elf.h #define RHF_NO_UNRES_UNDEF (1 << 13)
RHF_PIXIE        macro      1656 /usr/include/elf.h #define RHF_PIXIE (1 << 8)
RHF_QUICKSTART   macro      1648 /usr/include/elf.h #define RHF_QUICKSTART (1 << 0) /* Use quickstart */
RHF_REQUICKSTART macro      1658 /usr/include/elf.h #define RHF_REQUICKSTART (1 << 10)
RHF_REQUICKSTARTED macro      1659 /usr/include/elf.h #define RHF_REQUICKSTARTED (1 << 11)
RHF_RLD_ORDER_SAFE macro      1662 /usr/include/elf.h #define RHF_RLD_ORDER_SAFE (1 << 14)
RHF_SGI_ONLY     macro      1652 /usr/include/elf.h #define RHF_SGI_ONLY (1 << 4)
R_386_16         macro      1153 /usr/include/elf.h #define R_386_16 20
R_386_32         macro      1130 /usr/include/elf.h #define R_386_32 1 /* Direct 32 bit */
R_386_32PLT      macro      1140 /usr/include/elf.h #define R_386_32PLT 11
R_386_8          macro      1155 /usr/include/elf.h #define R_386_8 22
R_386_COPY       macro      1134 /usr/include/elf.h #define R_386_COPY 5 /* Copy symbol at runtime */
R_386_GLOB_DAT   macro      1135 /usr/include/elf.h #define R_386_GLOB_DAT 6 /* Create GOT entry */
R_386_GOT32      macro      1132 /usr/include/elf.h #define R_386_GOT32 3 /* 32 bit GOT entry */
R_386_GOTOFF     macro      1138 /usr/include/elf.h #define R_386_GOTOFF 9 /* 32 bit offset to GOT */
R_386_GOTPC      macro      1139 /usr/include/elf.h #define R_386_GOTPC 10 /* 32 bit PC relative offset to GOT */
R_386_IRELATIVE  macro      1186 /usr/include/elf.h #define R_386_IRELATIVE 42 /* Adjust indirectly by program base */
R_386_JMP_SLOT   macro      1136 /usr/include/elf.h #define R_386_JMP_SLOT 7 /* Create PLT entry */
R_386_NONE       macro      1129 /usr/include/elf.h #define R_386_NONE 0 /* No reloc */
R_386_NUM        macro      1188 /usr/include/elf.h #define R_386_NUM 43
R_386_PC16       macro      1154 /usr/include/elf.h #define R_386_PC16 21
R_386_PC32       macro      1131 /usr/include/elf.h #define R_386_PC32 2 /* PC relative 32 bit */
R_386_PC8        macro      1156 /usr/include/elf.h #define R_386_PC8 23
R_386_PLT32      macro      1133 /usr/include/elf.h #define R_386_PLT32 4 /* 32 bit PLT address */
R_386_RELATIVE   macro      1137 /usr/include/elf.h #define R_386_RELATIVE 8 /* Adjust by program base */
R_386_SIZE32     macro      1177 /usr/include/elf.h #define R_386_SIZE32 38 /* 32-bit symbol size */
R_386_TLS_DESC   macro      1182 /usr/include/elf.h #define R_386_TLS_DESC 41 /* TLS descriptor containing
R_386_TLS_DESC_CALL macro      1179 /usr/include/elf.h #define R_386_TLS_DESC_CALL 40 /* Marker of call through TLS
R_386_TLS_DTPMOD32 macro      1174 /usr/include/elf.h #define R_386_TLS_DTPMOD32 35 /* ID of module containing symbol */
R_386_TLS_DTPOFF32 macro      1175 /usr/include/elf.h #define R_386_TLS_DTPOFF32 36 /* Offset in TLS block */
R_386_TLS_GD     macro      1148 /usr/include/elf.h #define R_386_TLS_GD 18 /* Direct 32 bit for GNU version of
R_386_TLS_GD_32  macro      1157 /usr/include/elf.h #define R_386_TLS_GD_32 24 /* Direct 32 bit for general dynamic
R_386_TLS_GD_CALL macro      1160 /usr/include/elf.h #define R_386_TLS_GD_CALL 26 /* Relocation for call to
R_386_TLS_GD_POP macro      1162 /usr/include/elf.h #define R_386_TLS_GD_POP 27 /* Tag for popl in GD TLS code */
R_386_TLS_GD_PUSH macro      1159 /usr/include/elf.h #define R_386_TLS_GD_PUSH 25 /* Tag for pushl in GD TLS code */
R_386_TLS_GOTDESC macro      1178 /usr/include/elf.h #define R_386_TLS_GOTDESC 39 /* GOT offset for TLS descriptor. */
R_386_TLS_GOTIE  macro      1144 /usr/include/elf.h #define R_386_TLS_GOTIE 16 /* GOT entry for static TLS block
R_386_TLS_IE     macro      1142 /usr/include/elf.h #define R_386_TLS_IE 15 /* Address of GOT entry for static TLS
R_386_TLS_IE_32  macro      1170 /usr/include/elf.h #define R_386_TLS_IE_32 33 /* GOT entry for negated static TLS
R_386_TLS_LDM    macro      1150 /usr/include/elf.h #define R_386_TLS_LDM 19 /* Direct 32 bit for GNU version of
R_386_TLS_LDM_32 macro      1163 /usr/include/elf.h #define R_386_TLS_LDM_32 28 /* Direct 32 bit for local dynamic
R_386_TLS_LDM_CALL macro      1166 /usr/include/elf.h #define R_386_TLS_LDM_CALL 30 /* Relocation for call to
R_386_TLS_LDM_POP macro      1168 /usr/include/elf.h #define R_386_TLS_LDM_POP 31 /* Tag for popl in LDM TLS code */
R_386_TLS_LDM_PUSH macro      1165 /usr/include/elf.h #define R_386_TLS_LDM_PUSH 29 /* Tag for pushl in LDM TLS code */
R_386_TLS_LDO_32 macro      1169 /usr/include/elf.h #define R_386_TLS_LDO_32 32 /* Offset relative to TLS block */
R_386_TLS_LE     macro      1146 /usr/include/elf.h #define R_386_TLS_LE 17 /* Offset relative to static TLS
R_386_TLS_LE_32  macro      1172 /usr/include/elf.h #define R_386_TLS_LE_32 34 /* Negated offset relative to static
R_386_TLS_TPOFF  macro      1141 /usr/include/elf.h #define R_386_TLS_TPOFF 14 /* Offset in static TLS block */
R_386_TLS_TPOFF32 macro      1176 /usr/include/elf.h #define R_386_TLS_TPOFF32 37 /* Negated offset in static TLS block */
R_390_12         macro      2786 /usr/include/elf.h #define R_390_12 2 /* Direct 12 bit. */
R_390_16         macro      2787 /usr/include/elf.h #define R_390_16 3 /* Direct 16 bit. */
R_390_20         macro      2858 /usr/include/elf.h #define R_390_20 57 /* Direct 20 bit. */
R_390_32         macro      2788 /usr/include/elf.h #define R_390_32 4 /* Direct 32 bit. */
R_390_64         macro      2806 /usr/include/elf.h #define R_390_64 22 /* Direct 64 bit. */
R_390_8          macro      2785 /usr/include/elf.h #define R_390_8 1 /* Direct 8 bit. */
R_390_COPY       macro      2793 /usr/include/elf.h #define R_390_COPY 9 /* Copy symbol at runtime. */
R_390_GLOB_DAT   macro      2794 /usr/include/elf.h #define R_390_GLOB_DAT 10 /* Create GOT entry. */
R_390_GOT12      macro      2790 /usr/include/elf.h #define R_390_GOT12 6 /* 12 bit GOT offset. */
R_390_GOT16      macro      2799 /usr/include/elf.h #define R_390_GOT16 15 /* 16 bit GOT offset. */
R_390_GOT20      macro      2859 /usr/include/elf.h #define R_390_GOT20 58 /* 20 bit GOT offset. */
R_390_GOT32      macro      2791 /usr/include/elf.h #define R_390_GOT32 7 /* 32 bit GOT offset. */
R_390_GOT64      macro      2808 /usr/include/elf.h #define R_390_GOT64 24 /* 64 bit GOT offset. */
R_390_GOTENT     macro      2810 /usr/include/elf.h #define R_390_GOTENT 26 /* 32 bit PC rel. to GOT entry >> 1. */
R_390_GOTOFF16   macro      2811 /usr/include/elf.h #define R_390_GOTOFF16 27 /* 16 bit offset to GOT. */
R_390_GOTOFF32   macro      2797 /usr/include/elf.h #define R_390_GOTOFF32 13 /* 32 bit offset to GOT. */
R_390_GOTOFF64   macro      2812 /usr/include/elf.h #define R_390_GOTOFF64 28 /* 64 bit offset to GOT. */
R_390_GOTPC      macro      2798 /usr/include/elf.h #define R_390_GOTPC 14 /* 32 bit PC relative offset to GOT. */
R_390_GOTPCDBL   macro      2805 /usr/include/elf.h #define R_390_GOTPCDBL 21 /* 32 bit PC rel. GOT shifted by 1. */
R_390_GOTPLT12   macro      2813 /usr/include/elf.h #define R_390_GOTPLT12 29 /* 12 bit offset to jump slot. */
R_390_GOTPLT16   macro      2814 /usr/include/elf.h #define R_390_GOTPLT16 30 /* 16 bit offset to jump slot. */
R_390_GOTPLT20   macro      2860 /usr/include/elf.h #define R_390_GOTPLT20 59 /* 20 bit offset to jump slot. */
R_390_GOTPLT32   macro      2815 /usr/include/elf.h #define R_390_GOTPLT32 31 /* 32 bit offset to jump slot. */
R_390_GOTPLT64   macro      2816 /usr/include/elf.h #define R_390_GOTPLT64 32 /* 64 bit offset to jump slot. */
R_390_GOTPLTENT  macro      2817 /usr/include/elf.h #define R_390_GOTPLTENT 33 /* 32 bit rel. offset to jump slot. */
R_390_IRELATIVE  macro      2863 /usr/include/elf.h #define R_390_IRELATIVE 61 /* STT_GNU_IFUNC relocation. */
R_390_JMP_SLOT   macro      2795 /usr/include/elf.h #define R_390_JMP_SLOT 11 /* Create PLT entry. */
R_390_NONE       macro      2784 /usr/include/elf.h #define R_390_NONE 0 /* No reloc. */
R_390_NUM        macro      2865 /usr/include/elf.h #define R_390_NUM 62
R_390_PC16       macro      2800 /usr/include/elf.h #define R_390_PC16 16 /* PC relative 16 bit. */
R_390_PC16DBL    macro      2801 /usr/include/elf.h #define R_390_PC16DBL 17 /* PC relative 16 bit shifted by 1. */
R_390_PC32       macro      2789 /usr/include/elf.h #define R_390_PC32 5 /* PC relative 32 bit. */
R_390_PC32DBL    macro      2803 /usr/include/elf.h #define R_390_PC32DBL 19 /* PC relative 32 bit shifted by 1. */
R_390_PC64       macro      2807 /usr/include/elf.h #define R_390_PC64 23 /* PC relative 64 bit. */
R_390_PLT16DBL   macro      2802 /usr/include/elf.h #define R_390_PLT16DBL 18 /* 16 bit PC rel. PLT shifted by 1. */
R_390_PLT32      macro      2792 /usr/include/elf.h #define R_390_PLT32 8 /* 32 bit PC relative PLT address. */
R_390_PLT32DBL   macro      2804 /usr/include/elf.h #define R_390_PLT32DBL 20 /* 32 bit PC rel. PLT shifted by 1. */
R_390_PLT64      macro      2809 /usr/include/elf.h #define R_390_PLT64 25 /* 64 bit PC relative PLT address. */
R_390_PLTOFF16   macro      2818 /usr/include/elf.h #define R_390_PLTOFF16 34 /* 16 bit offset from GOT to PLT. */
R_390_PLTOFF32   macro      2819 /usr/include/elf.h #define R_390_PLTOFF32 35 /* 32 bit offset from GOT to PLT. */
R_390_PLTOFF64   macro      2820 /usr/include/elf.h #define R_390_PLTOFF64 36 /* 16 bit offset from GOT to PLT. */
R_390_RELATIVE   macro      2796 /usr/include/elf.h #define R_390_RELATIVE 12 /* Adjust by program base. */
R_390_TLS_DTPMOD macro      2854 /usr/include/elf.h #define R_390_TLS_DTPMOD 54 /* ID of module containing symbol. */
R_390_TLS_DTPOFF macro      2855 /usr/include/elf.h #define R_390_TLS_DTPOFF 55 /* Offset in TLS block. */
R_390_TLS_GD32   macro      2826 /usr/include/elf.h #define R_390_TLS_GD32 40 /* Direct 32 bit for general dynamic
R_390_TLS_GD64   macro      2828 /usr/include/elf.h #define R_390_TLS_GD64 41 /* Direct 64 bit for general dynamic
R_390_TLS_GDCALL macro      2822 /usr/include/elf.h #define R_390_TLS_GDCALL 38 /* Tag for function call in general
R_390_TLS_GOTIE12 macro      2830 /usr/include/elf.h #define R_390_TLS_GOTIE12 42 /* 12 bit GOT offset for static TLS
R_390_TLS_GOTIE20 macro      2861 /usr/include/elf.h #define R_390_TLS_GOTIE20 60 /* 20 bit GOT offset for static TLS
R_390_TLS_GOTIE32 macro      2832 /usr/include/elf.h #define R_390_TLS_GOTIE32 43 /* 32 bit GOT offset for static TLS
R_390_TLS_GOTIE64 macro      2834 /usr/include/elf.h #define R_390_TLS_GOTIE64 44 /* 64 bit GOT offset for static TLS
R_390_TLS_IE32   macro      2840 /usr/include/elf.h #define R_390_TLS_IE32 47 /* 32 bit address of GOT entry for
R_390_TLS_IE64   macro      2842 /usr/include/elf.h #define R_390_TLS_IE64 48 /* 64 bit address of GOT entry for
R_390_TLS_IEENT  macro      2844 /usr/include/elf.h #define R_390_TLS_IEENT 49 /* 32 bit rel. offset to GOT entry for
R_390_TLS_LDCALL macro      2824 /usr/include/elf.h #define R_390_TLS_LDCALL 39 /* Tag for function call in local
R_390_TLS_LDM32  macro      2836 /usr/include/elf.h #define R_390_TLS_LDM32 45 /* Direct 32 bit for local dynamic
R_390_TLS_LDM64  macro      2838 /usr/include/elf.h #define R_390_TLS_LDM64 46 /* Direct 64 bit for local dynamic
R_390_TLS_LDO32  macro      2850 /usr/include/elf.h #define R_390_TLS_LDO32 52 /* 32 bit offset relative to TLS
R_390_TLS_LDO64  macro      2852 /usr/include/elf.h #define R_390_TLS_LDO64 53 /* 64 bit offset relative to TLS
R_390_TLS_LE32   macro      2846 /usr/include/elf.h #define R_390_TLS_LE32 50 /* 32 bit negated offset relative to
R_390_TLS_LE64   macro      2848 /usr/include/elf.h #define R_390_TLS_LE64 51 /* 64 bit negated offset relative to
R_390_TLS_LOAD   macro      2821 /usr/include/elf.h #define R_390_TLS_LOAD 37 /* Tag for load insn in TLS code. */
R_390_TLS_TPOFF  macro      2856 /usr/include/elf.h #define R_390_TLS_TPOFF 56 /* Negated offset in static TLS
R_68K_16         macro      1080 /usr/include/elf.h #define R_68K_16 2 /* Direct 16 bit */
R_68K_32         macro      1079 /usr/include/elf.h #define R_68K_32 1 /* Direct 32 bit */
R_68K_8          macro      1081 /usr/include/elf.h #define R_68K_8 3 /* Direct 8 bit */
R_68K_COPY       macro      1097 /usr/include/elf.h #define R_68K_COPY 19 /* Copy symbol at runtime */
R_68K_GLOB_DAT   macro      1098 /usr/include/elf.h #define R_68K_GLOB_DAT 20 /* Create GOT entry */
R_68K_GOT16      macro      1086 /usr/include/elf.h #define R_68K_GOT16 8 /* 16 bit PC relative GOT entry */
R_68K_GOT16O     macro      1089 /usr/include/elf.h #define R_68K_GOT16O 11 /* 16 bit GOT offset */
R_68K_GOT32      macro      1085 /usr/include/elf.h #define R_68K_GOT32 7 /* 32 bit PC relative GOT entry */
R_68K_GOT32O     macro      1088 /usr/include/elf.h #define R_68K_GOT32O 10 /* 32 bit GOT offset */
R_68K_GOT8       macro      1087 /usr/include/elf.h #define R_68K_GOT8 9 /* 8 bit PC relative GOT entry */
R_68K_GOT8O      macro      1090 /usr/include/elf.h #define R_68K_GOT8O 12 /* 8 bit GOT offset */
R_68K_JMP_SLOT   macro      1099 /usr/include/elf.h #define R_68K_JMP_SLOT 21 /* Create PLT entry */
R_68K_NONE       macro      1078 /usr/include/elf.h #define R_68K_NONE 0 /* No reloc */
R_68K_NUM        macro      1123 /usr/include/elf.h #define R_68K_NUM 43
R_68K_PC16       macro      1083 /usr/include/elf.h #define R_68K_PC16 5 /* PC relative 16 bit */
R_68K_PC32       macro      1082 /usr/include/elf.h #define R_68K_PC32 4 /* PC relative 32 bit */
R_68K_PC8        macro      1084 /usr/include/elf.h #define R_68K_PC8 6 /* PC relative 8 bit */
R_68K_PLT16      macro      1092 /usr/include/elf.h #define R_68K_PLT16 14 /* 16 bit PC relative PLT address */
R_68K_PLT16O     macro      1095 /usr/include/elf.h #define R_68K_PLT16O 17 /* 16 bit PLT offset */
R_68K_PLT32      macro      1091 /usr/include/elf.h #define R_68K_PLT32 13 /* 32 bit PC relative PLT address */
R_68K_PLT32O     macro      1094 /usr/include/elf.h #define R_68K_PLT32O 16 /* 32 bit PLT offset */
R_68K_PLT8       macro      1093 /usr/include/elf.h #define R_68K_PLT8 15 /* 8 bit PC relative PLT address */
R_68K_PLT8O      macro      1096 /usr/include/elf.h #define R_68K_PLT8O 18 /* 8 bit PLT offset */
R_68K_RELATIVE   macro      1100 /usr/include/elf.h #define R_68K_RELATIVE 22 /* Adjust by program base */
R_68K_TLS_DTPMOD32 macro      1119 /usr/include/elf.h #define R_68K_TLS_DTPMOD32 40 /* 32 bit module number */
R_68K_TLS_DTPREL32 macro      1120 /usr/include/elf.h #define R_68K_TLS_DTPREL32 41 /* 32 bit module-relative offset */
R_68K_TLS_GD16   macro      1102 /usr/include/elf.h #define R_68K_TLS_GD16 26 /* 16 bit GOT offset for GD */
R_68K_TLS_GD32   macro      1101 /usr/include/elf.h #define R_68K_TLS_GD32 25 /* 32 bit GOT offset for GD */
R_68K_TLS_GD8    macro      1103 /usr/include/elf.h #define R_68K_TLS_GD8 27 /* 8 bit GOT offset for GD */
R_68K_TLS_IE16   macro      1111 /usr/include/elf.h #define R_68K_TLS_IE16 35 /* 16 bit GOT offset for IE */
R_68K_TLS_IE32   macro      1110 /usr/include/elf.h #define R_68K_TLS_IE32 34 /* 32 bit GOT offset for IE */
R_68K_TLS_IE8    macro      1112 /usr/include/elf.h #define R_68K_TLS_IE8 36 /* 8 bit GOT offset for IE */
R_68K_TLS_LDM16  macro      1105 /usr/include/elf.h #define R_68K_TLS_LDM16 29 /* 16 bit GOT offset for LDM */
R_68K_TLS_LDM32  macro      1104 /usr/include/elf.h #define R_68K_TLS_LDM32 28 /* 32 bit GOT offset for LDM */
R_68K_TLS_LDM8   macro      1106 /usr/include/elf.h #define R_68K_TLS_LDM8 30 /* 8 bit GOT offset for LDM */
R_68K_TLS_LDO16  macro      1108 /usr/include/elf.h #define R_68K_TLS_LDO16 32 /* 16 bit module-relative offset */
R_68K_TLS_LDO32  macro      1107 /usr/include/elf.h #define R_68K_TLS_LDO32 31 /* 32 bit module-relative offset */
R_68K_TLS_LDO8   macro      1109 /usr/include/elf.h #define R_68K_TLS_LDO8 33 /* 8 bit module-relative offset */
R_68K_TLS_LE16   macro      1115 /usr/include/elf.h #define R_68K_TLS_LE16 38 /* 16 bit offset relative to
R_68K_TLS_LE32   macro      1113 /usr/include/elf.h #define R_68K_TLS_LE32 37 /* 32 bit offset relative to
R_68K_TLS_LE8    macro      1117 /usr/include/elf.h #define R_68K_TLS_LE8 39 /* 8 bit offset relative to
R_68K_TLS_TPREL32 macro      1121 /usr/include/elf.h #define R_68K_TLS_TPREL32 42 /* 32 bit TP-relative offset */
R_AARCH64_ABS16  macro      2308 /usr/include/elf.h #define R_AARCH64_ABS16 259 /* Direct 16-bit. */
R_AARCH64_ABS32  macro      2307 /usr/include/elf.h #define R_AARCH64_ABS32 258 /* Direct 32 bit. */
R_AARCH64_ABS64  macro      2306 /usr/include/elf.h #define R_AARCH64_ABS64 257 /* Direct 64 bit. */
R_AARCH64_ADD_ABS_LO12_NC macro      2326 /usr/include/elf.h #define R_AARCH64_ADD_ABS_LO12_NC 277 /* Dir. ADD imm. from bits 11:0. */
R_AARCH64_ADR_GOT_PAGE macro      2354 /usr/include/elf.h #define R_AARCH64_ADR_GOT_PAGE 311 /* P-page-rel. GOT off. ADRP 32:12. */
R_AARCH64_ADR_PREL_LO21 macro      2323 /usr/include/elf.h #define R_AARCH64_ADR_PREL_LO21 274 /* PC-rel. ADR imm. from bits 20:0. */
R_AARCH64_ADR_PREL_PG_HI21 macro      2324 /usr/include/elf.h #define R_AARCH64_ADR_PREL_PG_HI21 275 /* Page-rel. ADRP imm. from 32:12. */
R_AARCH64_ADR_PREL_PG_HI21_NC macro      2325 /usr/include/elf.h #define R_AARCH64_ADR_PREL_PG_HI21_NC 276 /* Likewise; no overflow check. */
R_AARCH64_CALL26 macro      2331 /usr/include/elf.h #define R_AARCH64_CALL26 283 /* Likewise for CALL. */
R_AARCH64_CONDBR19 macro      2329 /usr/include/elf.h #define R_AARCH64_CONDBR19 280 /* PC-rel. cond. br. imm. from 20:2. */
R_AARCH64_COPY   macro      2419 /usr/include/elf.h #define R_AARCH64_COPY 1024 /* Copy symbol at runtime. */
R_AARCH64_GLOB_DAT macro      2420 /usr/include/elf.h #define R_AARCH64_GLOB_DAT 1025 /* Create GOT entry. */
R_AARCH64_GOTREL32 macro      2351 /usr/include/elf.h #define R_AARCH64_GOTREL32 308 /* GOT-relative 32-bit. */
R_AARCH64_GOTREL64 macro      2350 /usr/include/elf.h #define R_AARCH64_GOTREL64 307 /* GOT-relative 64-bit. */
R_AARCH64_GOT_LD_PREL19 macro      2352 /usr/include/elf.h #define R_AARCH64_GOT_LD_PREL19 309 /* PC-rel. GOT off. load imm. 20:2. */
R_AARCH64_IRELATIVE macro      2427 /usr/include/elf.h #define R_AARCH64_IRELATIVE 1032 /* STT_GNU_IFUNC relocation. */
R_AARCH64_JUMP26 macro      2330 /usr/include/elf.h #define R_AARCH64_JUMP26 282 /* PC-rel. B imm. from bits 27:2. */
R_AARCH64_JUMP_SLOT macro      2421 /usr/include/elf.h #define R_AARCH64_JUMP_SLOT 1026 /* Create PLT entry. */
R_AARCH64_LD64_GOTOFF_LO15 macro      2353 /usr/include/elf.h #define R_AARCH64_LD64_GOTOFF_LO15 310 /* GOT-rel. off. LD/ST imm. 14:3. */
R_AARCH64_LD64_GOTPAGE_LO15 macro      2356 /usr/include/elf.h #define R_AARCH64_LD64_GOTPAGE_LO15 313 /* GOT-page-rel. GOT off. LD/ST 14:3 */
R_AARCH64_LD64_GOT_LO12_NC macro      2355 /usr/include/elf.h #define R_AARCH64_LD64_GOT_LO12_NC 312 /* Dir. GOT off. LD/ST imm. 11:3. */
R_AARCH64_LDST128_ABS_LO12_NC macro      2342 /usr/include/elf.h #define R_AARCH64_LDST128_ABS_LO12_NC 299 /* Dir. ADD imm. from bits 11:4. */
R_AARCH64_LDST16_ABS_LO12_NC macro      2332 /usr/include/elf.h #define R_AARCH64_LDST16_ABS_LO12_NC 284 /* Dir. ADD imm. from bits 11:1. */
R_AARCH64_LDST32_ABS_LO12_NC macro      2333 /usr/include/elf.h #define R_AARCH64_LDST32_ABS_LO12_NC 285 /* Likewise for bits 11:2. */
R_AARCH64_LDST64_ABS_LO12_NC macro      2334 /usr/include/elf.h #define R_AARCH64_LDST64_ABS_LO12_NC 286 /* Likewise for bits 11:3. */
R_AARCH64_LDST8_ABS_LO12_NC macro      2327 /usr/include/elf.h #define R_AARCH64_LDST8_ABS_LO12_NC 278 /* Likewise for LD/ST; no check. */
R_AARCH64_LD_PREL_LO19 macro      2322 /usr/include/elf.h #define R_AARCH64_LD_PREL_LO19 273 /* PC-rel. LD imm. from bits 20:2. */
R_AARCH64_MOVW_GOTOFF_G0 macro      2343 /usr/include/elf.h #define R_AARCH64_MOVW_GOTOFF_G0 300 /* GOT-rel. off. MOV{N,Z} imm. 15:0. */
R_AARCH64_MOVW_GOTOFF_G0_NC macro      2344 /usr/include/elf.h #define R_AARCH64_MOVW_GOTOFF_G0_NC 301 /* Likewise for MOVK; no check. */
R_AARCH64_MOVW_GOTOFF_G1 macro      2345 /usr/include/elf.h #define R_AARCH64_MOVW_GOTOFF_G1 302 /* GOT-rel. o. MOV{N,Z} imm. 31:16. */
R_AARCH64_MOVW_GOTOFF_G1_NC macro      2346 /usr/include/elf.h #define R_AARCH64_MOVW_GOTOFF_G1_NC 303 /* Likewise for MOVK; no check. */
R_AARCH64_MOVW_GOTOFF_G2 macro      2347 /usr/include/elf.h #define R_AARCH64_MOVW_GOTOFF_G2 304 /* GOT-rel. o. MOV{N,Z} imm. 47:32. */
R_AARCH64_MOVW_GOTOFF_G2_NC macro      2348 /usr/include/elf.h #define R_AARCH64_MOVW_GOTOFF_G2_NC 305 /* Likewise for MOVK; no check. */
R_AARCH64_MOVW_GOTOFF_G3 macro      2349 /usr/include/elf.h #define R_AARCH64_MOVW_GOTOFF_G3 306 /* GOT-rel. o. MOV{N,Z} imm. 63:48. */
R_AARCH64_MOVW_PREL_G0 macro      2335 /usr/include/elf.h #define R_AARCH64_MOVW_PREL_G0 287 /* PC-rel. MOV{N,Z} imm. from 15:0. */
R_AARCH64_MOVW_PREL_G0_NC macro      2336 /usr/include/elf.h #define R_AARCH64_MOVW_PREL_G0_NC 288 /* Likewise for MOVK; no check. */
R_AARCH64_MOVW_PREL_G1 macro      2337 /usr/include/elf.h #define R_AARCH64_MOVW_PREL_G1 289 /* PC-rel. MOV{N,Z} imm. from 31:16. */
R_AARCH64_MOVW_PREL_G1_NC macro      2338 /usr/include/elf.h #define R_AARCH64_MOVW_PREL_G1_NC 290 /* Likewise for MOVK; no check. */
R_AARCH64_MOVW_PREL_G2 macro      2339 /usr/include/elf.h #define R_AARCH64_MOVW_PREL_G2 291 /* PC-rel. MOV{N,Z} imm. from 47:32. */
R_AARCH64_MOVW_PREL_G2_NC macro      2340 /usr/include/elf.h #define R_AARCH64_MOVW_PREL_G2_NC 292 /* Likewise for MOVK; no check. */
R_AARCH64_MOVW_PREL_G3 macro      2341 /usr/include/elf.h #define R_AARCH64_MOVW_PREL_G3 293 /* PC-rel. MOV{N,Z} imm. from 63:48. */
R_AARCH64_MOVW_SABS_G0 macro      2319 /usr/include/elf.h #define R_AARCH64_MOVW_SABS_G0 270 /* Dir. MOV{N,Z} imm. from 15:0. */
R_AARCH64_MOVW_SABS_G1 macro      2320 /usr/include/elf.h #define R_AARCH64_MOVW_SABS_G1 271 /* Dir. MOV{N,Z} imm. from 31:16. */
R_AARCH64_MOVW_SABS_G2 macro      2321 /usr/include/elf.h #define R_AARCH64_MOVW_SABS_G2 272 /* Dir. MOV{N,Z} imm. from 47:32. */
R_AARCH64_MOVW_UABS_G0 macro      2312 /usr/include/elf.h #define R_AARCH64_MOVW_UABS_G0 263 /* Dir. MOVZ imm. from bits 15:0. */
R_AARCH64_MOVW_UABS_G0_NC macro      2313 /usr/include/elf.h #define R_AARCH64_MOVW_UABS_G0_NC 264 /* Likewise for MOVK; no check. */
R_AARCH64_MOVW_UABS_G1 macro      2314 /usr/include/elf.h #define R_AARCH64_MOVW_UABS_G1 265 /* Dir. MOVZ imm. from bits 31:16. */
R_AARCH64_MOVW_UABS_G1_NC macro      2315 /usr/include/elf.h #define R_AARCH64_MOVW_UABS_G1_NC 266 /* Likewise for MOVK; no check. */
R_AARCH64_MOVW_UABS_G2 macro      2316 /usr/include/elf.h #define R_AARCH64_MOVW_UABS_G2 267 /* Dir. MOVZ imm. from bits 47:32. */
R_AARCH64_MOVW_UABS_G2_NC macro      2317 /usr/include/elf.h #define R_AARCH64_MOVW_UABS_G2_NC 268 /* Likewise for MOVK; no check. */
R_AARCH64_MOVW_UABS_G3 macro      2318 /usr/include/elf.h #define R_AARCH64_MOVW_UABS_G3 269 /* Dir. MOV{K,Z} imm. from 63:48. */
R_AARCH64_NONE   macro      2305 /usr/include/elf.h #define R_AARCH64_NONE 0 /* No relocation. */
R_AARCH64_PREL16 macro      2311 /usr/include/elf.h #define R_AARCH64_PREL16 262 /* PC-relative 16-bit. */
R_AARCH64_PREL32 macro      2310 /usr/include/elf.h #define R_AARCH64_PREL32 261 /* PC-relative 32-bit. */
R_AARCH64_PREL64 macro      2309 /usr/include/elf.h #define R_AARCH64_PREL64 260 /* PC-relative 64-bit. */
R_AARCH64_RELATIVE macro      2422 /usr/include/elf.h #define R_AARCH64_RELATIVE 1027 /* Adjust by program base. */
R_AARCH64_TLSDESC macro      2426 /usr/include/elf.h #define R_AARCH64_TLSDESC 1031 /* TLS Descriptor. */
R_AARCH64_TLSDESC_ADD macro      2413 /usr/include/elf.h #define R_AARCH64_TLSDESC_ADD 568 /* Relax ADD. */
R_AARCH64_TLSDESC_ADD_LO12 macro      2409 /usr/include/elf.h #define R_AARCH64_TLSDESC_ADD_LO12 564 /* Direct ADD imm. from 11:0. */
R_AARCH64_TLSDESC_ADR_PAGE21 macro      2407 /usr/include/elf.h #define R_AARCH64_TLSDESC_ADR_PAGE21 562 /* Page-rel. ADRP imm. 32:12. */
R_AARCH64_TLSDESC_ADR_PREL21 macro      2406 /usr/include/elf.h #define R_AARCH64_TLSDESC_ADR_PREL21 561 /* PC-rel. ADR immediate 20:0. */
R_AARCH64_TLSDESC_CALL macro      2414 /usr/include/elf.h #define R_AARCH64_TLSDESC_CALL 569 /* Relax BLR. */
R_AARCH64_TLSDESC_LD64_LO12 macro      2408 /usr/include/elf.h #define R_AARCH64_TLSDESC_LD64_LO12 563 /* Direct LD off. from 11:3. */
R_AARCH64_TLSDESC_LDR macro      2412 /usr/include/elf.h #define R_AARCH64_TLSDESC_LDR 567 /* Relax LDR. */
R_AARCH64_TLSDESC_LD_PREL19 macro      2405 /usr/include/elf.h #define R_AARCH64_TLSDESC_LD_PREL19 560 /* PC-rel. load immediate 20:2. */
R_AARCH64_TLSDESC_OFF_G0_NC macro      2411 /usr/include/elf.h #define R_AARCH64_TLSDESC_OFF_G0_NC 566 /* GOT-rel. MOVK imm. 15:0; no ck. */
R_AARCH64_TLSDESC_OFF_G1 macro      2410 /usr/include/elf.h #define R_AARCH64_TLSDESC_OFF_G1 565 /* GOT-rel. MOV{N,Z} imm. 31:16. */
R_AARCH64_TLSGD_ADD_LO12_NC macro      2359 /usr/include/elf.h #define R_AARCH64_TLSGD_ADD_LO12_NC 514 /* direct ADD imm. from 11:0. */
R_AARCH64_TLSGD_ADR_PAGE21 macro      2358 /usr/include/elf.h #define R_AARCH64_TLSGD_ADR_PAGE21 513 /* page-rel. ADRP imm. 32:12. */
R_AARCH64_TLSGD_ADR_PREL21 macro      2357 /usr/include/elf.h #define R_AARCH64_TLSGD_ADR_PREL21 512 /* PC-relative ADR imm. 20:0. */
R_AARCH64_TLSGD_MOVW_G0_NC macro      2361 /usr/include/elf.h #define R_AARCH64_TLSGD_MOVW_G0_NC 516 /* GOT-rel. MOVK imm. 15:0. */
R_AARCH64_TLSGD_MOVW_G1 macro      2360 /usr/include/elf.h #define R_AARCH64_TLSGD_MOVW_G1 515 /* GOT-rel. MOV{N,Z} 31:16. */
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 macro      2386 /usr/include/elf.h #define R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 541 /* Page-rel. ADRP 32:12. */
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC macro      2387 /usr/include/elf.h #define R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC 542 /* Direct LD off. 11:3. */
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 macro      2388 /usr/include/elf.h #define R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 543 /* PC-rel. load imm. 20:2. */
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC macro      2385 /usr/include/elf.h #define R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC 540 /* GOT-rel. MOVK 15:0. */
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 macro      2384 /usr/include/elf.h #define R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 539 /* GOT-rel. MOV{N,Z} 31:16. */
R_AARCH64_TLSLD_ADD_DTPREL_HI12 macro      2373 /usr/include/elf.h #define R_AARCH64_TLSLD_ADD_DTPREL_HI12 528 /* DTP-rel. ADD imm. from 23:12. */
R_AARCH64_TLSLD_ADD_DTPREL_LO12 macro      2374 /usr/include/elf.h #define R_AARCH64_TLSLD_ADD_DTPREL_LO12 529 /* DTP-rel. ADD imm. from 11:0. */
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC macro      2375 /usr/include/elf.h #define R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC 530 /* Likewise; no ovfl. check. */
R_AARCH64_TLSLD_ADD_LO12_NC macro      2364 /usr/include/elf.h #define R_AARCH64_TLSLD_ADD_LO12_NC 519 /* Like 514; local dynamic model. */
R_AARCH64_TLSLD_ADR_PAGE21 macro      2363 /usr/include/elf.h #define R_AARCH64_TLSLD_ADR_PAGE21 518 /* Like 513; local dynamic model. */
R_AARCH64_TLSLD_ADR_PREL21 macro      2362 /usr/include/elf.h #define R_AARCH64_TLSLD_ADR_PREL21 517 /* Like 512; local dynamic model. */
R_AARCH64_TLSLD_LDST128_DTPREL_LO12 macro      2417 /usr/include/elf.h #define R_AARCH64_TLSLD_LDST128_DTPREL_LO12 572 /* DTP-rel. LD/ST imm. 11:4. */
R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC macro      2418 /usr/include/elf.h #define R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC 573 /* Likewise; no check. */
R_AARCH64_TLSLD_LDST16_DTPREL_LO12 macro      2378 /usr/include/elf.h #define R_AARCH64_TLSLD_LDST16_DTPREL_LO12 533 /* DTP-rel. LD/ST imm. 11:1. */
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC macro      2379 /usr/include/elf.h #define R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC 534 /* Likewise; no check. */
R_AARCH64_TLSLD_LDST32_DTPREL_LO12 macro      2380 /usr/include/elf.h #define R_AARCH64_TLSLD_LDST32_DTPREL_LO12 535 /* DTP-rel. LD/ST imm. 11:2. */
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC macro      2381 /usr/include/elf.h #define R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC 536 /* Likewise; no check. */
R_AARCH64_TLSLD_LDST64_DTPREL_LO12 macro      2382 /usr/include/elf.h #define R_AARCH64_TLSLD_LDST64_DTPREL_LO12 537 /* DTP-rel. LD/ST imm. 11:3. */
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC macro      2383 /usr/include/elf.h #define R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC 538 /* Likewise; no check. */
R_AARCH64_TLSLD_LDST8_DTPREL_LO12 macro      2376 /usr/include/elf.h #define R_AARCH64_TLSLD_LDST8_DTPREL_LO12 531 /* DTP-rel. LD/ST imm. 11:0. */
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC macro      2377 /usr/include/elf.h #define R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC 532 /* Likewise; no check. */
R_AARCH64_TLSLD_LD_PREL19 macro      2367 /usr/include/elf.h #define R_AARCH64_TLSLD_LD_PREL19 522 /* TLS PC-rel. load imm. 20:2. */
R_AARCH64_TLSLD_MOVW_DTPREL_G0 macro      2371 /usr/include/elf.h #define R_AARCH64_TLSLD_MOVW_DTPREL_G0 526 /* TLS DTP-rel. MOV{N,Z} 15:0. */
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC macro      2372 /usr/include/elf.h #define R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC 527 /* Likewise; MOVK; no check. */
R_AARCH64_TLSLD_MOVW_DTPREL_G1 macro      2369 /usr/include/elf.h #define R_AARCH64_TLSLD_MOVW_DTPREL_G1 524 /* TLS DTP-rel. MOV{N,Z} 31:16. */
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC macro      2370 /usr/include/elf.h #define R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC 525 /* Likewise; MOVK; no check. */
R_AARCH64_TLSLD_MOVW_DTPREL_G2 macro      2368 /usr/include/elf.h #define R_AARCH64_TLSLD_MOVW_DTPREL_G2 523 /* TLS DTP-rel. MOV{N,Z} 47:32. */
R_AARCH64_TLSLD_MOVW_G0_NC macro      2366 /usr/include/elf.h #define R_AARCH64_TLSLD_MOVW_G0_NC 521 /* Like 516; local dynamic model. */
R_AARCH64_TLSLD_MOVW_G1 macro      2365 /usr/include/elf.h #define R_AARCH64_TLSLD_MOVW_G1 520 /* Like 515; local dynamic model. */
R_AARCH64_TLSLE_ADD_TPREL_HI12 macro      2394 /usr/include/elf.h #define R_AARCH64_TLSLE_ADD_TPREL_HI12 549 /* TP-rel. ADD imm. 23:12. */
R_AARCH64_TLSLE_ADD_TPREL_LO12 macro      2395 /usr/include/elf.h #define R_AARCH64_TLSLE_ADD_TPREL_LO12 550 /* TP-rel. ADD imm. 11:0. */
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC macro      2396 /usr/include/elf.h #define R_AARCH64_TLSLE_ADD_TPREL_LO12_NC 551 /* Likewise; no ovfl. check. */
R_AARCH64_TLSLE_LDST128_TPREL_LO12 macro      2415 /usr/include/elf.h #define R_AARCH64_TLSLE_LDST128_TPREL_LO12 570 /* TP-rel. LD/ST off. 11:4. */
R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC macro      2416 /usr/include/elf.h #define R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC 571 /* Likewise; no check. */
R_AARCH64_TLSLE_LDST16_TPREL_LO12 macro      2399 /usr/include/elf.h #define R_AARCH64_TLSLE_LDST16_TPREL_LO12 554 /* TP-rel. LD/ST off. 11:1. */
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC macro      2400 /usr/include/elf.h #define R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC 555 /* Likewise; no check. */
R_AARCH64_TLSLE_LDST32_TPREL_LO12 macro      2401 /usr/include/elf.h #define R_AARCH64_TLSLE_LDST32_TPREL_LO12 556 /* TP-rel. LD/ST off. 11:2. */
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC macro      2402 /usr/include/elf.h #define R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC 557 /* Likewise; no check. */
R_AARCH64_TLSLE_LDST64_TPREL_LO12 macro      2403 /usr/include/elf.h #define R_AARCH64_TLSLE_LDST64_TPREL_LO12 558 /* TP-rel. LD/ST off. 11:3. */
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC macro      2404 /usr/include/elf.h #define R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC 559 /* Likewise; no check. */
R_AARCH64_TLSLE_LDST8_TPREL_LO12 macro      2397 /usr/include/elf.h #define R_AARCH64_TLSLE_LDST8_TPREL_LO12 552 /* TP-rel. LD/ST off. 11:0. */
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC macro      2398 /usr/include/elf.h #define R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC 553 /* Likewise; no ovfl. check. */
R_AARCH64_TLSLE_MOVW_TPREL_G0 macro      2392 /usr/include/elf.h #define R_AARCH64_TLSLE_MOVW_TPREL_G0 547 /* TLS TP-rel. MOV{N,Z} 15:0. */
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC macro      2393 /usr/include/elf.h #define R_AARCH64_TLSLE_MOVW_TPREL_G0_NC 548 /* Likewise; MOVK; no check. */
R_AARCH64_TLSLE_MOVW_TPREL_G1 macro      2390 /usr/include/elf.h #define R_AARCH64_TLSLE_MOVW_TPREL_G1 545 /* TLS TP-rel. MOV{N,Z} 31:16. */
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC macro      2391 /usr/include/elf.h #define R_AARCH64_TLSLE_MOVW_TPREL_G1_NC 546 /* Likewise; MOVK; no check. */
R_AARCH64_TLSLE_MOVW_TPREL_G2 macro      2389 /usr/include/elf.h #define R_AARCH64_TLSLE_MOVW_TPREL_G2 544 /* TLS TP-rel. MOV{N,Z} 47:32. */
R_AARCH64_TLS_DTPMOD64 macro      2423 /usr/include/elf.h #define R_AARCH64_TLS_DTPMOD64 1028 /* Module number, 64 bit. */
R_AARCH64_TLS_DTPREL64 macro      2424 /usr/include/elf.h #define R_AARCH64_TLS_DTPREL64 1029 /* Module-relative offset, 64 bit. */
R_AARCH64_TLS_TPREL64 macro      2425 /usr/include/elf.h #define R_AARCH64_TLS_TPREL64 1030 /* TP-relative offset, 64 bit. */
R_AARCH64_TSTBR14 macro      2328 /usr/include/elf.h #define R_AARCH64_TSTBR14 279 /* PC-rel. TBZ/TBNZ imm. from 15:2. */
R_ALPHA_BRADDR   macro      1921 /usr/include/elf.h #define R_ALPHA_BRADDR 7 /* PC+4 relative 23 bit shifted */
R_ALPHA_COPY     macro      1929 /usr/include/elf.h #define R_ALPHA_COPY 24 /* Copy symbol at runtime */
R_ALPHA_DTPMOD64 macro      1936 /usr/include/elf.h #define R_ALPHA_DTPMOD64 31
R_ALPHA_DTPREL16 macro      1941 /usr/include/elf.h #define R_ALPHA_DTPREL16 36
R_ALPHA_DTPREL64 macro      1938 /usr/include/elf.h #define R_ALPHA_DTPREL64 33
R_ALPHA_DTPRELHI macro      1939 /usr/include/elf.h #define R_ALPHA_DTPRELHI 34
R_ALPHA_DTPRELLO macro      1940 /usr/include/elf.h #define R_ALPHA_DTPRELLO 35
R_ALPHA_GLOB_DAT macro      1930 /usr/include/elf.h #define R_ALPHA_GLOB_DAT 25 /* Create GOT entry */
R_ALPHA_GOTDTPREL macro      1937 /usr/include/elf.h #define R_ALPHA_GOTDTPREL 32
R_ALPHA_GOTTPREL macro      1942 /usr/include/elf.h #define R_ALPHA_GOTTPREL 37
R_ALPHA_GPDISP   macro      1920 /usr/include/elf.h #define R_ALPHA_GPDISP 6 /* Add displacement to GP */
R_ALPHA_GPREL16  macro      1928 /usr/include/elf.h #define R_ALPHA_GPREL16 19 /* GP relative 16 bit */
R_ALPHA_GPREL32  macro      1917 /usr/include/elf.h #define R_ALPHA_GPREL32 3 /* GP relative 32 bit */
R_ALPHA_GPRELHIGH macro      1926 /usr/include/elf.h #define R_ALPHA_GPRELHIGH 17 /* GP relative 32 bit, high 16 bits */
R_ALPHA_GPRELLOW macro      1927 /usr/include/elf.h #define R_ALPHA_GPRELLOW 18 /* GP relative 32 bit, low 16 bits */
R_ALPHA_HINT     macro      1922 /usr/include/elf.h #define R_ALPHA_HINT 8 /* PC+4 relative 16 bit shifted */
R_ALPHA_JMP_SLOT macro      1931 /usr/include/elf.h #define R_ALPHA_JMP_SLOT 26 /* Create PLT entry */
R_ALPHA_LITERAL  macro      1918 /usr/include/elf.h #define R_ALPHA_LITERAL 4 /* GP relative 16 bit w/optimization */
R_ALPHA_LITUSE   macro      1919 /usr/include/elf.h #define R_ALPHA_LITUSE 5 /* Optimization hint for LITERAL */
R_ALPHA_NONE     macro      1914 /usr/include/elf.h #define R_ALPHA_NONE 0 /* No reloc */
R_ALPHA_NUM      macro      1948 /usr/include/elf.h #define R_ALPHA_NUM 46
R_ALPHA_REFLONG  macro      1915 /usr/include/elf.h #define R_ALPHA_REFLONG 1 /* Direct 32 bit */
R_ALPHA_REFQUAD  macro      1916 /usr/include/elf.h #define R_ALPHA_REFQUAD 2 /* Direct 64 bit */
R_ALPHA_RELATIVE macro      1932 /usr/include/elf.h #define R_ALPHA_RELATIVE 27 /* Adjust by program base */
R_ALPHA_SREL16   macro      1923 /usr/include/elf.h #define R_ALPHA_SREL16 9 /* PC relative 16 bit */
R_ALPHA_SREL32   macro      1924 /usr/include/elf.h #define R_ALPHA_SREL32 10 /* PC relative 32 bit */
R_ALPHA_SREL64   macro      1925 /usr/include/elf.h #define R_ALPHA_SREL64 11 /* PC relative 64 bit */
R_ALPHA_TLSGD    macro      1934 /usr/include/elf.h #define R_ALPHA_TLSGD 29
R_ALPHA_TLS_GD_HI macro      1933 /usr/include/elf.h #define R_ALPHA_TLS_GD_HI 28
R_ALPHA_TLS_LDM  macro      1935 /usr/include/elf.h #define R_ALPHA_TLS_LDM 30
R_ALPHA_TPREL16  macro      1946 /usr/include/elf.h #define R_ALPHA_TPREL16 41
R_ALPHA_TPREL64  macro      1943 /usr/include/elf.h #define R_ALPHA_TPREL64 38
R_ALPHA_TPRELHI  macro      1944 /usr/include/elf.h #define R_ALPHA_TPRELHI 39
R_ALPHA_TPRELLO  macro      1945 /usr/include/elf.h #define R_ALPHA_TPRELLO 40
R_ARM_ABS12      macro      2438 /usr/include/elf.h #define R_ARM_ABS12 6 /* Direct 12 bit */
R_ARM_ABS16      macro      2437 /usr/include/elf.h #define R_ARM_ABS16 5 /* Direct 16 bit */
R_ARM_ABS32      macro      2434 /usr/include/elf.h #define R_ARM_ABS32 2 /* Direct 32 bit */
R_ARM_ABS32_NOI  macro      2497 /usr/include/elf.h #define R_ARM_ABS32_NOI 55 /* Direct 32-bit. */
R_ARM_ABS8       macro      2440 /usr/include/elf.h #define R_ARM_ABS8 8 /* Direct 8 bit */
R_ARM_ALU_PCREL_15_8 macro      2468 /usr/include/elf.h #define R_ARM_ALU_PCREL_15_8 33 /* Obsolete. */
R_ARM_ALU_PCREL_23_15 macro      2469 /usr/include/elf.h #define R_ARM_ALU_PCREL_23_15 34 /* Obsolete. */
R_ARM_ALU_PCREL_7_0 macro      2467 /usr/include/elf.h #define R_ARM_ALU_PCREL_7_0 32 /* Obsolete. */
R_ARM_ALU_PC_G0  macro      2500 /usr/include/elf.h #define R_ARM_ALU_PC_G0 58 /* PC relative (ADD, SUB). */
R_ARM_ALU_PC_G0_NC macro      2499 /usr/include/elf.h #define R_ARM_ALU_PC_G0_NC 57 /* PC relative (ADD, SUB). */
R_ARM_ALU_PC_G1  macro      2502 /usr/include/elf.h #define R_ARM_ALU_PC_G1 60 /* PC relative (ADD, SUB). */
R_ARM_ALU_PC_G1_NC macro      2501 /usr/include/elf.h #define R_ARM_ALU_PC_G1_NC 59 /* PC relative (ADD, SUB). */
R_ARM_ALU_PC_G2  macro      2503 /usr/include/elf.h #define R_ARM_ALU_PC_G2 61 /* PC relative (ADD, SUB). */
R_ARM_ALU_SBREL_19_12 macro      2471 /usr/include/elf.h #define R_ARM_ALU_SBREL_19_12 36 /* Deprecated, prog. base relative. */
R_ARM_ALU_SBREL_27_20 macro      2472 /usr/include/elf.h #define R_ARM_ALU_SBREL_27_20 37 /* Deprecated, prog. base relative. */
R_ARM_ALU_SB_G0  macro      2516 /usr/include/elf.h #define R_ARM_ALU_SB_G0 71 /* Program base relative (ADD,SUB). */
R_ARM_ALU_SB_G0_NC macro      2515 /usr/include/elf.h #define R_ARM_ALU_SB_G0_NC 70 /* Program base relative (ADD,SUB). */
R_ARM_ALU_SB_G1  macro      2518 /usr/include/elf.h #define R_ARM_ALU_SB_G1 73 /* Program base relative (ADD,SUB). */
R_ARM_ALU_SB_G1_NC macro      2517 /usr/include/elf.h #define R_ARM_ALU_SB_G1_NC 72 /* Program base relative (ADD,SUB). */
R_ARM_ALU_SB_G2  macro      2519 /usr/include/elf.h #define R_ARM_ALU_SB_G2 74 /* Program base relative (ADD,SUB). */
R_ARM_AMP_VCALL9 macro      2445 /usr/include/elf.h #define R_ARM_AMP_VCALL9 12
R_ARM_BASE_ABS   macro      2466 /usr/include/elf.h #define R_ARM_BASE_ABS 31 /* Adjust by program base. */
R_ARM_CALL       macro      2462 /usr/include/elf.h #define R_ARM_CALL 28 /* PC relative 24 bit (BL, BLX). */
R_ARM_COPY       macro      2454 /usr/include/elf.h #define R_ARM_COPY 20 /* Copy symbol at runtime */
R_ARM_GLOB_DAT   macro      2455 /usr/include/elf.h #define R_ARM_GLOB_DAT 21 /* Create GOT entry */
R_ARM_GNU_VTENTRY macro      2559 /usr/include/elf.h #define R_ARM_GNU_VTENTRY 100
R_ARM_GNU_VTINHERIT macro      2560 /usr/include/elf.h #define R_ARM_GNU_VTINHERIT 101
R_ARM_GOT32      macro      2460 /usr/include/elf.h #define R_ARM_GOT32 26 /* 32 bit GOT entry */
R_ARM_GOTOFF     macro      2458 /usr/include/elf.h #define R_ARM_GOTOFF 24 /* 32 bit offset to GOT */
R_ARM_GOTOFF12   macro      2556 /usr/include/elf.h #define R_ARM_GOTOFF12 98 /* 12 bit, GOT entry relative
R_ARM_GOTPC      macro      2459 /usr/include/elf.h #define R_ARM_GOTPC 25 /* 32 bit PC relative offset to GOT */
R_ARM_GOTRELAX   macro      2558 /usr/include/elf.h #define R_ARM_GOTRELAX 99
R_ARM_GOT_ABS    macro      2552 /usr/include/elf.h #define R_ARM_GOT_ABS 95 /* GOT entry. */
R_ARM_GOT_BREL12 macro      2554 /usr/include/elf.h #define R_ARM_GOT_BREL12 97 /* GOT entry relative to GOT
R_ARM_GOT_PREL   macro      2553 /usr/include/elf.h #define R_ARM_GOT_PREL 96 /* PC relative GOT entry. */
R_ARM_IRELATIVE  macro      2586 /usr/include/elf.h #define R_ARM_IRELATIVE 160
R_ARM_JUMP24     macro      2463 /usr/include/elf.h #define R_ARM_JUMP24 29 /* PC relative 24 bit
R_ARM_JUMP_SLOT  macro      2456 /usr/include/elf.h #define R_ARM_JUMP_SLOT 22 /* Create PLT entry */
R_ARM_LDC_PC_G0  macro      2512 /usr/include/elf.h #define R_ARM_LDC_PC_G0 67 /* PC relative (LDC, STC). */
R_ARM_LDC_PC_G1  macro      2513 /usr/include/elf.h #define R_ARM_LDC_PC_G1 68 /* PC relative (LDC, STC). */
R_ARM_LDC_PC_G2  macro      2514 /usr/include/elf.h #define R_ARM_LDC_PC_G2 69 /* PC relative (LDC, STC). */
R_ARM_LDC_SB_G0  macro      2532 /usr/include/elf.h #define R_ARM_LDC_SB_G0 81 /* Program base relative (LDC,STC). */
R_ARM_LDC_SB_G1  macro      2533 /usr/include/elf.h #define R_ARM_LDC_SB_G1 82 /* Program base relative (LDC,STC). */
R_ARM_LDC_SB_G2  macro      2534 /usr/include/elf.h #define R_ARM_LDC_SB_G2 83 /* Program base relative (LDC,STC). */
R_ARM_LDRS_PC_G0 macro      2506 /usr/include/elf.h #define R_ARM_LDRS_PC_G0 64 /* PC relative (STR{D,H},
R_ARM_LDRS_PC_G1 macro      2508 /usr/include/elf.h #define R_ARM_LDRS_PC_G1 65 /* PC relative (STR{D,H},
R_ARM_LDRS_PC_G2 macro      2510 /usr/include/elf.h #define R_ARM_LDRS_PC_G2 66 /* PC relative (STR{D,H},
R_ARM_LDRS_SB_G0 macro      2526 /usr/include/elf.h #define R_ARM_LDRS_SB_G0 78 /* Program base relative
R_ARM_LDRS_SB_G1 macro      2528 /usr/include/elf.h #define R_ARM_LDRS_SB_G1 79 /* Program base relative
R_ARM_LDRS_SB_G2 macro      2530 /usr/include/elf.h #define R_ARM_LDRS_SB_G2 80 /* Program base relative
R_ARM_LDR_PC_G1  macro      2504 /usr/include/elf.h #define R_ARM_LDR_PC_G1 62 /* PC relative (LDR,STR,LDRB,STRB). */
R_ARM_LDR_PC_G2  macro      2505 /usr/include/elf.h #define R_ARM_LDR_PC_G2 63 /* PC relative (LDR,STR,LDRB,STRB). */
R_ARM_LDR_SBREL_11_0 macro      2470 /usr/include/elf.h #define R_ARM_LDR_SBREL_11_0 35 /* Deprecated, prog. base relative. */
R_ARM_LDR_SB_G0  macro      2520 /usr/include/elf.h #define R_ARM_LDR_SB_G0 75 /* Program base relative (LDR,
R_ARM_LDR_SB_G1  macro      2522 /usr/include/elf.h #define R_ARM_LDR_SB_G1 76 /* Program base relative
R_ARM_LDR_SB_G2  macro      2524 /usr/include/elf.h #define R_ARM_LDR_SB_G2 77 /* Program base relative
R_ARM_ME_TOO     macro      2580 /usr/include/elf.h #define R_ARM_ME_TOO 128 /* Obsolete. */
R_ARM_MOVT_ABS   macro      2479 /usr/include/elf.h #define R_ARM_MOVT_ABS 44 /* Direct high 16-bit (MOVT). */
R_ARM_MOVT_BREL  macro      2537 /usr/include/elf.h #define R_ARM_MOVT_BREL 85 /* Program base relative high
R_ARM_MOVT_PREL  macro      2481 /usr/include/elf.h #define R_ARM_MOVT_PREL 46 /* PC relative (MOVT). */
R_ARM_MOVW_ABS_NC macro      2478 /usr/include/elf.h #define R_ARM_MOVW_ABS_NC 43 /* Direct 16-bit (MOVW). */
R_ARM_MOVW_BREL  macro      2539 /usr/include/elf.h #define R_ARM_MOVW_BREL 86 /* Program base relative 16
R_ARM_MOVW_BREL_NC macro      2535 /usr/include/elf.h #define R_ARM_MOVW_BREL_NC 84 /* Program base relative 16
R_ARM_MOVW_PREL_NC macro      2480 /usr/include/elf.h #define R_ARM_MOVW_PREL_NC 45 /* PC relative 16-bit (MOVW). */
R_ARM_NONE       macro      2431 /usr/include/elf.h #define R_ARM_NONE 0 /* No reloc */
R_ARM_NUM        macro      2595 /usr/include/elf.h #define R_ARM_NUM 256
R_ARM_PC13       macro      2436 /usr/include/elf.h #define R_ARM_PC13 4
R_ARM_PC24       macro      2432 /usr/include/elf.h #define R_ARM_PC24 1 /* Deprecated PC relative 26
R_ARM_PLT32      macro      2461 /usr/include/elf.h #define R_ARM_PLT32 27 /* Deprecated, 32 bit PLT address. */
R_ARM_PLT32_ABS  macro      2551 /usr/include/elf.h #define R_ARM_PLT32_ABS 94
R_ARM_PREL31     macro      2477 /usr/include/elf.h #define R_ARM_PREL31 42 /* 32 bit PC relative. */
R_ARM_RABS22     macro      2591 /usr/include/elf.h #define R_ARM_RABS22 253
R_ARM_RBASE      macro      2593 /usr/include/elf.h #define R_ARM_RBASE 255
R_ARM_REL32      macro      2435 /usr/include/elf.h #define R_ARM_REL32 3 /* PC relative 32 bit */
R_ARM_REL32_NOI  macro      2498 /usr/include/elf.h #define R_ARM_REL32_NOI 56 /* PC relative 32-bit. */
R_ARM_RELATIVE   macro      2457 /usr/include/elf.h #define R_ARM_RELATIVE 23 /* Adjust by program base */
R_ARM_RPC24      macro      2592 /usr/include/elf.h #define R_ARM_RPC24 254
R_ARM_RREL32     macro      2590 /usr/include/elf.h #define R_ARM_RREL32 252
R_ARM_RSBREL32   macro      2588 /usr/include/elf.h #define R_ARM_RSBREL32 250
R_ARM_RXPC25     macro      2587 /usr/include/elf.h #define R_ARM_RXPC25 249
R_ARM_SBREL31    macro      2474 /usr/include/elf.h #define R_ARM_SBREL31 39 /* Program base relative. */
R_ARM_SBREL32    macro      2441 /usr/include/elf.h #define R_ARM_SBREL32 9
R_ARM_SWI24      macro      2446 /usr/include/elf.h #define R_ARM_SWI24 13 /* Obsolete static relocation. */
R_ARM_TARGET1    macro      2473 /usr/include/elf.h #define R_ARM_TARGET1 38
R_ARM_TARGET2    macro      2476 /usr/include/elf.h #define R_ARM_TARGET2 41
R_ARM_THM_ABS5   macro      2439 /usr/include/elf.h #define R_ARM_THM_ABS5 7 /* Direct & 0x7C (LDR, STR). */
R_ARM_THM_ALU_PREL_11_0 macro      2493 /usr/include/elf.h #define R_ARM_THM_ALU_PREL_11_0 53 /* PC relative 12 bit
R_ARM_THM_GOT_BREL12 macro      2584 /usr/include/elf.h #define R_ARM_THM_GOT_BREL12 131 /* GOT entry relative to GOT
R_ARM_THM_JUMP19 macro      2489 /usr/include/elf.h #define R_ARM_THM_JUMP19 51 /* PC relative 20 bit
R_ARM_THM_JUMP24 macro      2465 /usr/include/elf.h #define R_ARM_THM_JUMP24 30 /* PC relative 24 bit (Thumb32 B.W). */
R_ARM_THM_JUMP6  macro      2491 /usr/include/elf.h #define R_ARM_THM_JUMP6 52 /* PC relative X & 0x7E
R_ARM_THM_MOVT_ABS macro      2483 /usr/include/elf.h #define R_ARM_THM_MOVT_ABS 48 /* Direct high 16 bit
R_ARM_THM_MOVT_BREL macro      2543 /usr/include/elf.h #define R_ARM_THM_MOVT_BREL 88 /* Program base relative high
R_ARM_THM_MOVT_PREL macro      2487 /usr/include/elf.h #define R_ARM_THM_MOVT_PREL 50 /* PC relative high 16 bit
R_ARM_THM_MOVW_ABS_NC macro      2482 /usr/include/elf.h #define R_ARM_THM_MOVW_ABS_NC 47 /* Direct 16 bit (Thumb32 MOVW). */
R_ARM_THM_MOVW_BREL macro      2545 /usr/include/elf.h #define R_ARM_THM_MOVW_BREL 89 /* Program base relative 16
R_ARM_THM_MOVW_BREL_NC macro      2541 /usr/include/elf.h #define R_ARM_THM_MOVW_BREL_NC 87 /* Program base relative 16
R_ARM_THM_MOVW_PREL_NC macro      2485 /usr/include/elf.h #define R_ARM_THM_MOVW_PREL_NC 49 /* PC relative 16 bit
R_ARM_THM_PC11   macro      2561 /usr/include/elf.h #define R_ARM_THM_PC11 102 /* PC relative & 0xFFE (Thumb16 B). */
R_ARM_THM_PC12   macro      2495 /usr/include/elf.h #define R_ARM_THM_PC12 54 /* PC relative 12 bit
R_ARM_THM_PC22   macro      2442 /usr/include/elf.h #define R_ARM_THM_PC22 10 /* PC relative 24 bit (Thumb32 BL). */
R_ARM_THM_PC8    macro      2443 /usr/include/elf.h #define R_ARM_THM_PC8 11 /* PC relative & 0x3FC
R_ARM_THM_PC9    macro      2562 /usr/include/elf.h #define R_ARM_THM_PC9 103 /* PC relative & 0x1FE
R_ARM_THM_RPC22  macro      2589 /usr/include/elf.h #define R_ARM_THM_RPC22 251
R_ARM_THM_SWI8   macro      2448 /usr/include/elf.h #define R_ARM_THM_SWI8 14 /* Reserved. */
R_ARM_THM_TLS_CALL macro      2550 /usr/include/elf.h #define R_ARM_THM_TLS_CALL 93
R_ARM_THM_TLS_DESCSEQ macro      2581 /usr/include/elf.h #define R_ARM_THM_TLS_DESCSEQ 129
R_ARM_THM_TLS_DESCSEQ16 macro      2582 /usr/include/elf.h #define R_ARM_THM_TLS_DESCSEQ16 129
R_ARM_THM_TLS_DESCSEQ32 macro      2583 /usr/include/elf.h #define R_ARM_THM_TLS_DESCSEQ32 130
R_ARM_THM_XPC22  macro      2450 /usr/include/elf.h #define R_ARM_THM_XPC22 16 /* Reserved. */
R_ARM_TLS_CALL   macro      2548 /usr/include/elf.h #define R_ARM_TLS_CALL 91
R_ARM_TLS_DESC   macro      2447 /usr/include/elf.h #define R_ARM_TLS_DESC 13 /* Dynamic relocation. */
R_ARM_TLS_DESCSEQ macro      2549 /usr/include/elf.h #define R_ARM_TLS_DESCSEQ 92 /* TLS relaxation. */
R_ARM_TLS_DTPMOD32 macro      2451 /usr/include/elf.h #define R_ARM_TLS_DTPMOD32 17 /* ID of module containing symbol */
R_ARM_TLS_DTPOFF32 macro      2452 /usr/include/elf.h #define R_ARM_TLS_DTPOFF32 18 /* Offset in TLS block */
R_ARM_TLS_GD32   macro      2564 /usr/include/elf.h #define R_ARM_TLS_GD32 104 /* PC-rel 32 bit for global dynamic
R_ARM_TLS_GOTDESC macro      2547 /usr/include/elf.h #define R_ARM_TLS_GOTDESC 90
R_ARM_TLS_IE12GP macro      2578 /usr/include/elf.h #define R_ARM_TLS_IE12GP 111 /* 12 bit GOT entry relative
R_ARM_TLS_IE32   macro      2570 /usr/include/elf.h #define R_ARM_TLS_IE32 107 /* PC-rel 32 bit for GOT entry of
R_ARM_TLS_LDM32  macro      2566 /usr/include/elf.h #define R_ARM_TLS_LDM32 105 /* PC-rel 32 bit for local dynamic
R_ARM_TLS_LDO12  macro      2574 /usr/include/elf.h #define R_ARM_TLS_LDO12 109 /* 12 bit relative to TLS
R_ARM_TLS_LDO32  macro      2568 /usr/include/elf.h #define R_ARM_TLS_LDO32 106 /* 32 bit offset relative to TLS
R_ARM_TLS_LE12   macro      2576 /usr/include/elf.h #define R_ARM_TLS_LE12 110 /* 12 bit relative to static
R_ARM_TLS_LE32   macro      2572 /usr/include/elf.h #define R_ARM_TLS_LE32 108 /* 32 bit offset relative to static
R_ARM_TLS_TPOFF32 macro      2453 /usr/include/elf.h #define R_ARM_TLS_TPOFF32 19 /* Offset in static TLS block */
R_ARM_V4BX       macro      2475 /usr/include/elf.h #define R_ARM_V4BX 40
R_ARM_XPC25      macro      2449 /usr/include/elf.h #define R_ARM_XPC25 15 /* Reserved. */
R_CRIS_16        macro      2871 /usr/include/elf.h #define R_CRIS_16 2
R_CRIS_16_GOT    macro      2882 /usr/include/elf.h #define R_CRIS_16_GOT 13
R_CRIS_16_GOTPLT macro      2884 /usr/include/elf.h #define R_CRIS_16_GOTPLT 15
R_CRIS_16_PCREL  macro      2874 /usr/include/elf.h #define R_CRIS_16_PCREL 5
R_CRIS_32        macro      2872 /usr/include/elf.h #define R_CRIS_32 3
R_CRIS_32_GOT    macro      2883 /usr/include/elf.h #define R_CRIS_32_GOT 14
R_CRIS_32_GOTPLT macro      2885 /usr/include/elf.h #define R_CRIS_32_GOTPLT 16
R_CRIS_32_GOTREL macro      2886 /usr/include/elf.h #define R_CRIS_32_GOTREL 17
R_CRIS_32_PCREL  macro      2875 /usr/include/elf.h #define R_CRIS_32_PCREL 6
R_CRIS_32_PLT_GOTREL macro      2887 /usr/include/elf.h #define R_CRIS_32_PLT_GOTREL 18
R_CRIS_32_PLT_PCREL macro      2888 /usr/include/elf.h #define R_CRIS_32_PLT_PCREL 19
R_CRIS_8         macro      2870 /usr/include/elf.h #define R_CRIS_8 1
R_CRIS_8_PCREL   macro      2873 /usr/include/elf.h #define R_CRIS_8_PCREL 4
R_CRIS_COPY      macro      2878 /usr/include/elf.h #define R_CRIS_COPY 9
R_CRIS_GLOB_DAT  macro      2879 /usr/include/elf.h #define R_CRIS_GLOB_DAT 10
R_CRIS_GNU_VTENTRY macro      2877 /usr/include/elf.h #define R_CRIS_GNU_VTENTRY 8
R_CRIS_GNU_VTINHERIT macro      2876 /usr/include/elf.h #define R_CRIS_GNU_VTINHERIT 7
R_CRIS_JUMP_SLOT macro      2880 /usr/include/elf.h #define R_CRIS_JUMP_SLOT 11
R_CRIS_NONE      macro      2869 /usr/include/elf.h #define R_CRIS_NONE 0
R_CRIS_NUM       macro      2890 /usr/include/elf.h #define R_CRIS_NUM 20
R_CRIS_RELATIVE  macro      2881 /usr/include/elf.h #define R_CRIS_RELATIVE 12
R_IA64_COPY      macro      2687 /usr/include/elf.h #define R_IA64_COPY 0x84 /* copy relocation */
R_IA64_DIR32LSB  macro      2632 /usr/include/elf.h #define R_IA64_DIR32LSB 0x25 /* symbol + addend, data4 LSB */
R_IA64_DIR32MSB  macro      2631 /usr/include/elf.h #define R_IA64_DIR32MSB 0x24 /* symbol + addend, data4 MSB */
R_IA64_DIR64LSB  macro      2634 /usr/include/elf.h #define R_IA64_DIR64LSB 0x27 /* symbol + addend, data8 LSB */
R_IA64_DIR64MSB  macro      2633 /usr/include/elf.h #define R_IA64_DIR64MSB 0x26 /* symbol + addend, data8 MSB */
R_IA64_DTPMOD64LSB macro      2698 /usr/include/elf.h #define R_IA64_DTPMOD64LSB 0xa7 /* @dtpmod(sym + add), data8 LSB */
R_IA64_DTPMOD64MSB macro      2697 /usr/include/elf.h #define R_IA64_DTPMOD64MSB 0xa6 /* @dtpmod(sym + add), data8 MSB */
R_IA64_DTPREL14  macro      2700 /usr/include/elf.h #define R_IA64_DTPREL14 0xb1 /* @dtprel(sym + add), imm14 */
R_IA64_DTPREL22  macro      2701 /usr/include/elf.h #define R_IA64_DTPREL22 0xb2 /* @dtprel(sym + add), imm22 */
R_IA64_DTPREL32LSB macro      2704 /usr/include/elf.h #define R_IA64_DTPREL32LSB 0xb5 /* @dtprel(sym + add), data4 LSB */
R_IA64_DTPREL32MSB macro      2703 /usr/include/elf.h #define R_IA64_DTPREL32MSB 0xb4 /* @dtprel(sym + add), data4 MSB */
R_IA64_DTPREL64I macro      2702 /usr/include/elf.h #define R_IA64_DTPREL64I 0xb3 /* @dtprel(sym + add), imm64 */
R_IA64_DTPREL64LSB macro      2706 /usr/include/elf.h #define R_IA64_DTPREL64LSB 0xb7 /* @dtprel(sym + add), data8 LSB */
R_IA64_DTPREL64MSB macro      2705 /usr/include/elf.h #define R_IA64_DTPREL64MSB 0xb6 /* @dtprel(sym + add), data8 MSB */
R_IA64_FPTR32LSB macro      2649 /usr/include/elf.h #define R_IA64_FPTR32LSB 0x45 /* @fptr(sym + add), data4 LSB */
R_IA64_FPTR32MSB macro      2648 /usr/include/elf.h #define R_IA64_FPTR32MSB 0x44 /* @fptr(sym + add), data4 MSB */
R_IA64_FPTR64I   macro      2647 /usr/include/elf.h #define R_IA64_FPTR64I 0x43 /* @fptr(sym + add), mov imm64 */
R_IA64_FPTR64LSB macro      2651 /usr/include/elf.h #define R_IA64_FPTR64LSB 0x47 /* @fptr(sym + add), data8 LSB */
R_IA64_FPTR64MSB macro      2650 /usr/include/elf.h #define R_IA64_FPTR64MSB 0x46 /* @fptr(sym + add), data8 MSB */
R_IA64_GPREL22   macro      2635 /usr/include/elf.h #define R_IA64_GPREL22 0x2a /* @gprel(sym + add), add imm22 */
R_IA64_GPREL32LSB macro      2638 /usr/include/elf.h #define R_IA64_GPREL32LSB 0x2d /* @gprel(sym + add), data4 LSB */
R_IA64_GPREL32MSB macro      2637 /usr/include/elf.h #define R_IA64_GPREL32MSB 0x2c /* @gprel(sym + add), data4 MSB */
R_IA64_GPREL64I  macro      2636 /usr/include/elf.h #define R_IA64_GPREL64I 0x2b /* @gprel(sym + add), mov imm64 */
R_IA64_GPREL64LSB macro      2640 /usr/include/elf.h #define R_IA64_GPREL64LSB 0x2f /* @gprel(sym + add), data8 LSB */
R_IA64_GPREL64MSB macro      2639 /usr/include/elf.h #define R_IA64_GPREL64MSB 0x2e /* @gprel(sym + add), data8 MSB */
R_IA64_IMM14     macro      2628 /usr/include/elf.h #define R_IA64_IMM14 0x21 /* symbol + addend, add imm14 */
R_IA64_IMM22     macro      2629 /usr/include/elf.h #define R_IA64_IMM22 0x22 /* symbol + addend, add imm22 */
R_IA64_IMM64     macro      2630 /usr/include/elf.h #define R_IA64_IMM64 0x23 /* symbol + addend, mov imm64 */
R_IA64_IPLTLSB   macro      2686 /usr/include/elf.h #define R_IA64_IPLTLSB 0x81 /* dynamic reloc, imported PLT, LSB */
R_IA64_IPLTMSB   macro      2685 /usr/include/elf.h #define R_IA64_IPLTMSB 0x80 /* dynamic reloc, imported PLT, MSB */
R_IA64_LDXMOV    macro      2690 /usr/include/elf.h #define R_IA64_LDXMOV 0x87 /* Use of LTOFF22X. */
R_IA64_LTOFF22   macro      2641 /usr/include/elf.h #define R_IA64_LTOFF22 0x32 /* @ltoff(sym + add), add imm22 */
R_IA64_LTOFF22X  macro      2689 /usr/include/elf.h #define R_IA64_LTOFF22X 0x86 /* LTOFF22, relaxable. */
R_IA64_LTOFF64I  macro      2642 /usr/include/elf.h #define R_IA64_LTOFF64I 0x33 /* @ltoff(sym + add), mov imm64 */
R_IA64_LTOFF_DTPMOD22 macro      2699 /usr/include/elf.h #define R_IA64_LTOFF_DTPMOD22 0xaa /* @ltoff(@dtpmod(sym + add)), imm22 */
R_IA64_LTOFF_DTPREL22 macro      2707 /usr/include/elf.h #define R_IA64_LTOFF_DTPREL22 0xba /* @ltoff(@dtprel(s+a)), imm22 */
R_IA64_LTOFF_FPTR22 macro      2660 /usr/include/elf.h #define R_IA64_LTOFF_FPTR22 0x52 /* @ltoff(@fptr(s+a)), imm22 */
R_IA64_LTOFF_FPTR32LSB macro      2663 /usr/include/elf.h #define R_IA64_LTOFF_FPTR32LSB 0x55 /* @ltoff(@fptr(s+a)), data4 LSB */
R_IA64_LTOFF_FPTR32MSB macro      2662 /usr/include/elf.h #define R_IA64_LTOFF_FPTR32MSB 0x54 /* @ltoff(@fptr(s+a)), data4 MSB */
R_IA64_LTOFF_FPTR64I macro      2661 /usr/include/elf.h #define R_IA64_LTOFF_FPTR64I 0x53 /* @ltoff(@fptr(s+a)), imm64 */
R_IA64_LTOFF_FPTR64LSB macro      2665 /usr/include/elf.h #define R_IA64_LTOFF_FPTR64LSB 0x57 /* @ltoff(@fptr(s+a)), data8 LSB */
R_IA64_LTOFF_FPTR64MSB macro      2664 /usr/include/elf.h #define R_IA64_LTOFF_FPTR64MSB 0x56 /* @ltoff(@fptr(s+a)), data8 MSB */
R_IA64_LTOFF_TPREL22 macro      2696 /usr/include/elf.h #define R_IA64_LTOFF_TPREL22 0x9a /* @ltoff(@tprel(s+a)), imm2 */
R_IA64_LTV32LSB  macro      2679 /usr/include/elf.h #define R_IA64_LTV32LSB 0x75 /* symbol + addend, data4 LSB */
R_IA64_LTV32MSB  macro      2678 /usr/include/elf.h #define R_IA64_LTV32MSB 0x74 /* symbol + addend, data4 MSB */
R_IA64_LTV64LSB  macro      2681 /usr/include/elf.h #define R_IA64_LTV64LSB 0x77 /* symbol + addend, data8 LSB */
R_IA64_LTV64MSB  macro      2680 /usr/include/elf.h #define R_IA64_LTV64MSB 0x76 /* symbol + addend, data8 MSB */
R_IA64_NONE      macro      2627 /usr/include/elf.h #define R_IA64_NONE 0x00 /* none */
R_IA64_PCREL21B  macro      2653 /usr/include/elf.h #define R_IA64_PCREL21B 0x49 /* @pcrel(sym + add), ptb, call */
R_IA64_PCREL21BI macro      2682 /usr/include/elf.h #define R_IA64_PCREL21BI 0x79 /* @pcrel(sym + add), 21bit inst */
R_IA64_PCREL21F  macro      2655 /usr/include/elf.h #define R_IA64_PCREL21F 0x4b /* @pcrel(sym + add), fchkf */
R_IA64_PCREL21M  macro      2654 /usr/include/elf.h #define R_IA64_PCREL21M 0x4a /* @pcrel(sym + add), chk.s */
R_IA64_PCREL22   macro      2683 /usr/include/elf.h #define R_IA64_PCREL22 0x7a /* @pcrel(sym + add), 22bit inst */
R_IA64_PCREL32LSB macro      2657 /usr/include/elf.h #define R_IA64_PCREL32LSB 0x4d /* @pcrel(sym + add), data4 LSB */
R_IA64_PCREL32MSB macro      2656 /usr/include/elf.h #define R_IA64_PCREL32MSB 0x4c /* @pcrel(sym + add), data4 MSB */
R_IA64_PCREL60B  macro      2652 /usr/include/elf.h #define R_IA64_PCREL60B 0x48 /* @pcrel(sym + add), brl */
R_IA64_PCREL64I  macro      2684 /usr/include/elf.h #define R_IA64_PCREL64I 0x7b /* @pcrel(sym + add), 64bit inst */
R_IA64_PCREL64LSB macro      2659 /usr/include/elf.h #define R_IA64_PCREL64LSB 0x4f /* @pcrel(sym + add), data8 LSB */
R_IA64_PCREL64MSB macro      2658 /usr/include/elf.h #define R_IA64_PCREL64MSB 0x4e /* @pcrel(sym + add), data8 MSB */
R_IA64_PLTOFF22  macro      2643 /usr/include/elf.h #define R_IA64_PLTOFF22 0x3a /* @pltoff(sym + add), add imm22 */
R_IA64_PLTOFF64I macro      2644 /usr/include/elf.h #define R_IA64_PLTOFF64I 0x3b /* @pltoff(sym + add), mov imm64 */
R_IA64_PLTOFF64LSB macro      2646 /usr/include/elf.h #define R_IA64_PLTOFF64LSB 0x3f /* @pltoff(sym + add), data8 LSB */
R_IA64_PLTOFF64MSB macro      2645 /usr/include/elf.h #define R_IA64_PLTOFF64MSB 0x3e /* @pltoff(sym + add), data8 MSB */
R_IA64_REL32LSB  macro      2675 /usr/include/elf.h #define R_IA64_REL32LSB 0x6d /* data 4 + REL */
R_IA64_REL32MSB  macro      2674 /usr/include/elf.h #define R_IA64_REL32MSB 0x6c /* data 4 + REL */
R_IA64_REL64LSB  macro      2677 /usr/include/elf.h #define R_IA64_REL64LSB 0x6f /* data 8 + REL */
R_IA64_REL64MSB  macro      2676 /usr/include/elf.h #define R_IA64_REL64MSB 0x6e /* data 8 + REL */
R_IA64_SECREL32LSB macro      2671 /usr/include/elf.h #define R_IA64_SECREL32LSB 0x65 /* @secrel(sym + add), data4 LSB */
R_IA64_SECREL32MSB macro      2670 /usr/include/elf.h #define R_IA64_SECREL32MSB 0x64 /* @secrel(sym + add), data4 MSB */
R_IA64_SECREL64LSB macro      2673 /usr/include/elf.h #define R_IA64_SECREL64LSB 0x67 /* @secrel(sym + add), data8 LSB */
R_IA64_SECREL64MSB macro      2672 /usr/include/elf.h #define R_IA64_SECREL64MSB 0x66 /* @secrel(sym + add), data8 MSB */
R_IA64_SEGREL32LSB macro      2667 /usr/include/elf.h #define R_IA64_SEGREL32LSB 0x5d /* @segrel(sym + add), data4 LSB */
R_IA64_SEGREL32MSB macro      2666 /usr/include/elf.h #define R_IA64_SEGREL32MSB 0x5c /* @segrel(sym + add), data4 MSB */
R_IA64_SEGREL64LSB macro      2669 /usr/include/elf.h #define R_IA64_SEGREL64LSB 0x5f /* @segrel(sym + add), data8 LSB */
R_IA64_SEGREL64MSB macro      2668 /usr/include/elf.h #define R_IA64_SEGREL64MSB 0x5e /* @segrel(sym + add), data8 MSB */
R_IA64_SUB       macro      2688 /usr/include/elf.h #define R_IA64_SUB 0x85 /* Addend and symbol difference */
R_IA64_TPREL14   macro      2691 /usr/include/elf.h #define R_IA64_TPREL14 0x91 /* @tprel(sym + add), imm14 */
R_IA64_TPREL22   macro      2692 /usr/include/elf.h #define R_IA64_TPREL22 0x92 /* @tprel(sym + add), imm22 */
R_IA64_TPREL64I  macro      2693 /usr/include/elf.h #define R_IA64_TPREL64I 0x93 /* @tprel(sym + add), imm64 */
R_IA64_TPREL64LSB macro      2695 /usr/include/elf.h #define R_IA64_TPREL64LSB 0x97 /* @tprel(sym + add), data8 LSB */
R_IA64_TPREL64MSB macro      2694 /usr/include/elf.h #define R_IA64_TPREL64MSB 0x96 /* @tprel(sym + add), data8 MSB */
R_M32R_10_PCREL  macro      2994 /usr/include/elf.h #define R_M32R_10_PCREL 4 /* PC relative 10 bit shifted. */
R_M32R_10_PCREL_RELA macro      3007 /usr/include/elf.h #define R_M32R_10_PCREL_RELA 36 /* PC relative 10 bit shifted. */
R_M32R_16        macro      2991 /usr/include/elf.h #define R_M32R_16 1 /* Direct 16 bit. */
R_M32R_16_RELA   macro      3004 /usr/include/elf.h #define R_M32R_16_RELA 33 /* Direct 16 bit. */
R_M32R_18_PCREL  macro      2995 /usr/include/elf.h #define R_M32R_18_PCREL 5 /* PC relative 18 bit shifted. */
R_M32R_18_PCREL_RELA macro      3008 /usr/include/elf.h #define R_M32R_18_PCREL_RELA 37 /* PC relative 18 bit shifted. */
R_M32R_24        macro      2993 /usr/include/elf.h #define R_M32R_24 3 /* Direct 24 bit. */
R_M32R_24_RELA   macro      3006 /usr/include/elf.h #define R_M32R_24_RELA 35 /* Direct 24 bit. */
R_M32R_26_PCREL  macro      2996 /usr/include/elf.h #define R_M32R_26_PCREL 6 /* PC relative 26 bit shifted. */
R_M32R_26_PCREL_RELA macro      3009 /usr/include/elf.h #define R_M32R_26_PCREL_RELA 38 /* PC relative 26 bit shifted. */
R_M32R_26_PLTREL macro      3019 /usr/include/elf.h #define R_M32R_26_PLTREL 49 /* 26 bit PC relative to PLT shifted */
R_M32R_32        macro      2992 /usr/include/elf.h #define R_M32R_32 2 /* Direct 32 bit. */
R_M32R_32_RELA   macro      3005 /usr/include/elf.h #define R_M32R_32_RELA 34 /* Direct 32 bit. */
R_M32R_COPY      macro      3020 /usr/include/elf.h #define R_M32R_COPY 50 /* Copy symbol at runtime */
R_M32R_GLOB_DAT  macro      3021 /usr/include/elf.h #define R_M32R_GLOB_DAT 51 /* Create GOT entry */
R_M32R_GNU_VTENTRY macro      3002 /usr/include/elf.h #define R_M32R_GNU_VTENTRY 12
R_M32R_GNU_VTINHERIT macro      3001 /usr/include/elf.h #define R_M32R_GNU_VTINHERIT 11
R_M32R_GOT16_HI_SLO macro      3028 /usr/include/elf.h #define R_M32R_GOT16_HI_SLO 57 /* High 16 bit GOT entry with signed
R_M32R_GOT16_HI_ULO macro      3026 /usr/include/elf.h #define R_M32R_GOT16_HI_ULO 56 /* High 16 bit GOT entry with unsigned
R_M32R_GOT16_LO  macro      3030 /usr/include/elf.h #define R_M32R_GOT16_LO 58 /* Low 16 bit GOT entry */
R_M32R_GOT24     macro      3018 /usr/include/elf.h #define R_M32R_GOT24 48 /* 24 bit GOT entry */
R_M32R_GOTOFF    macro      3024 /usr/include/elf.h #define R_M32R_GOTOFF 54 /* 24 bit offset to GOT */
R_M32R_GOTOFF_HI_SLO macro      3039 /usr/include/elf.h #define R_M32R_GOTOFF_HI_SLO 63 /* High 16 bit offset to GOT
R_M32R_GOTOFF_HI_ULO macro      3037 /usr/include/elf.h #define R_M32R_GOTOFF_HI_ULO 62 /* High 16 bit offset to GOT
R_M32R_GOTOFF_LO macro      3041 /usr/include/elf.h #define R_M32R_GOTOFF_LO 64 /* Low 16 bit offset to GOT */
R_M32R_GOTPC24   macro      3025 /usr/include/elf.h #define R_M32R_GOTPC24 55 /* 24 bit PC relative offset to GOT */
R_M32R_GOTPC_HI_SLO macro      3033 /usr/include/elf.h #define R_M32R_GOTPC_HI_SLO 60 /* High 16 bit PC relative offset to
R_M32R_GOTPC_HI_ULO macro      3031 /usr/include/elf.h #define R_M32R_GOTPC_HI_ULO 59 /* High 16 bit PC relative offset to
R_M32R_GOTPC_LO  macro      3035 /usr/include/elf.h #define R_M32R_GOTPC_LO 61 /* Low 16 bit PC relative offset to
R_M32R_HI16_SLO  macro      2998 /usr/include/elf.h #define R_M32R_HI16_SLO 8 /* High 16 bit with signed low. */
R_M32R_HI16_SLO_RELA macro      3011 /usr/include/elf.h #define R_M32R_HI16_SLO_RELA 40 /* High 16 bit with signed low */
R_M32R_HI16_ULO  macro      2997 /usr/include/elf.h #define R_M32R_HI16_ULO 7 /* High 16 bit with unsigned low. */
R_M32R_HI16_ULO_RELA macro      3010 /usr/include/elf.h #define R_M32R_HI16_ULO_RELA 39 /* High 16 bit with unsigned low */
R_M32R_JMP_SLOT  macro      3022 /usr/include/elf.h #define R_M32R_JMP_SLOT 52 /* Create PLT entry */
R_M32R_LO16      macro      2999 /usr/include/elf.h #define R_M32R_LO16 9 /* Low 16 bit. */
R_M32R_LO16_RELA macro      3012 /usr/include/elf.h #define R_M32R_LO16_RELA 41 /* Low 16 bit */
R_M32R_NONE      macro      2990 /usr/include/elf.h #define R_M32R_NONE 0 /* No reloc. */
R_M32R_NUM       macro      3042 /usr/include/elf.h #define R_M32R_NUM 256 /* Keep this the last entry. */
R_M32R_REL32     macro      3016 /usr/include/elf.h #define R_M32R_REL32 45 /* PC relative 32 bit. */
R_M32R_RELATIVE  macro      3023 /usr/include/elf.h #define R_M32R_RELATIVE 53 /* Adjust by program base */
R_M32R_RELA_GNU_VTENTRY macro      3015 /usr/include/elf.h #define R_M32R_RELA_GNU_VTENTRY 44
R_M32R_RELA_GNU_VTINHERIT macro      3014 /usr/include/elf.h #define R_M32R_RELA_GNU_VTINHERIT 43
R_M32R_SDA16     macro      3000 /usr/include/elf.h #define R_M32R_SDA16 10 /* 16 bit offset in SDA. */
R_M32R_SDA16_RELA macro      3013 /usr/include/elf.h #define R_M32R_SDA16_RELA 42 /* 16 bit offset in SDA */
R_MICROBLAZE_32  macro      3046 /usr/include/elf.h #define R_MICROBLAZE_32 1 /* Direct 32 bit. */
R_MICROBLAZE_32_LO macro      3051 /usr/include/elf.h #define R_MICROBLAZE_32_LO 6 /* Low 16 bit. */
R_MICROBLAZE_32_PCREL macro      3047 /usr/include/elf.h #define R_MICROBLAZE_32_PCREL 2 /* PC relative 32 bit. */
R_MICROBLAZE_32_PCREL_LO macro      3049 /usr/include/elf.h #define R_MICROBLAZE_32_PCREL_LO 4 /* Low 16 bits of PCREL32. */
R_MICROBLAZE_32_SYM_OP_SYM macro      3055 /usr/include/elf.h #define R_MICROBLAZE_32_SYM_OP_SYM 10 /* Symbol Op Symbol relocation. */
R_MICROBLAZE_64  macro      3050 /usr/include/elf.h #define R_MICROBLAZE_64 5 /* Direct 64 bit. */
R_MICROBLAZE_64_NONE macro      3054 /usr/include/elf.h #define R_MICROBLAZE_64_NONE 9 /* No reloc. */
R_MICROBLAZE_64_PCREL macro      3048 /usr/include/elf.h #define R_MICROBLAZE_64_PCREL 3 /* PC relative 64 bit. */
R_MICROBLAZE_COPY macro      3066 /usr/include/elf.h #define R_MICROBLAZE_COPY 21 /* Runtime copy. */
R_MICROBLAZE_GLOB_DAT macro      3063 /usr/include/elf.h #define R_MICROBLAZE_GLOB_DAT 18 /* Create GOT entry. */
R_MICROBLAZE_GNU_VTENTRY macro      3057 /usr/include/elf.h #define R_MICROBLAZE_GNU_VTENTRY 12 /* GNU C++ vtable member usage. */
R_MICROBLAZE_GNU_VTINHERIT macro      3056 /usr/include/elf.h #define R_MICROBLAZE_GNU_VTINHERIT 11 /* GNU C++ vtable hierarchy. */
R_MICROBLAZE_GOTOFF_32 macro      3065 /usr/include/elf.h #define R_MICROBLAZE_GOTOFF_32 20 /* 32 bit offset to GOT. */
R_MICROBLAZE_GOTOFF_64 macro      3064 /usr/include/elf.h #define R_MICROBLAZE_GOTOFF_64 19 /* 64 bit offset to GOT. */
R_MICROBLAZE_GOTPC_64 macro      3058 /usr/include/elf.h #define R_MICROBLAZE_GOTPC_64 13 /* PC-relative GOT offset. */
R_MICROBLAZE_GOT_64 macro      3059 /usr/include/elf.h #define R_MICROBLAZE_GOT_64 14 /* GOT entry offset. */
R_MICROBLAZE_JUMP_SLOT macro      3062 /usr/include/elf.h #define R_MICROBLAZE_JUMP_SLOT 17 /* Create PLT entry. */
R_MICROBLAZE_NONE macro      3045 /usr/include/elf.h #define R_MICROBLAZE_NONE 0 /* No reloc. */
R_MICROBLAZE_PLT_64 macro      3060 /usr/include/elf.h #define R_MICROBLAZE_PLT_64 15 /* PLT offset (PC-relative). */
R_MICROBLAZE_REL macro      3061 /usr/include/elf.h #define R_MICROBLAZE_REL 16 /* Adjust by program base. */
R_MICROBLAZE_SRO32 macro      3052 /usr/include/elf.h #define R_MICROBLAZE_SRO32 7 /* Read-only small data area. */
R_MICROBLAZE_SRW32 macro      3053 /usr/include/elf.h #define R_MICROBLAZE_SRW32 8 /* Read-write small data area. */
R_MICROBLAZE_TLS macro      3067 /usr/include/elf.h #define R_MICROBLAZE_TLS 22 /* TLS Reloc. */
R_MICROBLAZE_TLSDTPMOD32 macro      3070 /usr/include/elf.h #define R_MICROBLAZE_TLSDTPMOD32 25 /* TLS Module ID. */
R_MICROBLAZE_TLSDTPREL32 macro      3071 /usr/include/elf.h #define R_MICROBLAZE_TLSDTPREL32 26 /* TLS Offset Within TLS Block. */
R_MICROBLAZE_TLSDTPREL64 macro      3072 /usr/include/elf.h #define R_MICROBLAZE_TLSDTPREL64 27 /* TLS Offset Within TLS Block. */
R_MICROBLAZE_TLSGD macro      3068 /usr/include/elf.h #define R_MICROBLAZE_TLSGD 23 /* TLS General Dynamic. */
R_MICROBLAZE_TLSGOTTPREL32 macro      3073 /usr/include/elf.h #define R_MICROBLAZE_TLSGOTTPREL32 28 /* TLS Offset From Thread Pointer. */
R_MICROBLAZE_TLSLD macro      3069 /usr/include/elf.h #define R_MICROBLAZE_TLSLD 24 /* TLS Local Dynamic. */
R_MICROBLAZE_TLSTPREL32 macro      3074 /usr/include/elf.h #define R_MICROBLAZE_TLSTPREL32 29 /* TLS Offset From Thread Pointer. */
R_MIPS_16        macro      1519 /usr/include/elf.h #define R_MIPS_16 1 /* Direct 16 bit */
R_MIPS_26        macro      1522 /usr/include/elf.h #define R_MIPS_26 4 /* Direct 26 bit shifted */
R_MIPS_32        macro      1520 /usr/include/elf.h #define R_MIPS_32 2 /* Direct 32 bit */
R_MIPS_64        macro      1534 /usr/include/elf.h #define R_MIPS_64 18
R_MIPS_ADD_IMMEDIATE macro      1550 /usr/include/elf.h #define R_MIPS_ADD_IMMEDIATE 34
R_MIPS_CALL16    macro      1529 /usr/include/elf.h #define R_MIPS_CALL16 11 /* 16 bit GOT entry for function */
R_MIPS_CALL_HI16 macro      1546 /usr/include/elf.h #define R_MIPS_CALL_HI16 30
R_MIPS_CALL_LO16 macro      1547 /usr/include/elf.h #define R_MIPS_CALL_LO16 31
R_MIPS_COPY      macro      1568 /usr/include/elf.h #define R_MIPS_COPY 126
R_MIPS_DELETE    macro      1543 /usr/include/elf.h #define R_MIPS_DELETE 27
R_MIPS_GLOB_DAT  macro      1567 /usr/include/elf.h #define R_MIPS_GLOB_DAT 51
R_MIPS_GOT16     macro      1527 /usr/include/elf.h #define R_MIPS_GOT16 9 /* 16 bit GOT entry */
R_MIPS_GOT_DISP  macro      1535 /usr/include/elf.h #define R_MIPS_GOT_DISP 19
R_MIPS_GOT_HI16  macro      1538 /usr/include/elf.h #define R_MIPS_GOT_HI16 22
R_MIPS_GOT_LO16  macro      1539 /usr/include/elf.h #define R_MIPS_GOT_LO16 23
R_MIPS_GOT_OFST  macro      1537 /usr/include/elf.h #define R_MIPS_GOT_OFST 21
R_MIPS_GOT_PAGE  macro      1536 /usr/include/elf.h #define R_MIPS_GOT_PAGE 20
R_MIPS_GPREL16   macro      1525 /usr/include/elf.h #define R_MIPS_GPREL16 7 /* GP relative 16 bit */
R_MIPS_GPREL32   macro      1530 /usr/include/elf.h #define R_MIPS_GPREL32 12 /* GP relative 32 bit */
R_MIPS_HI16      macro      1523 /usr/include/elf.h #define R_MIPS_HI16 5 /* High 16 bit */
R_MIPS_HIGHER    macro      1544 /usr/include/elf.h #define R_MIPS_HIGHER 28
R_MIPS_HIGHEST   macro      1545 /usr/include/elf.h #define R_MIPS_HIGHEST 29
R_MIPS_INSERT_A  macro      1541 /usr/include/elf.h #define R_MIPS_INSERT_A 25
R_MIPS_INSERT_B  macro      1542 /usr/include/elf.h #define R_MIPS_INSERT_B 26
R_MIPS_JALR      macro      1553 /usr/include/elf.h #define R_MIPS_JALR 37
R_MIPS_JUMP_SLOT macro      1569 /usr/include/elf.h #define R_MIPS_JUMP_SLOT 127
R_MIPS_LITERAL   macro      1526 /usr/include/elf.h #define R_MIPS_LITERAL 8 /* 16 bit literal entry */
R_MIPS_LO16      macro      1524 /usr/include/elf.h #define R_MIPS_LO16 6 /* Low 16 bit */
R_MIPS_NONE      macro      1518 /usr/include/elf.h #define R_MIPS_NONE 0 /* No reloc */
R_MIPS_NUM       macro      1571 /usr/include/elf.h #define R_MIPS_NUM 128
R_MIPS_PC16      macro      1528 /usr/include/elf.h #define R_MIPS_PC16 10 /* PC relative 16 bit */
R_MIPS_PJUMP     macro      1551 /usr/include/elf.h #define R_MIPS_PJUMP 35
R_MIPS_REL16     macro      1549 /usr/include/elf.h #define R_MIPS_REL16 33
R_MIPS_REL32     macro      1521 /usr/include/elf.h #define R_MIPS_REL32 3 /* PC relative 32 bit */
R_MIPS_RELGOT    macro      1552 /usr/include/elf.h #define R_MIPS_RELGOT 36
R_MIPS_SCN_DISP  macro      1548 /usr/include/elf.h #define R_MIPS_SCN_DISP 32
R_MIPS_SHIFT5    macro      1532 /usr/include/elf.h #define R_MIPS_SHIFT5 16
R_MIPS_SHIFT6    macro      1533 /usr/include/elf.h #define R_MIPS_SHIFT6 17
R_MIPS_SUB       macro      1540 /usr/include/elf.h #define R_MIPS_SUB 24
R_MIPS_TLS_DTPMOD32 macro      1554 /usr/include/elf.h #define R_MIPS_TLS_DTPMOD32 38 /* Module number 32 bit */
R_MIPS_TLS_DTPMOD64 macro      1556 /usr/include/elf.h #define R_MIPS_TLS_DTPMOD64 40 /* Module number 64 bit */
R_MIPS_TLS_DTPREL32 macro      1555 /usr/include/elf.h #define R_MIPS_TLS_DTPREL32 39 /* Module-relative offset 32 bit */
R_MIPS_TLS_DTPREL64 macro      1557 /usr/include/elf.h #define R_MIPS_TLS_DTPREL64 41 /* Module-relative offset 64 bit */
R_MIPS_TLS_DTPREL_HI16 macro      1560 /usr/include/elf.h #define R_MIPS_TLS_DTPREL_HI16 44 /* Module-relative offset, high 16 bits */
R_MIPS_TLS_DTPREL_LO16 macro      1561 /usr/include/elf.h #define R_MIPS_TLS_DTPREL_LO16 45 /* Module-relative offset, low 16 bits */
R_MIPS_TLS_GD    macro      1558 /usr/include/elf.h #define R_MIPS_TLS_GD 42 /* 16 bit GOT offset for GD */
R_MIPS_TLS_GOTTPREL macro      1562 /usr/include/elf.h #define R_MIPS_TLS_GOTTPREL 46 /* 16 bit GOT offset for IE */
R_MIPS_TLS_LDM   macro      1559 /usr/include/elf.h #define R_MIPS_TLS_LDM 43 /* 16 bit GOT offset for LDM */
R_MIPS_TLS_TPREL32 macro      1563 /usr/include/elf.h #define R_MIPS_TLS_TPREL32 47 /* TP-relative offset, 32 bit */
R_MIPS_TLS_TPREL64 macro      1564 /usr/include/elf.h #define R_MIPS_TLS_TPREL64 48 /* TP-relative offset, 64 bit */
R_MIPS_TLS_TPREL_HI16 macro      1565 /usr/include/elf.h #define R_MIPS_TLS_TPREL_HI16 49 /* TP-relative offset, high 16 bits */
R_MIPS_TLS_TPREL_LO16 macro      1566 /usr/include/elf.h #define R_MIPS_TLS_TPREL_LO16 50 /* TP-relative offset, low 16 bits */
R_MN10300_16     macro      2948 /usr/include/elf.h #define R_MN10300_16 2 /* Direct 16 bit. */
R_MN10300_24     macro      2955 /usr/include/elf.h #define R_MN10300_24 9 /* Direct 24 bit. */
R_MN10300_32     macro      2947 /usr/include/elf.h #define R_MN10300_32 1 /* Direct 32 bit. */
R_MN10300_8      macro      2949 /usr/include/elf.h #define R_MN10300_8 3 /* Direct 8 bit. */
R_MN10300_ALIGN  macro      2984 /usr/include/elf.h #define R_MN10300_ALIGN 34 /* Alignment requirement for linker
R_MN10300_COPY   macro      2966 /usr/include/elf.h #define R_MN10300_COPY 20 /* Copy symbol at runtime. */
R_MN10300_GLOB_DAT macro      2967 /usr/include/elf.h #define R_MN10300_GLOB_DAT 21 /* Create GOT entry. */
R_MN10300_GNU_VTENTRY macro      2954 /usr/include/elf.h #define R_MN10300_GNU_VTENTRY 8 /* ... collection annotation. */
R_MN10300_GNU_VTINHERIT macro      2953 /usr/include/elf.h #define R_MN10300_GNU_VTINHERIT 7 /* Ancient C++ vtable garbage... */
R_MN10300_GOT16  macro      2965 /usr/include/elf.h #define R_MN10300_GOT16 19 /* 16-bit offset to GOT entry. */
R_MN10300_GOT24  macro      2964 /usr/include/elf.h #define R_MN10300_GOT24 18 /* 24-bit offset to GOT entry. */
R_MN10300_GOT32  macro      2963 /usr/include/elf.h #define R_MN10300_GOT32 17 /* 32-bit offset to GOT entry. */
R_MN10300_GOTOFF16 macro      2960 /usr/include/elf.h #define R_MN10300_GOTOFF16 14 /* 16-bit offset from GOT. */
R_MN10300_GOTOFF24 macro      2959 /usr/include/elf.h #define R_MN10300_GOTOFF24 13 /* 24-bit offset from GOT. */
R_MN10300_GOTOFF32 macro      2958 /usr/include/elf.h #define R_MN10300_GOTOFF32 12 /* 32-bit offset from GOT. */
R_MN10300_GOTPC16 macro      2957 /usr/include/elf.h #define R_MN10300_GOTPC16 11 /* 16-bit PCrel offset to GOT. */
R_MN10300_GOTPC32 macro      2956 /usr/include/elf.h #define R_MN10300_GOTPC32 10 /* 32-bit PCrel offset to GOT. */
R_MN10300_JMP_SLOT macro      2968 /usr/include/elf.h #define R_MN10300_JMP_SLOT 22 /* Create PLT entry. */
R_MN10300_NONE   macro      2946 /usr/include/elf.h #define R_MN10300_NONE 0 /* No reloc. */
R_MN10300_NUM    macro      2986 /usr/include/elf.h #define R_MN10300_NUM 35
R_MN10300_PCREL16 macro      2951 /usr/include/elf.h #define R_MN10300_PCREL16 5 /* PC-relative 16-bit signed. */
R_MN10300_PCREL32 macro      2950 /usr/include/elf.h #define R_MN10300_PCREL32 4 /* PC-relative 32-bit. */
R_MN10300_PCREL8 macro      2952 /usr/include/elf.h #define R_MN10300_PCREL8 6 /* PC-relative 8-bit signed. */
R_MN10300_PLT16  macro      2962 /usr/include/elf.h #define R_MN10300_PLT16 16 /* 16-bit PCrel to PLT entry. */
R_MN10300_PLT32  macro      2961 /usr/include/elf.h #define R_MN10300_PLT32 15 /* 32-bit PCrel to PLT entry. */
R_MN10300_RELATIVE macro      2969 /usr/include/elf.h #define R_MN10300_RELATIVE 23 /* Adjust by program base. */
R_MN10300_SYM_DIFF macro      2982 /usr/include/elf.h #define R_MN10300_SYM_DIFF 33 /* Adjustment for next reloc as needed
R_MN10300_TLS_DTPMOD macro      2979 /usr/include/elf.h #define R_MN10300_TLS_DTPMOD 30 /* ID of module containing symbol. */
R_MN10300_TLS_DTPOFF macro      2980 /usr/include/elf.h #define R_MN10300_TLS_DTPOFF 31 /* Offset in module TLS block. */
R_MN10300_TLS_GD macro      2970 /usr/include/elf.h #define R_MN10300_TLS_GD 24 /* 32-bit offset for global dynamic. */
R_MN10300_TLS_GOTIE macro      2973 /usr/include/elf.h #define R_MN10300_TLS_GOTIE 27 /* GOT offset for static TLS block
R_MN10300_TLS_IE macro      2975 /usr/include/elf.h #define R_MN10300_TLS_IE 28 /* GOT address for static TLS block
R_MN10300_TLS_LD macro      2971 /usr/include/elf.h #define R_MN10300_TLS_LD 25 /* 32-bit offset for local dynamic. */
R_MN10300_TLS_LDO macro      2972 /usr/include/elf.h #define R_MN10300_TLS_LDO 26 /* Module-relative offset. */
R_MN10300_TLS_LE macro      2977 /usr/include/elf.h #define R_MN10300_TLS_LE 29 /* Offset relative to static TLS
R_MN10300_TLS_TPOFF macro      2981 /usr/include/elf.h #define R_MN10300_TLS_TPOFF 32 /* Offset in static TLS block. */
R_PARISC_COPY    macro      1814 /usr/include/elf.h #define R_PARISC_COPY 128 /* Copy relocation. */
R_PARISC_DIR14DR macro      1784 /usr/include/elf.h #define R_PARISC_DIR14DR 84 /* 14 bits of eff. address. */
R_PARISC_DIR14R  macro      1751 /usr/include/elf.h #define R_PARISC_DIR14R 6 /* Right 14 bits of eff. address. */
R_PARISC_DIR14WR macro      1783 /usr/include/elf.h #define R_PARISC_DIR14WR 83 /* 14 bits of eff. address. */
R_PARISC_DIR16DF macro      1787 /usr/include/elf.h #define R_PARISC_DIR16DF 87 /* 16 bits of eff. address. */
R_PARISC_DIR16F  macro      1785 /usr/include/elf.h #define R_PARISC_DIR16F 85 /* 16 bits of eff. address. */
R_PARISC_DIR16WF macro      1786 /usr/include/elf.h #define R_PARISC_DIR16WF 86 /* 16 bits of eff. address. */
R_PARISC_DIR17F  macro      1750 /usr/include/elf.h #define R_PARISC_DIR17F 4 /* 17 bits of eff. address. */
R_PARISC_DIR17R  macro      1749 /usr/include/elf.h #define R_PARISC_DIR17R 3 /* Right 17 bits of eff. address. */
R_PARISC_DIR21L  macro      1748 /usr/include/elf.h #define R_PARISC_DIR21L 2 /* Left 21 bits of eff. address. */
R_PARISC_DIR32   macro      1747 /usr/include/elf.h #define R_PARISC_DIR32 1 /* Direct 32-bit reference. */
R_PARISC_DIR64   macro      1782 /usr/include/elf.h #define R_PARISC_DIR64 80 /* 64 bits of eff. address. */
R_PARISC_DPREL14R macro      1758 /usr/include/elf.h #define R_PARISC_DPREL14R 22 /* Right 14 bits of rel. address. */
R_PARISC_DPREL21L macro      1757 /usr/include/elf.h #define R_PARISC_DPREL21L 18 /* Left 21 bits of rel. address. */
R_PARISC_EPLT    macro      1816 /usr/include/elf.h #define R_PARISC_EPLT 130 /* Dynamic reloc, exported PLT */
R_PARISC_FPTR64  macro      1771 /usr/include/elf.h #define R_PARISC_FPTR64 64 /* 64 bits function address. */
R_PARISC_GNU_VTENTRY macro      1835 /usr/include/elf.h #define R_PARISC_GNU_VTENTRY 232
R_PARISC_GNU_VTINHERIT macro      1836 /usr/include/elf.h #define R_PARISC_GNU_VTINHERIT 233
R_PARISC_GPREL14DR macro      1790 /usr/include/elf.h #define R_PARISC_GPREL14DR 92 /* GP-rel. address, right 14 bits. */
R_PARISC_GPREL14R macro      1760 /usr/include/elf.h #define R_PARISC_GPREL14R 30 /* GP-relative, right 14 bits. */
R_PARISC_GPREL14WR macro      1789 /usr/include/elf.h #define R_PARISC_GPREL14WR 91 /* GP-rel. address, right 14 bits. */
R_PARISC_GPREL16DF macro      1793 /usr/include/elf.h #define R_PARISC_GPREL16DF 95 /* 16 bits GP-rel. address. */
R_PARISC_GPREL16F macro      1791 /usr/include/elf.h #define R_PARISC_GPREL16F 93 /* 16 bits GP-rel. address. */
R_PARISC_GPREL16WF macro      1792 /usr/include/elf.h #define R_PARISC_GPREL16WF 94 /* 16 bits GP-rel. address. */
R_PARISC_GPREL21L macro      1759 /usr/include/elf.h #define R_PARISC_GPREL21L 26 /* GP-relative, left 21 bits. */
R_PARISC_GPREL64 macro      1788 /usr/include/elf.h #define R_PARISC_GPREL64 88 /* 64 bits of GP-rel. address. */
R_PARISC_HIRESERVE macro      1855 /usr/include/elf.h #define R_PARISC_HIRESERVE 255
R_PARISC_IPLT    macro      1815 /usr/include/elf.h #define R_PARISC_IPLT 129 /* Dynamic reloc, imported PLT */
R_PARISC_LORESERVE macro      1813 /usr/include/elf.h #define R_PARISC_LORESERVE 128
R_PARISC_LTOFF14DR macro      1796 /usr/include/elf.h #define R_PARISC_LTOFF14DR 100 /* LT-rel. address, right 14 bits. */
R_PARISC_LTOFF14R macro      1762 /usr/include/elf.h #define R_PARISC_LTOFF14R 38 /* LT-relative, right 14 bits. */
R_PARISC_LTOFF14WR macro      1795 /usr/include/elf.h #define R_PARISC_LTOFF14WR 99 /* LT-rel. address, right 14 bits. */
R_PARISC_LTOFF16DF macro      1799 /usr/include/elf.h #define R_PARISC_LTOFF16DF 103 /* 16 bits LT-rel. address. */
R_PARISC_LTOFF16F macro      1797 /usr/include/elf.h #define R_PARISC_LTOFF16F 101 /* 16 bits LT-rel. address. */
R_PARISC_LTOFF16WF macro      1798 /usr/include/elf.h #define R_PARISC_LTOFF16WF 102 /* 16 bits LT-rel. address. */
R_PARISC_LTOFF21L macro      1761 /usr/include/elf.h #define R_PARISC_LTOFF21L 34 /* LT-relative, left 21 bits. */
R_PARISC_LTOFF64 macro      1794 /usr/include/elf.h #define R_PARISC_LTOFF64 96 /* 64 bits LT-rel. address. */
R_PARISC_LTOFF_FPTR14DR macro      1809 /usr/include/elf.h #define R_PARISC_LTOFF_FPTR14DR 124 /* LT-rel. fct. ptr., right 14 bits. */
R_PARISC_LTOFF_FPTR14R macro      1770 /usr/include/elf.h #define R_PARISC_LTOFF_FPTR14R 62 /* LT-rel. fct ptr, right 14 bits. */
R_PARISC_LTOFF_FPTR14WR macro      1808 /usr/include/elf.h #define R_PARISC_LTOFF_FPTR14WR 123 /* LT-rel. fct. ptr., right 14 bits. */
R_PARISC_LTOFF_FPTR16DF macro      1812 /usr/include/elf.h #define R_PARISC_LTOFF_FPTR16DF 127 /* 16 bits LT-rel. function ptr. */
R_PARISC_LTOFF_FPTR16F macro      1810 /usr/include/elf.h #define R_PARISC_LTOFF_FPTR16F 125 /* 16 bits LT-rel. function ptr. */
R_PARISC_LTOFF_FPTR16WF macro      1811 /usr/include/elf.h #define R_PARISC_LTOFF_FPTR16WF 126 /* 16 bits LT-rel. function ptr. */
R_PARISC_LTOFF_FPTR21L macro      1769 /usr/include/elf.h #define R_PARISC_LTOFF_FPTR21L 58 /* LT-rel. fct ptr, left 21 bits. */
R_PARISC_LTOFF_FPTR32 macro      1768 /usr/include/elf.h #define R_PARISC_LTOFF_FPTR32 57 /* 32 bits LT-rel. function pointer. */
R_PARISC_LTOFF_FPTR64 macro      1807 /usr/include/elf.h #define R_PARISC_LTOFF_FPTR64 120 /* 64 bits LT-rel. function ptr. */
R_PARISC_LTOFF_TP14DR macro      1831 /usr/include/elf.h #define R_PARISC_LTOFF_TP14DR 228 /* LT-TP-rel. address, right 14 bits.*/
R_PARISC_LTOFF_TP14F macro      1822 /usr/include/elf.h #define R_PARISC_LTOFF_TP14F 167 /* 14 bits LT-TP-rel. address. */
R_PARISC_LTOFF_TP14R macro      1821 /usr/include/elf.h #define R_PARISC_LTOFF_TP14R 166 /* LT-TP-rel. address, right 14 bits.*/
R_PARISC_LTOFF_TP14WR macro      1830 /usr/include/elf.h #define R_PARISC_LTOFF_TP14WR 227 /* LT-TP-rel. address, right 14 bits.*/
R_PARISC_LTOFF_TP16DF macro      1834 /usr/include/elf.h #define R_PARISC_LTOFF_TP16DF 231 /* 16 bits LT-TP-rel. address. */
R_PARISC_LTOFF_TP16F macro      1832 /usr/include/elf.h #define R_PARISC_LTOFF_TP16F 229 /* 16 bits LT-TP-rel. address. */
R_PARISC_LTOFF_TP16WF macro      1833 /usr/include/elf.h #define R_PARISC_LTOFF_TP16WF 230 /* 16 bits LT-TP-rel. address. */
R_PARISC_LTOFF_TP21L macro      1820 /usr/include/elf.h #define R_PARISC_LTOFF_TP21L 162 /* LT-TP-rel. address, left 21 bits. */
R_PARISC_LTOFF_TP64 macro      1829 /usr/include/elf.h #define R_PARISC_LTOFF_TP64 224 /* 64 bits LT-TP-rel. address. */
R_PARISC_NONE    macro      1746 /usr/include/elf.h #define R_PARISC_NONE 0 /* No reloc. */
R_PARISC_PCREL14DR macro      1778 /usr/include/elf.h #define R_PARISC_PCREL14DR 76 /* PC rel. address, right 14 bits. */
R_PARISC_PCREL14R macro      1756 /usr/include/elf.h #define R_PARISC_PCREL14R 14 /* Right 14 bits of rel. address. */
R_PARISC_PCREL14WR macro      1777 /usr/include/elf.h #define R_PARISC_PCREL14WR 75 /* PC-rel. address, right 14 bits. */
R_PARISC_PCREL16DF macro      1781 /usr/include/elf.h #define R_PARISC_PCREL16DF 79 /* 16 bits PC-rel. address. */
R_PARISC_PCREL16F macro      1779 /usr/include/elf.h #define R_PARISC_PCREL16F 77 /* 16 bits PC-rel. address. */
R_PARISC_PCREL16WF macro      1780 /usr/include/elf.h #define R_PARISC_PCREL16WF 78 /* 16 bits PC-rel. address. */
R_PARISC_PCREL17F macro      1755 /usr/include/elf.h #define R_PARISC_PCREL17F 12 /* 17 bits of rel. address. */
R_PARISC_PCREL17R macro      1754 /usr/include/elf.h #define R_PARISC_PCREL17R 11 /* Right 17 bits of rel. address. */
R_PARISC_PCREL21L macro      1753 /usr/include/elf.h #define R_PARISC_PCREL21L 10 /* Left 21 bits of rel. address. */
R_PARISC_PCREL22F macro      1776 /usr/include/elf.h #define R_PARISC_PCREL22F 74 /* 22 bits PC-rel. address. */
R_PARISC_PCREL32 macro      1752 /usr/include/elf.h #define R_PARISC_PCREL32 9 /* 32-bit rel. address. */
R_PARISC_PCREL64 macro      1775 /usr/include/elf.h #define R_PARISC_PCREL64 72 /* 64 bits PC-rel. address. */
R_PARISC_PLABEL14R macro      1774 /usr/include/elf.h #define R_PARISC_PLABEL14R 70 /* Right 14 bits of fdesc address. */
R_PARISC_PLABEL21L macro      1773 /usr/include/elf.h #define R_PARISC_PLABEL21L 66 /* Left 21 bits of fdesc address. */
R_PARISC_PLABEL32 macro      1772 /usr/include/elf.h #define R_PARISC_PLABEL32 65 /* 32 bits function address. */
R_PARISC_PLTOFF14DR macro      1803 /usr/include/elf.h #define R_PARISC_PLTOFF14DR 116 /* PLT-rel. address, right 14 bits. */
R_PARISC_PLTOFF14R macro      1767 /usr/include/elf.h #define R_PARISC_PLTOFF14R 54 /* PLT rel. address, right 14 bits. */
R_PARISC_PLTOFF14WR macro      1802 /usr/include/elf.h #define R_PARISC_PLTOFF14WR 115 /* PLT-rel. address, right 14 bits. */
R_PARISC_PLTOFF16DF macro      1806 /usr/include/elf.h #define R_PARISC_PLTOFF16DF 119 /* 16 bits PLT-rel. address. */
R_PARISC_PLTOFF16F macro      1804 /usr/include/elf.h #define R_PARISC_PLTOFF16F 117 /* 16 bits LT-rel. address. */
R_PARISC_PLTOFF16WF macro      1805 /usr/include/elf.h #define R_PARISC_PLTOFF16WF 118 /* 16 bits PLT-rel. address. */
R_PARISC_PLTOFF21L macro      1766 /usr/include/elf.h #define R_PARISC_PLTOFF21L 50 /* PLT rel. address, left 21 bits. */
R_PARISC_SECREL32 macro      1763 /usr/include/elf.h #define R_PARISC_SECREL32 41 /* 32 bits section rel. address. */
R_PARISC_SECREL64 macro      1800 /usr/include/elf.h #define R_PARISC_SECREL64 104 /* 64 bits section rel. address. */
R_PARISC_SEGBASE macro      1764 /usr/include/elf.h #define R_PARISC_SEGBASE 48 /* No relocation, set segment base. */
R_PARISC_SEGREL32 macro      1765 /usr/include/elf.h #define R_PARISC_SEGREL32 49 /* 32 bits segment rel. address. */
R_PARISC_SEGREL64 macro      1801 /usr/include/elf.h #define R_PARISC_SEGREL64 112 /* 64 bits segment rel. address. */
R_PARISC_TLS_DTPMOD32 macro      1845 /usr/include/elf.h #define R_PARISC_TLS_DTPMOD32 242 /* DTP module 32-bit. */
R_PARISC_TLS_DTPMOD64 macro      1846 /usr/include/elf.h #define R_PARISC_TLS_DTPMOD64 243 /* DTP module 64-bit. */
R_PARISC_TLS_DTPOFF32 macro      1847 /usr/include/elf.h #define R_PARISC_TLS_DTPOFF32 244 /* DTP offset 32-bit. */
R_PARISC_TLS_DTPOFF64 macro      1848 /usr/include/elf.h #define R_PARISC_TLS_DTPOFF64 245 /* DTP offset 32-bit. */
R_PARISC_TLS_GD14R macro      1838 /usr/include/elf.h #define R_PARISC_TLS_GD14R 235 /* GD 14-bit right. */
R_PARISC_TLS_GD21L macro      1837 /usr/include/elf.h #define R_PARISC_TLS_GD21L 234 /* GD 21-bit left. */
R_PARISC_TLS_GDCALL macro      1839 /usr/include/elf.h #define R_PARISC_TLS_GDCALL 236 /* GD call to __t_g_a. */
R_PARISC_TLS_IE14R macro      1852 /usr/include/elf.h #define R_PARISC_TLS_IE14R R_PARISC_LTOFF_TP14R
R_PARISC_TLS_IE21L macro      1851 /usr/include/elf.h #define R_PARISC_TLS_IE21L R_PARISC_LTOFF_TP21L
R_PARISC_TLS_LDM14R macro      1841 /usr/include/elf.h #define R_PARISC_TLS_LDM14R 238 /* LD module 14-bit right. */
R_PARISC_TLS_LDM21L macro      1840 /usr/include/elf.h #define R_PARISC_TLS_LDM21L 237 /* LD module 21-bit left. */
R_PARISC_TLS_LDMCALL macro      1842 /usr/include/elf.h #define R_PARISC_TLS_LDMCALL 239 /* LD module call to __t_g_a. */
R_PARISC_TLS_LDO14R macro      1844 /usr/include/elf.h #define R_PARISC_TLS_LDO14R 241 /* LD offset 14-bit right. */
R_PARISC_TLS_LDO21L macro      1843 /usr/include/elf.h #define R_PARISC_TLS_LDO21L 240 /* LD offset 21-bit left. */
R_PARISC_TLS_LE14R macro      1850 /usr/include/elf.h #define R_PARISC_TLS_LE14R R_PARISC_TPREL14R
R_PARISC_TLS_LE21L macro      1849 /usr/include/elf.h #define R_PARISC_TLS_LE21L R_PARISC_TPREL21L
R_PARISC_TLS_TPREL32 macro      1853 /usr/include/elf.h #define R_PARISC_TLS_TPREL32 R_PARISC_TPREL32
R_PARISC_TLS_TPREL64 macro      1854 /usr/include/elf.h #define R_PARISC_TLS_TPREL64 R_PARISC_TPREL64
R_PARISC_TPREL14DR macro      1825 /usr/include/elf.h #define R_PARISC_TPREL14DR 220 /* TP-rel. address, right 14 bits. */
R_PARISC_TPREL14R macro      1819 /usr/include/elf.h #define R_PARISC_TPREL14R 158 /* TP-rel. address, right 14 bits. */
R_PARISC_TPREL14WR macro      1824 /usr/include/elf.h #define R_PARISC_TPREL14WR 219 /* TP-rel. address, right 14 bits. */
R_PARISC_TPREL16DF macro      1828 /usr/include/elf.h #define R_PARISC_TPREL16DF 223 /* 16 bits TP-rel. address. */
R_PARISC_TPREL16F macro      1826 /usr/include/elf.h #define R_PARISC_TPREL16F 221 /* 16 bits TP-rel. address. */
R_PARISC_TPREL16WF macro      1827 /usr/include/elf.h #define R_PARISC_TPREL16WF 222 /* 16 bits TP-rel. address. */
R_PARISC_TPREL21L macro      1818 /usr/include/elf.h #define R_PARISC_TPREL21L 154 /* TP-rel. address, left 21 bits. */
R_PARISC_TPREL32 macro      1817 /usr/include/elf.h #define R_PARISC_TPREL32 153 /* 32 bits TP-rel. address. */
R_PARISC_TPREL64 macro      1823 /usr/include/elf.h #define R_PARISC_TPREL64 216 /* 64 bits TP-rel. address. */
R_PPC64_ADDR14   macro      2093 /usr/include/elf.h #define R_PPC64_ADDR14 R_PPC_ADDR14 /* 16bit address, word aligned */
R_PPC64_ADDR14_BRNTAKEN macro      2095 /usr/include/elf.h #define R_PPC64_ADDR14_BRNTAKEN R_PPC_ADDR14_BRNTAKEN
R_PPC64_ADDR14_BRTAKEN macro      2094 /usr/include/elf.h #define R_PPC64_ADDR14_BRTAKEN R_PPC_ADDR14_BRTAKEN
R_PPC64_ADDR16   macro      2089 /usr/include/elf.h #define R_PPC64_ADDR16 R_PPC_ADDR16 /* 16bit absolute address */
R_PPC64_ADDR16_DS macro      2143 /usr/include/elf.h #define R_PPC64_ADDR16_DS 56 /* half16ds* (S + A) >> 2 */
R_PPC64_ADDR16_HA macro      2092 /usr/include/elf.h #define R_PPC64_ADDR16_HA R_PPC_ADDR16_HA /* adjusted high 16bits. */
R_PPC64_ADDR16_HI macro      2091 /usr/include/elf.h #define R_PPC64_ADDR16_HI R_PPC_ADDR16_HI /* high 16bits of address. */
R_PPC64_ADDR16_HIGH macro      2201 /usr/include/elf.h #define R_PPC64_ADDR16_HIGH 110
R_PPC64_ADDR16_HIGHA macro      2202 /usr/include/elf.h #define R_PPC64_ADDR16_HIGHA 111
R_PPC64_ADDR16_HIGHER macro      2125 /usr/include/elf.h #define R_PPC64_ADDR16_HIGHER 39 /* half16 #higher(S + A) */
R_PPC64_ADDR16_HIGHERA macro      2126 /usr/include/elf.h #define R_PPC64_ADDR16_HIGHERA 40 /* half16 #highera(S + A) */
R_PPC64_ADDR16_HIGHEST macro      2127 /usr/include/elf.h #define R_PPC64_ADDR16_HIGHEST 41 /* half16 #highest(S + A) */
R_PPC64_ADDR16_HIGHESTA macro      2128 /usr/include/elf.h #define R_PPC64_ADDR16_HIGHESTA 42 /* half16 #highesta(S + A) */
R_PPC64_ADDR16_LO macro      2090 /usr/include/elf.h #define R_PPC64_ADDR16_LO R_PPC_ADDR16_LO /* lower 16bits of address */
R_PPC64_ADDR16_LO_DS macro      2144 /usr/include/elf.h #define R_PPC64_ADDR16_LO_DS 57 /* half16ds #lo(S + A) >> 2 */
R_PPC64_ADDR24   macro      2088 /usr/include/elf.h #define R_PPC64_ADDR24 R_PPC_ADDR24 /* 26bit address, word aligned */
R_PPC64_ADDR30   macro      2123 /usr/include/elf.h #define R_PPC64_ADDR30 37 /* word30 (S + A - P) >> 2 */
R_PPC64_ADDR32   macro      2087 /usr/include/elf.h #define R_PPC64_ADDR32 R_PPC_ADDR32 /* 32bit absolute address */
R_PPC64_ADDR64   macro      2124 /usr/include/elf.h #define R_PPC64_ADDR64 38 /* doubleword64 S + A */
R_PPC64_COPY     macro      2105 /usr/include/elf.h #define R_PPC64_COPY R_PPC_COPY
R_PPC64_DTPMOD64 macro      2157 /usr/include/elf.h #define R_PPC64_DTPMOD64 68 /* doubleword64 (sym+add)@dtpmod */
R_PPC64_DTPREL16 macro      2163 /usr/include/elf.h #define R_PPC64_DTPREL16 74 /* half16* (sym+add)@dtprel */
R_PPC64_DTPREL16_DS macro      2190 /usr/include/elf.h #define R_PPC64_DTPREL16_DS 101 /* half16ds* (sym+add)@dtprel */
R_PPC64_DTPREL16_HA macro      2166 /usr/include/elf.h #define R_PPC64_DTPREL16_HA 77 /* half16 (sym+add)@dtprel@ha */
R_PPC64_DTPREL16_HI macro      2165 /usr/include/elf.h #define R_PPC64_DTPREL16_HI 76 /* half16 (sym+add)@dtprel@h */
R_PPC64_DTPREL16_HIGH macro      2205 /usr/include/elf.h #define R_PPC64_DTPREL16_HIGH 114
R_PPC64_DTPREL16_HIGHA macro      2206 /usr/include/elf.h #define R_PPC64_DTPREL16_HIGHA 115
R_PPC64_DTPREL16_HIGHER macro      2192 /usr/include/elf.h #define R_PPC64_DTPREL16_HIGHER 103 /* half16 (sym+add)@dtprel@higher */
R_PPC64_DTPREL16_HIGHERA macro      2193 /usr/include/elf.h #define R_PPC64_DTPREL16_HIGHERA 104 /* half16 (sym+add)@dtprel@highera */
R_PPC64_DTPREL16_HIGHEST macro      2194 /usr/include/elf.h #define R_PPC64_DTPREL16_HIGHEST 105 /* half16 (sym+add)@dtprel@highest */
R_PPC64_DTPREL16_HIGHESTA macro      2195 /usr/include/elf.h #define R_PPC64_DTPREL16_HIGHESTA 106 /* half16 (sym+add)@dtprel@highesta */
R_PPC64_DTPREL16_LO macro      2164 /usr/include/elf.h #define R_PPC64_DTPREL16_LO 75 /* half16 (sym+add)@dtprel@l */
R_PPC64_DTPREL16_LO_DS macro      2191 /usr/include/elf.h #define R_PPC64_DTPREL16_LO_DS 102 /* half16ds (sym+add)@dtprel@l */
R_PPC64_DTPREL64 macro      2167 /usr/include/elf.h #define R_PPC64_DTPREL64 78 /* doubleword64 (sym+add)@dtprel */
R_PPC64_GLOB_DAT macro      2106 /usr/include/elf.h #define R_PPC64_GLOB_DAT R_PPC_GLOB_DAT
R_PPC64_GOT16    macro      2100 /usr/include/elf.h #define R_PPC64_GOT16 R_PPC_GOT16
R_PPC64_GOT16_DS macro      2145 /usr/include/elf.h #define R_PPC64_GOT16_DS 58 /* half16ds* (G + A) >> 2 */
R_PPC64_GOT16_HA macro      2103 /usr/include/elf.h #define R_PPC64_GOT16_HA R_PPC_GOT16_HA
R_PPC64_GOT16_HI macro      2102 /usr/include/elf.h #define R_PPC64_GOT16_HI R_PPC_GOT16_HI
R_PPC64_GOT16_LO macro      2101 /usr/include/elf.h #define R_PPC64_GOT16_LO R_PPC_GOT16_LO
R_PPC64_GOT16_LO_DS macro      2146 /usr/include/elf.h #define R_PPC64_GOT16_LO_DS 59 /* half16ds #lo(G + A) >> 2 */
R_PPC64_GOT_DTPREL16_DS macro      2180 /usr/include/elf.h #define R_PPC64_GOT_DTPREL16_DS 91 /* half16ds* (sym+add)@got@dtprel */
R_PPC64_GOT_DTPREL16_HA macro      2183 /usr/include/elf.h #define R_PPC64_GOT_DTPREL16_HA 94 /* half16 (sym+add)@got@dtprel@ha */
R_PPC64_GOT_DTPREL16_HI macro      2182 /usr/include/elf.h #define R_PPC64_GOT_DTPREL16_HI 93 /* half16 (sym+add)@got@dtprel@h */
R_PPC64_GOT_DTPREL16_LO_DS macro      2181 /usr/include/elf.h #define R_PPC64_GOT_DTPREL16_LO_DS 92 /* half16ds (sym+add)@got@dtprel@l */
R_PPC64_GOT_TLSGD16 macro      2168 /usr/include/elf.h #define R_PPC64_GOT_TLSGD16 79 /* half16* (sym+add)@got@tlsgd */
R_PPC64_GOT_TLSGD16_HA macro      2171 /usr/include/elf.h #define R_PPC64_GOT_TLSGD16_HA 82 /* half16 (sym+add)@got@tlsgd@ha */
R_PPC64_GOT_TLSGD16_HI macro      2170 /usr/include/elf.h #define R_PPC64_GOT_TLSGD16_HI 81 /* half16 (sym+add)@got@tlsgd@h */
R_PPC64_GOT_TLSGD16_LO macro      2169 /usr/include/elf.h #define R_PPC64_GOT_TLSGD16_LO 80 /* half16 (sym+add)@got@tlsgd@l */
R_PPC64_GOT_TLSLD16 macro      2172 /usr/include/elf.h #define R_PPC64_GOT_TLSLD16 83 /* half16* (sym+add)@got@tlsld */
R_PPC64_GOT_TLSLD16_HA macro      2175 /usr/include/elf.h #define R_PPC64_GOT_TLSLD16_HA 86 /* half16 (sym+add)@got@tlsld@ha */
R_PPC64_GOT_TLSLD16_HI macro      2174 /usr/include/elf.h #define R_PPC64_GOT_TLSLD16_HI 85 /* half16 (sym+add)@got@tlsld@h */
R_PPC64_GOT_TLSLD16_LO macro      2173 /usr/include/elf.h #define R_PPC64_GOT_TLSLD16_LO 84 /* half16 (sym+add)@got@tlsld@l */
R_PPC64_GOT_TPREL16_DS macro      2176 /usr/include/elf.h #define R_PPC64_GOT_TPREL16_DS 87 /* half16ds* (sym+add)@got@tprel */
R_PPC64_GOT_TPREL16_HA macro      2179 /usr/include/elf.h #define R_PPC64_GOT_TPREL16_HA 90 /* half16 (sym+add)@got@tprel@ha */
R_PPC64_GOT_TPREL16_HI macro      2178 /usr/include/elf.h #define R_PPC64_GOT_TPREL16_HI 89 /* half16 (sym+add)@got@tprel@h */
R_PPC64_GOT_TPREL16_LO_DS macro      2177 /usr/include/elf.h #define R_PPC64_GOT_TPREL16_LO_DS 88 /* half16ds (sym+add)@got@tprel@l */
R_PPC64_IRELATIVE macro      2210 /usr/include/elf.h #define R_PPC64_IRELATIVE 248
R_PPC64_JMP_IREL macro      2209 /usr/include/elf.h #define R_PPC64_JMP_IREL 247
R_PPC64_JMP_SLOT macro      2107 /usr/include/elf.h #define R_PPC64_JMP_SLOT R_PPC_JMP_SLOT
R_PPC64_NONE     macro      2086 /usr/include/elf.h #define R_PPC64_NONE R_PPC_NONE
R_PPC64_PLT16_HA macro      2117 /usr/include/elf.h #define R_PPC64_PLT16_HA R_PPC_PLT16_HA
R_PPC64_PLT16_HI macro      2116 /usr/include/elf.h #define R_PPC64_PLT16_HI R_PPC_PLT16_HI
R_PPC64_PLT16_LO macro      2115 /usr/include/elf.h #define R_PPC64_PLT16_LO R_PPC_PLT16_LO
R_PPC64_PLT16_LO_DS macro      2147 /usr/include/elf.h #define R_PPC64_PLT16_LO_DS 60 /* half16ds #lo(L + A) >> 2 */
R_PPC64_PLT32    macro      2113 /usr/include/elf.h #define R_PPC64_PLT32 R_PPC_PLT32
R_PPC64_PLT64    macro      2131 /usr/include/elf.h #define R_PPC64_PLT64 45 /* doubleword64 L + A */
R_PPC64_PLTGOT16 macro      2138 /usr/include/elf.h #define R_PPC64_PLTGOT16 52 /* half16* M + A */
R_PPC64_PLTGOT16_DS macro      2152 /usr/include/elf.h #define R_PPC64_PLTGOT16_DS 65 /* half16ds* (M + A) >> 2 */
R_PPC64_PLTGOT16_HA macro      2141 /usr/include/elf.h #define R_PPC64_PLTGOT16_HA 55 /* half16 #ha(M + A) */
R_PPC64_PLTGOT16_HI macro      2140 /usr/include/elf.h #define R_PPC64_PLTGOT16_HI 54 /* half16 #hi(M + A) */
R_PPC64_PLTGOT16_LO macro      2139 /usr/include/elf.h #define R_PPC64_PLTGOT16_LO 53 /* half16 #lo(M + A) */
R_PPC64_PLTGOT16_LO_DS macro      2153 /usr/include/elf.h #define R_PPC64_PLTGOT16_LO_DS 66 /* half16ds #lo(M + A) >> 2 */
R_PPC64_PLTREL32 macro      2114 /usr/include/elf.h #define R_PPC64_PLTREL32 R_PPC_PLTREL32
R_PPC64_PLTREL64 macro      2132 /usr/include/elf.h #define R_PPC64_PLTREL64 46 /* doubleword64 L + A - P */
R_PPC64_REL14    macro      2097 /usr/include/elf.h #define R_PPC64_REL14 R_PPC_REL14 /* PC relative 16 bit */
R_PPC64_REL14_BRNTAKEN macro      2099 /usr/include/elf.h #define R_PPC64_REL14_BRNTAKEN R_PPC_REL14_BRNTAKEN
R_PPC64_REL14_BRTAKEN macro      2098 /usr/include/elf.h #define R_PPC64_REL14_BRTAKEN R_PPC_REL14_BRTAKEN
R_PPC64_REL16    macro      2211 /usr/include/elf.h #define R_PPC64_REL16 249 /* half16 (sym+add-.) */
R_PPC64_REL16_HA macro      2214 /usr/include/elf.h #define R_PPC64_REL16_HA 252 /* half16 (sym+add-.)@ha */
R_PPC64_REL16_HI macro      2213 /usr/include/elf.h #define R_PPC64_REL16_HI 251 /* half16 (sym+add-.)@h */
R_PPC64_REL16_LO macro      2212 /usr/include/elf.h #define R_PPC64_REL16_LO 250 /* half16 (sym+add-.)@l */
R_PPC64_REL24    macro      2096 /usr/include/elf.h #define R_PPC64_REL24 R_PPC_REL24 /* PC-rel. 26 bit, word aligned */
R_PPC64_REL32    macro      2112 /usr/include/elf.h #define R_PPC64_REL32 R_PPC_REL32
R_PPC64_REL64    macro      2130 /usr/include/elf.h #define R_PPC64_REL64 44 /* doubleword64 S + A - P */
R_PPC64_RELATIVE macro      2108 /usr/include/elf.h #define R_PPC64_RELATIVE R_PPC_RELATIVE
R_PPC64_SECTOFF  macro      2119 /usr/include/elf.h #define R_PPC64_SECTOFF R_PPC_SECTOFF
R_PPC64_SECTOFF_DS macro      2148 /usr/include/elf.h #define R_PPC64_SECTOFF_DS 61 /* half16ds* (R + A) >> 2 */
R_PPC64_SECTOFF_HA macro      2122 /usr/include/elf.h #define R_PPC64_SECTOFF_HA R_PPC_SECTOFF_HA
R_PPC64_SECTOFF_HI macro      2121 /usr/include/elf.h #define R_PPC64_SECTOFF_HI R_PPC_SECTOFF_HI
R_PPC64_SECTOFF_LO macro      2120 /usr/include/elf.h #define R_PPC64_SECTOFF_LO R_PPC_SECTOFF_LO
R_PPC64_SECTOFF_LO_DS macro      2149 /usr/include/elf.h #define R_PPC64_SECTOFF_LO_DS 62 /* half16ds #lo(R + A) >> 2 */
R_PPC64_TLS      macro      2156 /usr/include/elf.h #define R_PPC64_TLS 67 /* none (sym+add)@tls */
R_PPC64_TLSGD    macro      2196 /usr/include/elf.h #define R_PPC64_TLSGD 107 /* none (sym+add)@tlsgd */
R_PPC64_TLSLD    macro      2197 /usr/include/elf.h #define R_PPC64_TLSLD 108 /* none (sym+add)@tlsld */
R_PPC64_TOC      macro      2137 /usr/include/elf.h #define R_PPC64_TOC 51 /* doubleword64 .TOC */
R_PPC64_TOC16    macro      2133 /usr/include/elf.h #define R_PPC64_TOC16 47 /* half16* S + A - .TOC */
R_PPC64_TOC16_DS macro      2150 /usr/include/elf.h #define R_PPC64_TOC16_DS 63 /* half16ds* (S + A - .TOC.) >> 2 */
R_PPC64_TOC16_HA macro      2136 /usr/include/elf.h #define R_PPC64_TOC16_HA 50 /* half16 #ha(S + A - .TOC.) */
R_PPC64_TOC16_HI macro      2135 /usr/include/elf.h #define R_PPC64_TOC16_HI 49 /* half16 #hi(S + A - .TOC.) */
R_PPC64_TOC16_LO macro      2134 /usr/include/elf.h #define R_PPC64_TOC16_LO 48 /* half16 #lo(S + A - .TOC.) */
R_PPC64_TOC16_LO_DS macro      2151 /usr/include/elf.h #define R_PPC64_TOC16_LO_DS 64 /* half16ds #lo(S + A - .TOC.) >> 2 */
R_PPC64_TOCSAVE  macro      2198 /usr/include/elf.h #define R_PPC64_TOCSAVE 109 /* none */
R_PPC64_TPREL16  macro      2158 /usr/include/elf.h #define R_PPC64_TPREL16 69 /* half16* (sym+add)@tprel */
R_PPC64_TPREL16_DS macro      2184 /usr/include/elf.h #define R_PPC64_TPREL16_DS 95 /* half16ds* (sym+add)@tprel */
R_PPC64_TPREL16_HA macro      2161 /usr/include/elf.h #define R_PPC64_TPREL16_HA 72 /* half16 (sym+add)@tprel@ha */
R_PPC64_TPREL16_HI macro      2160 /usr/include/elf.h #define R_PPC64_TPREL16_HI 71 /* half16 (sym+add)@tprel@h */
R_PPC64_TPREL16_HIGH macro      2203 /usr/include/elf.h #define R_PPC64_TPREL16_HIGH 112
R_PPC64_TPREL16_HIGHA macro      2204 /usr/include/elf.h #define R_PPC64_TPREL16_HIGHA 113
R_PPC64_TPREL16_HIGHER macro      2186 /usr/include/elf.h #define R_PPC64_TPREL16_HIGHER 97 /* half16 (sym+add)@tprel@higher */
R_PPC64_TPREL16_HIGHERA macro      2187 /usr/include/elf.h #define R_PPC64_TPREL16_HIGHERA 98 /* half16 (sym+add)@tprel@highera */
R_PPC64_TPREL16_HIGHEST macro      2188 /usr/include/elf.h #define R_PPC64_TPREL16_HIGHEST 99 /* half16 (sym+add)@tprel@highest */
R_PPC64_TPREL16_HIGHESTA macro      2189 /usr/include/elf.h #define R_PPC64_TPREL16_HIGHESTA 100 /* half16 (sym+add)@tprel@highesta */
R_PPC64_TPREL16_LO macro      2159 /usr/include/elf.h #define R_PPC64_TPREL16_LO 70 /* half16 (sym+add)@tprel@l */
R_PPC64_TPREL16_LO_DS macro      2185 /usr/include/elf.h #define R_PPC64_TPREL16_LO_DS 96 /* half16ds (sym+add)@tprel@l */
R_PPC64_TPREL64  macro      2162 /usr/include/elf.h #define R_PPC64_TPREL64 73 /* doubleword64 (sym+add)@tprel */
R_PPC64_UADDR16  macro      2111 /usr/include/elf.h #define R_PPC64_UADDR16 R_PPC_UADDR16
R_PPC64_UADDR32  macro      2110 /usr/include/elf.h #define R_PPC64_UADDR32 R_PPC_UADDR32
R_PPC64_UADDR64  macro      2129 /usr/include/elf.h #define R_PPC64_UADDR64 43 /* doubleword64 S + A */
R_PPC_ADDR14     macro      1980 /usr/include/elf.h #define R_PPC_ADDR14 7 /* 16bit address, 2 bits ignored */
R_PPC_ADDR14_BRNTAKEN macro      1982 /usr/include/elf.h #define R_PPC_ADDR14_BRNTAKEN 9
R_PPC_ADDR14_BRTAKEN macro      1981 /usr/include/elf.h #define R_PPC_ADDR14_BRTAKEN 8
R_PPC_ADDR16     macro      1976 /usr/include/elf.h #define R_PPC_ADDR16 3 /* 16bit absolute address */
R_PPC_ADDR16_HA  macro      1979 /usr/include/elf.h #define R_PPC_ADDR16_HA 6 /* adjusted high 16bit */
R_PPC_ADDR16_HI  macro      1978 /usr/include/elf.h #define R_PPC_ADDR16_HI 5 /* high 16bit of absolute address */
R_PPC_ADDR16_LO  macro      1977 /usr/include/elf.h #define R_PPC_ADDR16_LO 4 /* lower 16bit of absolute address */
R_PPC_ADDR24     macro      1975 /usr/include/elf.h #define R_PPC_ADDR24 2 /* 26bit address, 2 bits ignored. */
R_PPC_ADDR32     macro      1974 /usr/include/elf.h #define R_PPC_ADDR32 1 /* 32bit absolute address */
R_PPC_COPY       macro      1992 /usr/include/elf.h #define R_PPC_COPY 19
R_PPC_DIAB_RELSDA_HA macro      2066 /usr/include/elf.h #define R_PPC_DIAB_RELSDA_HA 185 /* like EMB_RELSDA, adjusted high 16 */
R_PPC_DIAB_RELSDA_HI macro      2065 /usr/include/elf.h #define R_PPC_DIAB_RELSDA_HI 184 /* like EMB_RELSDA, but high 16 bit */
R_PPC_DIAB_RELSDA_LO macro      2064 /usr/include/elf.h #define R_PPC_DIAB_RELSDA_LO 183 /* like EMB_RELSDA, but lower 16 bit */
R_PPC_DIAB_SDA21_HA macro      2063 /usr/include/elf.h #define R_PPC_DIAB_SDA21_HA 182 /* like EMB_SDA21, adjusted high 16 */
R_PPC_DIAB_SDA21_HI macro      2062 /usr/include/elf.h #define R_PPC_DIAB_SDA21_HI 181 /* like EMB_SDA21, but high 16 bit */
R_PPC_DIAB_SDA21_LO macro      2061 /usr/include/elf.h #define R_PPC_DIAB_SDA21_LO 180 /* like EMB_SDA21, but lower 16 bit */
R_PPC_DTPMOD32   macro      2013 /usr/include/elf.h #define R_PPC_DTPMOD32 68 /* word32 (sym+add)@dtpmod */
R_PPC_DTPREL16   macro      2019 /usr/include/elf.h #define R_PPC_DTPREL16 74 /* half16* (sym+add)@dtprel */
R_PPC_DTPREL16_HA macro      2022 /usr/include/elf.h #define R_PPC_DTPREL16_HA 77 /* half16 (sym+add)@dtprel@ha */
R_PPC_DTPREL16_HI macro      2021 /usr/include/elf.h #define R_PPC_DTPREL16_HI 76 /* half16 (sym+add)@dtprel@h */
R_PPC_DTPREL16_LO macro      2020 /usr/include/elf.h #define R_PPC_DTPREL16_LO 75 /* half16 (sym+add)@dtprel@l */
R_PPC_DTPREL32   macro      2023 /usr/include/elf.h #define R_PPC_DTPREL32 78 /* word32 (sym+add)@dtprel */
R_PPC_EMB_BIT_FLD macro      2057 /usr/include/elf.h #define R_PPC_EMB_BIT_FLD 115
R_PPC_EMB_MRKREF macro      2052 /usr/include/elf.h #define R_PPC_EMB_MRKREF 110
R_PPC_EMB_NADDR16 macro      2044 /usr/include/elf.h #define R_PPC_EMB_NADDR16 102
R_PPC_EMB_NADDR16_HA macro      2047 /usr/include/elf.h #define R_PPC_EMB_NADDR16_HA 105
R_PPC_EMB_NADDR16_HI macro      2046 /usr/include/elf.h #define R_PPC_EMB_NADDR16_HI 104
R_PPC_EMB_NADDR16_LO macro      2045 /usr/include/elf.h #define R_PPC_EMB_NADDR16_LO 103
R_PPC_EMB_NADDR32 macro      2043 /usr/include/elf.h #define R_PPC_EMB_NADDR32 101
R_PPC_EMB_RELSDA macro      2058 /usr/include/elf.h #define R_PPC_EMB_RELSDA 116 /* 16 bit relative offset in SDA */
R_PPC_EMB_RELSEC16 macro      2053 /usr/include/elf.h #define R_PPC_EMB_RELSEC16 111
R_PPC_EMB_RELST_HA macro      2056 /usr/include/elf.h #define R_PPC_EMB_RELST_HA 114
R_PPC_EMB_RELST_HI macro      2055 /usr/include/elf.h #define R_PPC_EMB_RELST_HI 113
R_PPC_EMB_RELST_LO macro      2054 /usr/include/elf.h #define R_PPC_EMB_RELST_LO 112
R_PPC_EMB_SDA21  macro      2051 /usr/include/elf.h #define R_PPC_EMB_SDA21 109 /* 16 bit offset in SDA */
R_PPC_EMB_SDA2I16 macro      2049 /usr/include/elf.h #define R_PPC_EMB_SDA2I16 107
R_PPC_EMB_SDA2REL macro      2050 /usr/include/elf.h #define R_PPC_EMB_SDA2REL 108
R_PPC_EMB_SDAI16 macro      2048 /usr/include/elf.h #define R_PPC_EMB_SDAI16 106
R_PPC_GLOB_DAT   macro      1993 /usr/include/elf.h #define R_PPC_GLOB_DAT 20
R_PPC_GOT16      macro      1987 /usr/include/elf.h #define R_PPC_GOT16 14
R_PPC_GOT16_HA   macro      1990 /usr/include/elf.h #define R_PPC_GOT16_HA 17
R_PPC_GOT16_HI   macro      1989 /usr/include/elf.h #define R_PPC_GOT16_HI 16
R_PPC_GOT16_LO   macro      1988 /usr/include/elf.h #define R_PPC_GOT16_LO 15
R_PPC_GOT_DTPREL16 macro      2036 /usr/include/elf.h #define R_PPC_GOT_DTPREL16 91 /* half16* (sym+add)@got@dtprel */
R_PPC_GOT_DTPREL16_HA macro      2039 /usr/include/elf.h #define R_PPC_GOT_DTPREL16_HA 94 /* half16* (sym+add)@got@dtprel@ha */
R_PPC_GOT_DTPREL16_HI macro      2038 /usr/include/elf.h #define R_PPC_GOT_DTPREL16_HI 93 /* half16* (sym+add)@got@dtprel@h */
R_PPC_GOT_DTPREL16_LO macro      2037 /usr/include/elf.h #define R_PPC_GOT_DTPREL16_LO 92 /* half16* (sym+add)@got@dtprel@l */
R_PPC_GOT_TLSGD16 macro      2024 /usr/include/elf.h #define R_PPC_GOT_TLSGD16 79 /* half16* (sym+add)@got@tlsgd */
R_PPC_GOT_TLSGD16_HA macro      2027 /usr/include/elf.h #define R_PPC_GOT_TLSGD16_HA 82 /* half16 (sym+add)@got@tlsgd@ha */
R_PPC_GOT_TLSGD16_HI macro      2026 /usr/include/elf.h #define R_PPC_GOT_TLSGD16_HI 81 /* half16 (sym+add)@got@tlsgd@h */
R_PPC_GOT_TLSGD16_LO macro      2025 /usr/include/elf.h #define R_PPC_GOT_TLSGD16_LO 80 /* half16 (sym+add)@got@tlsgd@l */
R_PPC_GOT_TLSLD16 macro      2028 /usr/include/elf.h #define R_PPC_GOT_TLSLD16 83 /* half16* (sym+add)@got@tlsld */
R_PPC_GOT_TLSLD16_HA macro      2031 /usr/include/elf.h #define R_PPC_GOT_TLSLD16_HA 86 /* half16 (sym+add)@got@tlsld@ha */
R_PPC_GOT_TLSLD16_HI macro      2030 /usr/include/elf.h #define R_PPC_GOT_TLSLD16_HI 85 /* half16 (sym+add)@got@tlsld@h */
R_PPC_GOT_TLSLD16_LO macro      2029 /usr/include/elf.h #define R_PPC_GOT_TLSLD16_LO 84 /* half16 (sym+add)@got@tlsld@l */
R_PPC_GOT_TPREL16 macro      2032 /usr/include/elf.h #define R_PPC_GOT_TPREL16 87 /* half16* (sym+add)@got@tprel */
R_PPC_GOT_TPREL16_HA macro      2035 /usr/include/elf.h #define R_PPC_GOT_TPREL16_HA 90 /* half16 (sym+add)@got@tprel@ha */
R_PPC_GOT_TPREL16_HI macro      2034 /usr/include/elf.h #define R_PPC_GOT_TPREL16_HI 89 /* half16 (sym+add)@got@tprel@h */
R_PPC_GOT_TPREL16_LO macro      2033 /usr/include/elf.h #define R_PPC_GOT_TPREL16_LO 88 /* half16 (sym+add)@got@tprel@l */
R_PPC_IRELATIVE  macro      2069 /usr/include/elf.h #define R_PPC_IRELATIVE 248
R_PPC_JMP_SLOT   macro      1994 /usr/include/elf.h #define R_PPC_JMP_SLOT 21
R_PPC_LOCAL24PC  macro      1996 /usr/include/elf.h #define R_PPC_LOCAL24PC 23
R_PPC_NONE       macro      1973 /usr/include/elf.h #define R_PPC_NONE 0
R_PPC_PLT16_HA   macro      2004 /usr/include/elf.h #define R_PPC_PLT16_HA 31
R_PPC_PLT16_HI   macro      2003 /usr/include/elf.h #define R_PPC_PLT16_HI 30
R_PPC_PLT16_LO   macro      2002 /usr/include/elf.h #define R_PPC_PLT16_LO 29
R_PPC_PLT32      macro      2000 /usr/include/elf.h #define R_PPC_PLT32 27
R_PPC_PLTREL24   macro      1991 /usr/include/elf.h #define R_PPC_PLTREL24 18
R_PPC_PLTREL32   macro      2001 /usr/include/elf.h #define R_PPC_PLTREL32 28
R_PPC_REL14      macro      1984 /usr/include/elf.h #define R_PPC_REL14 11 /* PC relative 16 bit */
R_PPC_REL14_BRNTAKEN macro      1986 /usr/include/elf.h #define R_PPC_REL14_BRNTAKEN 13
R_PPC_REL14_BRTAKEN macro      1985 /usr/include/elf.h #define R_PPC_REL14_BRTAKEN 12
R_PPC_REL16      macro      2072 /usr/include/elf.h #define R_PPC_REL16 249 /* half16 (sym+add-.) */
R_PPC_REL16_HA   macro      2075 /usr/include/elf.h #define R_PPC_REL16_HA 252 /* half16 (sym+add-.)@ha */
R_PPC_REL16_HI   macro      2074 /usr/include/elf.h #define R_PPC_REL16_HI 251 /* half16 (sym+add-.)@h */
R_PPC_REL16_LO   macro      2073 /usr/include/elf.h #define R_PPC_REL16_LO 250 /* half16 (sym+add-.)@l */
R_PPC_REL24      macro      1983 /usr/include/elf.h #define R_PPC_REL24 10 /* PC relative 26 bit */
R_PPC_REL32      macro      1999 /usr/include/elf.h #define R_PPC_REL32 26
R_PPC_RELATIVE   macro      1995 /usr/include/elf.h #define R_PPC_RELATIVE 22
R_PPC_SDAREL16   macro      2005 /usr/include/elf.h #define R_PPC_SDAREL16 32
R_PPC_SECTOFF    macro      2006 /usr/include/elf.h #define R_PPC_SECTOFF 33
R_PPC_SECTOFF_HA macro      2009 /usr/include/elf.h #define R_PPC_SECTOFF_HA 36
R_PPC_SECTOFF_HI macro      2008 /usr/include/elf.h #define R_PPC_SECTOFF_HI 35
R_PPC_SECTOFF_LO macro      2007 /usr/include/elf.h #define R_PPC_SECTOFF_LO 34
R_PPC_TLS        macro      2012 /usr/include/elf.h #define R_PPC_TLS 67 /* none (sym+add)@tls */
R_PPC_TOC16      macro      2079 /usr/include/elf.h #define R_PPC_TOC16 255
R_PPC_TPREL16    macro      2014 /usr/include/elf.h #define R_PPC_TPREL16 69 /* half16* (sym+add)@tprel */
R_PPC_TPREL16_HA macro      2017 /usr/include/elf.h #define R_PPC_TPREL16_HA 72 /* half16 (sym+add)@tprel@ha */
R_PPC_TPREL16_HI macro      2016 /usr/include/elf.h #define R_PPC_TPREL16_HI 71 /* half16 (sym+add)@tprel@h */
R_PPC_TPREL16_LO macro      2015 /usr/include/elf.h #define R_PPC_TPREL16_LO 70 /* half16 (sym+add)@tprel@l */
R_PPC_TPREL32    macro      2018 /usr/include/elf.h #define R_PPC_TPREL32 73 /* word32 (sym+add)@tprel */
R_PPC_UADDR16    macro      1998 /usr/include/elf.h #define R_PPC_UADDR16 25
R_PPC_UADDR32    macro      1997 /usr/include/elf.h #define R_PPC_UADDR32 24
R_SH_ALIGN       macro      2750 /usr/include/elf.h #define R_SH_ALIGN 29
R_SH_CODE        macro      2751 /usr/include/elf.h #define R_SH_CODE 30
R_SH_COPY        macro      2767 /usr/include/elf.h #define R_SH_COPY 162
R_SH_COUNT       macro      2749 /usr/include/elf.h #define R_SH_COUNT 28
R_SH_DATA        macro      2752 /usr/include/elf.h #define R_SH_DATA 31
R_SH_DIR32       macro      2737 /usr/include/elf.h #define R_SH_DIR32 1
R_SH_DIR8BP      macro      2743 /usr/include/elf.h #define R_SH_DIR8BP 7
R_SH_DIR8L       macro      2745 /usr/include/elf.h #define R_SH_DIR8L 9
R_SH_DIR8W       macro      2744 /usr/include/elf.h #define R_SH_DIR8W 8
R_SH_DIR8WPL     macro      2741 /usr/include/elf.h #define R_SH_DIR8WPL 5
R_SH_DIR8WPN     macro      2739 /usr/include/elf.h #define R_SH_DIR8WPN 3
R_SH_DIR8WPZ     macro      2742 /usr/include/elf.h #define R_SH_DIR8WPZ 6
R_SH_GLOB_DAT    macro      2768 /usr/include/elf.h #define R_SH_GLOB_DAT 163
R_SH_GNU_VTENTRY macro      2756 /usr/include/elf.h #define R_SH_GNU_VTENTRY 35
R_SH_GNU_VTINHERIT macro      2755 /usr/include/elf.h #define R_SH_GNU_VTINHERIT 34
R_SH_GOT32       macro      2765 /usr/include/elf.h #define R_SH_GOT32 160
R_SH_GOTOFF      macro      2771 /usr/include/elf.h #define R_SH_GOTOFF 166
R_SH_GOTPC       macro      2772 /usr/include/elf.h #define R_SH_GOTPC 167
R_SH_IND12W      macro      2740 /usr/include/elf.h #define R_SH_IND12W 4
R_SH_JMP_SLOT    macro      2769 /usr/include/elf.h #define R_SH_JMP_SLOT 164
R_SH_LABEL       macro      2753 /usr/include/elf.h #define R_SH_LABEL 32
R_SH_NONE        macro      2736 /usr/include/elf.h #define R_SH_NONE 0
R_SH_NUM         macro      2774 /usr/include/elf.h #define R_SH_NUM 256
R_SH_PLT32       macro      2766 /usr/include/elf.h #define R_SH_PLT32 161
R_SH_REL32       macro      2738 /usr/include/elf.h #define R_SH_REL32 2
R_SH_RELATIVE    macro      2770 /usr/include/elf.h #define R_SH_RELATIVE 165
R_SH_SWITCH16    macro      2746 /usr/include/elf.h #define R_SH_SWITCH16 25
R_SH_SWITCH32    macro      2747 /usr/include/elf.h #define R_SH_SWITCH32 26
R_SH_SWITCH8     macro      2754 /usr/include/elf.h #define R_SH_SWITCH8 33
R_SH_TLS_DTPMOD32 macro      2762 /usr/include/elf.h #define R_SH_TLS_DTPMOD32 149
R_SH_TLS_DTPOFF32 macro      2763 /usr/include/elf.h #define R_SH_TLS_DTPOFF32 150
R_SH_TLS_GD_32   macro      2757 /usr/include/elf.h #define R_SH_TLS_GD_32 144
R_SH_TLS_IE_32   macro      2760 /usr/include/elf.h #define R_SH_TLS_IE_32 147
R_SH_TLS_LDO_32  macro      2759 /usr/include/elf.h #define R_SH_TLS_LDO_32 146
R_SH_TLS_LD_32   macro      2758 /usr/include/elf.h #define R_SH_TLS_LD_32 145
R_SH_TLS_LE_32   macro      2761 /usr/include/elf.h #define R_SH_TLS_LE_32 148
R_SH_TLS_TPOFF32 macro      2764 /usr/include/elf.h #define R_SH_TLS_TPOFF32 151
R_SH_USES        macro      2748 /usr/include/elf.h #define R_SH_USES 27
R_SPARC_10       macro      1244 /usr/include/elf.h #define R_SPARC_10 30 /* Direct 10 bit */
R_SPARC_11       macro      1245 /usr/include/elf.h #define R_SPARC_11 31 /* Direct 11 bit */
R_SPARC_13       macro      1222 /usr/include/elf.h #define R_SPARC_13 11 /* Direct 13 bit */
R_SPARC_16       macro      1213 /usr/include/elf.h #define R_SPARC_16 2 /* Direct 16 bit */
R_SPARC_22       macro      1221 /usr/include/elf.h #define R_SPARC_22 10 /* Direct 22 bit */
R_SPARC_32       macro      1214 /usr/include/elf.h #define R_SPARC_32 3 /* Direct 32 bit */
R_SPARC_5        macro      1258 /usr/include/elf.h #define R_SPARC_5 44 /* Direct 5 bit */
R_SPARC_6        macro      1259 /usr/include/elf.h #define R_SPARC_6 45 /* Direct 6 bit */
R_SPARC_64       macro      1246 /usr/include/elf.h #define R_SPARC_64 32 /* Direct 64 bit */
R_SPARC_7        macro      1257 /usr/include/elf.h #define R_SPARC_7 43 /* Direct 7 bit */
R_SPARC_8        macro      1212 /usr/include/elf.h #define R_SPARC_8 1 /* Direct 8 bit */
R_SPARC_COPY     macro      1230 /usr/include/elf.h #define R_SPARC_COPY 19 /* Copy symbol at runtime */
R_SPARC_DISP16   macro      1216 /usr/include/elf.h #define R_SPARC_DISP16 5 /* PC relative 16 bit */
R_SPARC_DISP32   macro      1217 /usr/include/elf.h #define R_SPARC_DISP32 6 /* PC relative 32 bit */
R_SPARC_DISP64   macro      1260 /usr/include/elf.h #define R_SPARC_DISP64 46 /* PC relative 64 bit */
R_SPARC_DISP8    macro      1215 /usr/include/elf.h #define R_SPARC_DISP8 4 /* PC relative 8 bit */
R_SPARC_GLOB_DAT macro      1231 /usr/include/elf.h #define R_SPARC_GLOB_DAT 20 /* Create GOT entry */
R_SPARC_GLOB_JMP macro      1256 /usr/include/elf.h #define R_SPARC_GLOB_JMP 42 /* was part of v9 ABI but was removed */
R_SPARC_GNU_VTENTRY macro      1306 /usr/include/elf.h #define R_SPARC_GNU_VTENTRY 251
R_SPARC_GNU_VTINHERIT macro      1305 /usr/include/elf.h #define R_SPARC_GNU_VTINHERIT 250
R_SPARC_GOT10    macro      1224 /usr/include/elf.h #define R_SPARC_GOT10 13 /* Truncated 10 bit GOT entry */
R_SPARC_GOT13    macro      1225 /usr/include/elf.h #define R_SPARC_GOT13 14 /* 13 bit GOT entry */
R_SPARC_GOT22    macro      1226 /usr/include/elf.h #define R_SPARC_GOT22 15 /* 22 bit GOT entry shifted */
R_SPARC_GOTDATA_HIX22 macro      1294 /usr/include/elf.h #define R_SPARC_GOTDATA_HIX22 80
R_SPARC_GOTDATA_LOX10 macro      1295 /usr/include/elf.h #define R_SPARC_GOTDATA_LOX10 81
R_SPARC_GOTDATA_OP macro      1298 /usr/include/elf.h #define R_SPARC_GOTDATA_OP 84
R_SPARC_GOTDATA_OP_HIX22 macro      1296 /usr/include/elf.h #define R_SPARC_GOTDATA_OP_HIX22 82
R_SPARC_GOTDATA_OP_LOX10 macro      1297 /usr/include/elf.h #define R_SPARC_GOTDATA_OP_LOX10 83
R_SPARC_H34      macro      1299 /usr/include/elf.h #define R_SPARC_H34 85
R_SPARC_H44      macro      1264 /usr/include/elf.h #define R_SPARC_H44 50 /* Direct high 12 of 44 bit */
R_SPARC_HH22     macro      1248 /usr/include/elf.h #define R_SPARC_HH22 34 /* Top 22 bits of direct 64 bit */
R_SPARC_HI22     macro      1220 /usr/include/elf.h #define R_SPARC_HI22 9 /* High 22 bit */
R_SPARC_HIPLT22  macro      1239 /usr/include/elf.h #define R_SPARC_HIPLT22 25 /* High 22 bit PLT entry */
R_SPARC_HIX22    macro      1262 /usr/include/elf.h #define R_SPARC_HIX22 48 /* High 22 bit complemented */
R_SPARC_HM10     macro      1249 /usr/include/elf.h #define R_SPARC_HM10 35 /* High middle 10 bits of ... */
R_SPARC_IRELATIVE macro      1304 /usr/include/elf.h #define R_SPARC_IRELATIVE 249
R_SPARC_JMP_IREL macro      1303 /usr/include/elf.h #define R_SPARC_JMP_IREL 248
R_SPARC_JMP_SLOT macro      1232 /usr/include/elf.h #define R_SPARC_JMP_SLOT 21 /* Create PLT entry */
R_SPARC_L44      macro      1266 /usr/include/elf.h #define R_SPARC_L44 52 /* Direct low 10 of 44 bit */
R_SPARC_LM22     macro      1250 /usr/include/elf.h #define R_SPARC_LM22 36 /* Low middle 22 bits of ... */
R_SPARC_LO10     macro      1223 /usr/include/elf.h #define R_SPARC_LO10 12 /* Truncated 10 bit */
R_SPARC_LOPLT10  macro      1240 /usr/include/elf.h #define R_SPARC_LOPLT10 26 /* Truncated 10 bit PLT entry */
R_SPARC_LOX10    macro      1263 /usr/include/elf.h #define R_SPARC_LOX10 49 /* Truncated 11 bit complemented */
R_SPARC_M44      macro      1265 /usr/include/elf.h #define R_SPARC_M44 51 /* Direct mid 22 of 44 bit */
R_SPARC_NONE     macro      1211 /usr/include/elf.h #define R_SPARC_NONE 0 /* No reloc */
R_SPARC_NUM      macro      1309 /usr/include/elf.h #define R_SPARC_NUM 253
R_SPARC_OLO10    macro      1247 /usr/include/elf.h #define R_SPARC_OLO10 33 /* 10bit with secondary 13bit addend */
R_SPARC_PC10     macro      1227 /usr/include/elf.h #define R_SPARC_PC10 16 /* PC relative 10 bit truncated */
R_SPARC_PC22     macro      1228 /usr/include/elf.h #define R_SPARC_PC22 17 /* PC relative 22 bit shifted */
R_SPARC_PCPLT10  macro      1243 /usr/include/elf.h #define R_SPARC_PCPLT10 29 /* PC rel trunc 10 bit PLT entry */
R_SPARC_PCPLT22  macro      1242 /usr/include/elf.h #define R_SPARC_PCPLT22 28 /* PC rel high 22 bit PLT entry */
R_SPARC_PCPLT32  macro      1241 /usr/include/elf.h #define R_SPARC_PCPLT32 27 /* PC rel 32 bit ref to PLT entry */
R_SPARC_PC_HH22  macro      1251 /usr/include/elf.h #define R_SPARC_PC_HH22 37 /* Top 22 bits of pc rel 64 bit */
R_SPARC_PC_HM10  macro      1252 /usr/include/elf.h #define R_SPARC_PC_HM10 38 /* High middle 10 bit of ... */
R_SPARC_PC_LM22  macro      1253 /usr/include/elf.h #define R_SPARC_PC_LM22 39 /* Low miggle 22 bits of ... */
R_SPARC_PLT32    macro      1238 /usr/include/elf.h #define R_SPARC_PLT32 24 /* Direct 32 bit ref to PLT entry */
R_SPARC_PLT64    macro      1261 /usr/include/elf.h #define R_SPARC_PLT64 47 /* Direct 64 bit ref to PLT entry */
R_SPARC_REGISTER macro      1267 /usr/include/elf.h #define R_SPARC_REGISTER 53 /* Global register usage */
R_SPARC_RELATIVE macro      1233 /usr/include/elf.h #define R_SPARC_RELATIVE 22 /* Adjust by program base */
R_SPARC_REV32    macro      1307 /usr/include/elf.h #define R_SPARC_REV32 252
R_SPARC_SIZE32   macro      1300 /usr/include/elf.h #define R_SPARC_SIZE32 86
R_SPARC_SIZE64   macro      1301 /usr/include/elf.h #define R_SPARC_SIZE64 87
R_SPARC_TLS_DTPMOD32 macro      1288 /usr/include/elf.h #define R_SPARC_TLS_DTPMOD32 74
R_SPARC_TLS_DTPMOD64 macro      1289 /usr/include/elf.h #define R_SPARC_TLS_DTPMOD64 75
R_SPARC_TLS_DTPOFF32 macro      1290 /usr/include/elf.h #define R_SPARC_TLS_DTPOFF32 76
R_SPARC_TLS_DTPOFF64 macro      1291 /usr/include/elf.h #define R_SPARC_TLS_DTPOFF64 77
R_SPARC_TLS_GD_ADD macro      1272 /usr/include/elf.h #define R_SPARC_TLS_GD_ADD 58
R_SPARC_TLS_GD_CALL macro      1273 /usr/include/elf.h #define R_SPARC_TLS_GD_CALL 59
R_SPARC_TLS_GD_HI22 macro      1270 /usr/include/elf.h #define R_SPARC_TLS_GD_HI22 56
R_SPARC_TLS_GD_LO10 macro      1271 /usr/include/elf.h #define R_SPARC_TLS_GD_LO10 57
R_SPARC_TLS_IE_ADD macro      1285 /usr/include/elf.h #define R_SPARC_TLS_IE_ADD 71
R_SPARC_TLS_IE_HI22 macro      1281 /usr/include/elf.h #define R_SPARC_TLS_IE_HI22 67
R_SPARC_TLS_IE_LD macro      1283 /usr/include/elf.h #define R_SPARC_TLS_IE_LD 69
R_SPARC_TLS_IE_LDX macro      1284 /usr/include/elf.h #define R_SPARC_TLS_IE_LDX 70
R_SPARC_TLS_IE_LO10 macro      1282 /usr/include/elf.h #define R_SPARC_TLS_IE_LO10 68
R_SPARC_TLS_LDM_ADD macro      1276 /usr/include/elf.h #define R_SPARC_TLS_LDM_ADD 62
R_SPARC_TLS_LDM_CALL macro      1277 /usr/include/elf.h #define R_SPARC_TLS_LDM_CALL 63
R_SPARC_TLS_LDM_HI22 macro      1274 /usr/include/elf.h #define R_SPARC_TLS_LDM_HI22 60
R_SPARC_TLS_LDM_LO10 macro      1275 /usr/include/elf.h #define R_SPARC_TLS_LDM_LO10 61
R_SPARC_TLS_LDO_ADD macro      1280 /usr/include/elf.h #define R_SPARC_TLS_LDO_ADD 66
R_SPARC_TLS_LDO_HIX22 macro      1278 /usr/include/elf.h #define R_SPARC_TLS_LDO_HIX22 64
R_SPARC_TLS_LDO_LOX10 macro      1279 /usr/include/elf.h #define R_SPARC_TLS_LDO_LOX10 65
R_SPARC_TLS_LE_HIX22 macro      1286 /usr/include/elf.h #define R_SPARC_TLS_LE_HIX22 72
R_SPARC_TLS_LE_LOX10 macro      1287 /usr/include/elf.h #define R_SPARC_TLS_LE_LOX10 73
R_SPARC_TLS_TPOFF32 macro      1292 /usr/include/elf.h #define R_SPARC_TLS_TPOFF32 78
R_SPARC_TLS_TPOFF64 macro      1293 /usr/include/elf.h #define R_SPARC_TLS_TPOFF64 79
R_SPARC_UA16     macro      1269 /usr/include/elf.h #define R_SPARC_UA16 55 /* Direct 16 bit unaligned */
R_SPARC_UA32     macro      1234 /usr/include/elf.h #define R_SPARC_UA32 23 /* Direct 32 bit unaligned */
R_SPARC_UA64     macro      1268 /usr/include/elf.h #define R_SPARC_UA64 54 /* Direct 64 bit unaligned */
R_SPARC_WDISP10  macro      1302 /usr/include/elf.h #define R_SPARC_WDISP10 88
R_SPARC_WDISP16  macro      1254 /usr/include/elf.h #define R_SPARC_WDISP16 40 /* PC relative 16 bit shifted */
R_SPARC_WDISP19  macro      1255 /usr/include/elf.h #define R_SPARC_WDISP19 41 /* PC relative 19 bit shifted */
R_SPARC_WDISP22  macro      1219 /usr/include/elf.h #define R_SPARC_WDISP22 8 /* PC relative 22 bit shifted */
R_SPARC_WDISP30  macro      1218 /usr/include/elf.h #define R_SPARC_WDISP30 7 /* PC relative 30 bit shifted */
R_SPARC_WPLT30   macro      1229 /usr/include/elf.h #define R_SPARC_WPLT30 18 /* 30 bit PC relative PLT address */
R_TILEGX_16      macro      3178 /usr/include/elf.h #define R_TILEGX_16 3 /* Direct 16 bit */
R_TILEGX_16_PCREL macro      3182 /usr/include/elf.h #define R_TILEGX_16_PCREL 7 /* PC relative 16 bit */
R_TILEGX_32      macro      3177 /usr/include/elf.h #define R_TILEGX_32 2 /* Direct 32 bit */
R_TILEGX_32_PCREL macro      3181 /usr/include/elf.h #define R_TILEGX_32_PCREL 6 /* PC relative 32 bit */
R_TILEGX_64      macro      3176 /usr/include/elf.h #define R_TILEGX_64 1 /* Direct 64 bit */
R_TILEGX_64_PCREL macro      3180 /usr/include/elf.h #define R_TILEGX_64_PCREL 5 /* PC relative 64 bit */
R_TILEGX_8       macro      3179 /usr/include/elf.h #define R_TILEGX_8 4 /* Direct 8 bit */
R_TILEGX_8_PCREL macro      3183 /usr/include/elf.h #define R_TILEGX_8_PCREL 8 /* PC relative 8 bit */
R_TILEGX_BROFF_X1 macro      3195 /usr/include/elf.h #define R_TILEGX_BROFF_X1 20 /* X1 pipe branch offset */
R_TILEGX_COPY    macro      3191 /usr/include/elf.h #define R_TILEGX_COPY 16 /* Copy relocation */
R_TILEGX_DEST_IMM8_X1 macro      3202 /usr/include/elf.h #define R_TILEGX_DEST_IMM8_X1 27 /* X1 pipe destination 8-bit */
R_TILEGX_GLOB_DAT macro      3192 /usr/include/elf.h #define R_TILEGX_GLOB_DAT 17 /* Create GOT entry */
R_TILEGX_GNU_VTENTRY macro      3297 /usr/include/elf.h #define R_TILEGX_GNU_VTENTRY 129 /* GNU C++ vtable member usage */
R_TILEGX_GNU_VTINHERIT macro      3296 /usr/include/elf.h #define R_TILEGX_GNU_VTINHERIT 128 /* GNU C++ vtable hierarchy */
R_TILEGX_HW0     macro      3184 /usr/include/elf.h #define R_TILEGX_HW0 9 /* hword 0 16-bit */
R_TILEGX_HW0_LAST macro      3188 /usr/include/elf.h #define R_TILEGX_HW0_LAST 13 /* last hword 0 16-bit */
R_TILEGX_HW1     macro      3185 /usr/include/elf.h #define R_TILEGX_HW1 10 /* hword 1 16-bit */
R_TILEGX_HW1_LAST macro      3189 /usr/include/elf.h #define R_TILEGX_HW1_LAST 14 /* last hword 1 16-bit */
R_TILEGX_HW2     macro      3186 /usr/include/elf.h #define R_TILEGX_HW2 11 /* hword 2 16-bit */
R_TILEGX_HW2_LAST macro      3190 /usr/include/elf.h #define R_TILEGX_HW2_LAST 15 /* last hword 2 16-bit */
R_TILEGX_HW3     macro      3187 /usr/include/elf.h #define R_TILEGX_HW3 12 /* hword 3 16-bit */
R_TILEGX_IMM16_X0_HW0 macro      3211 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0 36 /* X0 pipe hword 0 */
R_TILEGX_IMM16_X0_HW0_GOT macro      3239 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_GOT 64 /* X0 pipe hword 0 GOT offset */
R_TILEGX_IMM16_X0_HW0_LAST macro      3219 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_LAST 44 /* X0 pipe last hword 0 */
R_TILEGX_IMM16_X0_HW0_LAST_GOT macro      3247 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_LAST_GOT 72 /* X0 pipe last hword 0 GOT offset */
R_TILEGX_IMM16_X0_HW0_LAST_PCREL macro      3233 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_LAST_PCREL 58 /* X0 pipe PC-rel last hword 0 */
R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL macro      3268 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL 94 /* X0 pipe PC-rel PLT last hword 0 */
R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD macro      3261 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD 86 /* X0 pipe last hword 0 GD off */
R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE macro      3274 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE 100 /* X0 pipe last hword 0 IE off */
R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE macro      3257 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE 82 /* X0 pipe last hword 0 LE off */
R_TILEGX_IMM16_X0_HW0_PCREL macro      3225 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_PCREL 50 /* X0 pipe PC relative hword 0 */
R_TILEGX_IMM16_X0_HW0_PLT_PCREL macro      3241 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_PLT_PCREL 66 /* X0 pipe PC-rel PLT hword 0 */
R_TILEGX_IMM16_X0_HW0_TLS_GD macro      3253 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_TLS_GD 78 /* X0 pipe hword 0 TLS GD offset */
R_TILEGX_IMM16_X0_HW0_TLS_IE macro      3266 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_TLS_IE 92 /* X0 pipe hword 0 TLS IE offset */
R_TILEGX_IMM16_X0_HW0_TLS_LE macro      3255 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW0_TLS_LE 80 /* X0 pipe hword 0 TLS LE offset */
R_TILEGX_IMM16_X0_HW1 macro      3213 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW1 38 /* X0 pipe hword 1 */
R_TILEGX_IMM16_X0_HW1_LAST macro      3221 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW1_LAST 46 /* X0 pipe last hword 1 */
R_TILEGX_IMM16_X0_HW1_LAST_GOT macro      3249 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW1_LAST_GOT 74 /* X0 pipe last hword 1 GOT offset */
R_TILEGX_IMM16_X0_HW1_LAST_PCREL macro      3235 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW1_LAST_PCREL 60 /* X0 pipe PC-rel last hword 1 */
R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL macro      3270 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL 96 /* X0 pipe PC-rel PLT last hword 1 */
R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD macro      3263 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD 88 /* X0 pipe last hword 1 GD off */
R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE macro      3276 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE 102 /* X0 pipe last hword 1 IE off */
R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE macro      3259 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE 84 /* X0 pipe last hword 1 LE off */
R_TILEGX_IMM16_X0_HW1_PCREL macro      3227 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW1_PCREL 52 /* X0 pipe PC relative hword 1 */
R_TILEGX_IMM16_X0_HW1_PLT_PCREL macro      3243 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW1_PLT_PCREL 68 /* X0 pipe PC-rel PLT hword 1 */
R_TILEGX_IMM16_X0_HW2 macro      3215 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW2 40 /* X0 pipe hword 2 */
R_TILEGX_IMM16_X0_HW2_LAST macro      3223 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW2_LAST 48 /* X0 pipe last hword 2 */
R_TILEGX_IMM16_X0_HW2_LAST_PCREL macro      3237 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW2_LAST_PCREL 62 /* X0 pipe PC-rel last hword 2 */
R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL macro      3272 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL 98 /* X0 pipe PC-rel PLT last hword 2 */
R_TILEGX_IMM16_X0_HW2_PCREL macro      3229 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW2_PCREL 54 /* X0 pipe PC relative hword 2 */
R_TILEGX_IMM16_X0_HW2_PLT_PCREL macro      3245 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW2_PLT_PCREL 70 /* X0 pipe PC-rel PLT hword 2 */
R_TILEGX_IMM16_X0_HW3 macro      3217 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW3 42 /* X0 pipe hword 3 */
R_TILEGX_IMM16_X0_HW3_PCREL macro      3231 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW3_PCREL 56 /* X0 pipe PC relative hword 3 */
R_TILEGX_IMM16_X0_HW3_PLT_PCREL macro      3251 /usr/include/elf.h #define R_TILEGX_IMM16_X0_HW3_PLT_PCREL 76 /* X0 pipe PC-rel PLT hword 3 */
R_TILEGX_IMM16_X1_HW0 macro      3212 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0 37 /* X1 pipe hword 0 */
R_TILEGX_IMM16_X1_HW0_GOT macro      3240 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_GOT 65 /* X1 pipe hword 0 GOT offset */
R_TILEGX_IMM16_X1_HW0_LAST macro      3220 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_LAST 45 /* X1 pipe last hword 0 */
R_TILEGX_IMM16_X1_HW0_LAST_GOT macro      3248 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_LAST_GOT 73 /* X1 pipe last hword 0 GOT offset */
R_TILEGX_IMM16_X1_HW0_LAST_PCREL macro      3234 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_LAST_PCREL 59 /* X1 pipe PC-rel last hword 0 */
R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL macro      3269 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL 95 /* X1 pipe PC-rel PLT last hword 0 */
R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD macro      3262 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD 87 /* X1 pipe last hword 0 GD off */
R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE macro      3275 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE 101 /* X1 pipe last hword 0 IE off */
R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE macro      3258 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE 83 /* X1 pipe last hword 0 LE off */
R_TILEGX_IMM16_X1_HW0_PCREL macro      3226 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_PCREL 51 /* X1 pipe PC relative hword 0 */
R_TILEGX_IMM16_X1_HW0_PLT_PCREL macro      3242 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_PLT_PCREL 67 /* X1 pipe PC-rel PLT hword 0 */
R_TILEGX_IMM16_X1_HW0_TLS_GD macro      3254 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_TLS_GD 79 /* X1 pipe hword 0 TLS GD offset */
R_TILEGX_IMM16_X1_HW0_TLS_IE macro      3267 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_TLS_IE 93 /* X1 pipe hword 0 TLS IE offset */
R_TILEGX_IMM16_X1_HW0_TLS_LE macro      3256 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW0_TLS_LE 81 /* X1 pipe hword 0 TLS LE offset */
R_TILEGX_IMM16_X1_HW1 macro      3214 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW1 39 /* X1 pipe hword 1 */
R_TILEGX_IMM16_X1_HW1_LAST macro      3222 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW1_LAST 47 /* X1 pipe last hword 1 */
R_TILEGX_IMM16_X1_HW1_LAST_GOT macro      3250 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW1_LAST_GOT 75 /* X1 pipe last hword 1 GOT offset */
R_TILEGX_IMM16_X1_HW1_LAST_PCREL macro      3236 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW1_LAST_PCREL 61 /* X1 pipe PC-rel last hword 1 */
R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL macro      3271 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL 97 /* X1 pipe PC-rel PLT last hword 1 */
R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD macro      3264 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD 89 /* X1 pipe last hword 1 GD off */
R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE macro      3277 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE 103 /* X1 pipe last hword 1 IE off */
R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE macro      3260 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE 85 /* X1 pipe last hword 1 LE off */
R_TILEGX_IMM16_X1_HW1_PCREL macro      3228 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW1_PCREL 53 /* X1 pipe PC relative hword 1 */
R_TILEGX_IMM16_X1_HW1_PLT_PCREL macro      3244 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW1_PLT_PCREL 69 /* X1 pipe PC-rel PLT hword 1 */
R_TILEGX_IMM16_X1_HW2 macro      3216 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW2 41 /* X1 pipe hword 2 */
R_TILEGX_IMM16_X1_HW2_LAST macro      3224 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW2_LAST 49 /* X1 pipe last hword 2 */
R_TILEGX_IMM16_X1_HW2_LAST_PCREL macro      3238 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW2_LAST_PCREL 63 /* X1 pipe PC-rel last hword 2 */
R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL macro      3273 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL 99 /* X1 pipe PC-rel PLT last hword 2 */
R_TILEGX_IMM16_X1_HW2_PCREL macro      3230 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW2_PCREL 55 /* X1 pipe PC relative hword 2 */
R_TILEGX_IMM16_X1_HW2_PLT_PCREL macro      3246 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW2_PLT_PCREL 71 /* X1 pipe PC-rel PLT hword 2 */
R_TILEGX_IMM16_X1_HW3 macro      3218 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW3 43 /* X1 pipe hword 3 */
R_TILEGX_IMM16_X1_HW3_PCREL macro      3232 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW3_PCREL 57 /* X1 pipe PC relative hword 3 */
R_TILEGX_IMM16_X1_HW3_PLT_PCREL macro      3252 /usr/include/elf.h #define R_TILEGX_IMM16_X1_HW3_PLT_PCREL 77 /* X1 pipe PC-rel PLT hword 3 */
R_TILEGX_IMM8_X0 macro      3198 /usr/include/elf.h #define R_TILEGX_IMM8_X0 23 /* X0 pipe 8-bit */
R_TILEGX_IMM8_X0_TLS_ADD macro      3291 /usr/include/elf.h #define R_TILEGX_IMM8_X0_TLS_ADD 118 /* X0 pipe "addi" for TLS GD/IE */
R_TILEGX_IMM8_X0_TLS_GD_ADD macro      3286 /usr/include/elf.h #define R_TILEGX_IMM8_X0_TLS_GD_ADD 113 /* X0 pipe "addi" for TLS GD */
R_TILEGX_IMM8_X1 macro      3200 /usr/include/elf.h #define R_TILEGX_IMM8_X1 25 /* X1 pipe 8-bit */
R_TILEGX_IMM8_X1_TLS_ADD macro      3292 /usr/include/elf.h #define R_TILEGX_IMM8_X1_TLS_ADD 119 /* X1 pipe "addi" for TLS GD/IE */
R_TILEGX_IMM8_X1_TLS_GD_ADD macro      3287 /usr/include/elf.h #define R_TILEGX_IMM8_X1_TLS_GD_ADD 114 /* X1 pipe "addi" for TLS GD */
R_TILEGX_IMM8_Y0 macro      3199 /usr/include/elf.h #define R_TILEGX_IMM8_Y0 24 /* Y0 pipe 8-bit */
R_TILEGX_IMM8_Y0_TLS_ADD macro      3293 /usr/include/elf.h #define R_TILEGX_IMM8_Y0_TLS_ADD 120 /* Y0 pipe "addi" for TLS GD/IE */
R_TILEGX_IMM8_Y0_TLS_GD_ADD macro      3288 /usr/include/elf.h #define R_TILEGX_IMM8_Y0_TLS_GD_ADD 115 /* Y0 pipe "addi" for TLS GD */
R_TILEGX_IMM8_Y1 macro      3201 /usr/include/elf.h #define R_TILEGX_IMM8_Y1 26 /* Y1 pipe 8-bit */
R_TILEGX_IMM8_Y1_TLS_ADD macro      3294 /usr/include/elf.h #define R_TILEGX_IMM8_Y1_TLS_ADD 121 /* Y1 pipe "addi" for TLS GD/IE */
R_TILEGX_IMM8_Y1_TLS_GD_ADD macro      3289 /usr/include/elf.h #define R_TILEGX_IMM8_Y1_TLS_GD_ADD 116 /* Y1 pipe "addi" for TLS GD */
R_TILEGX_JMP_SLOT macro      3193 /usr/include/elf.h #define R_TILEGX_JMP_SLOT 18 /* Create PLT entry */
R_TILEGX_JUMPOFF_X1 macro      3196 /usr/include/elf.h #define R_TILEGX_JUMPOFF_X1 21 /* X1 pipe jump offset */
R_TILEGX_JUMPOFF_X1_PLT macro      3197 /usr/include/elf.h #define R_TILEGX_JUMPOFF_X1_PLT 22 /* X1 pipe jump offset to PLT */
R_TILEGX_MF_IMM14_X1 macro      3204 /usr/include/elf.h #define R_TILEGX_MF_IMM14_X1 29 /* X1 pipe mfspr */
R_TILEGX_MMEND_X0 macro      3206 /usr/include/elf.h #define R_TILEGX_MMEND_X0 31 /* X0 pipe mm "end" */
R_TILEGX_MMSTART_X0 macro      3205 /usr/include/elf.h #define R_TILEGX_MMSTART_X0 30 /* X0 pipe mm "start" */
R_TILEGX_MT_IMM14_X1 macro      3203 /usr/include/elf.h #define R_TILEGX_MT_IMM14_X1 28 /* X1 pipe mtspr */
R_TILEGX_NONE    macro      3175 /usr/include/elf.h #define R_TILEGX_NONE 0 /* No reloc */
R_TILEGX_NUM     macro      3299 /usr/include/elf.h #define R_TILEGX_NUM 130
R_TILEGX_RELATIVE macro      3194 /usr/include/elf.h #define R_TILEGX_RELATIVE 19 /* Adjust by program base */
R_TILEGX_SHAMT_X0 macro      3207 /usr/include/elf.h #define R_TILEGX_SHAMT_X0 32 /* X0 pipe shift amount */
R_TILEGX_SHAMT_X1 macro      3208 /usr/include/elf.h #define R_TILEGX_SHAMT_X1 33 /* X1 pipe shift amount */
R_TILEGX_SHAMT_Y0 macro      3209 /usr/include/elf.h #define R_TILEGX_SHAMT_Y0 34 /* Y0 pipe shift amount */
R_TILEGX_SHAMT_Y1 macro      3210 /usr/include/elf.h #define R_TILEGX_SHAMT_Y1 35 /* Y1 pipe shift amount */
R_TILEGX_TLS_DTPMOD32 macro      3282 /usr/include/elf.h #define R_TILEGX_TLS_DTPMOD32 109 /* 32-bit ID of symbol's module */
R_TILEGX_TLS_DTPMOD64 macro      3279 /usr/include/elf.h #define R_TILEGX_TLS_DTPMOD64 106 /* 64-bit ID of symbol's module */
R_TILEGX_TLS_DTPOFF32 macro      3283 /usr/include/elf.h #define R_TILEGX_TLS_DTPOFF32 110 /* 32-bit offset in TLS block */
R_TILEGX_TLS_DTPOFF64 macro      3280 /usr/include/elf.h #define R_TILEGX_TLS_DTPOFF64 107 /* 64-bit offset in TLS block */
R_TILEGX_TLS_GD_CALL macro      3285 /usr/include/elf.h #define R_TILEGX_TLS_GD_CALL 112 /* "jal" for TLS GD */
R_TILEGX_TLS_IE_LOAD macro      3290 /usr/include/elf.h #define R_TILEGX_TLS_IE_LOAD 117 /* "ld_tls" for TLS IE */
R_TILEGX_TLS_TPOFF32 macro      3284 /usr/include/elf.h #define R_TILEGX_TLS_TPOFF32 111 /* 32-bit offset in static TLS block */
R_TILEGX_TLS_TPOFF64 macro      3281 /usr/include/elf.h #define R_TILEGX_TLS_TPOFF64 108 /* 64-bit offset in static TLS block */
R_TILEPRO_16     macro      3079 /usr/include/elf.h #define R_TILEPRO_16 2 /* Direct 16 bit */
R_TILEPRO_16_PCREL macro      3082 /usr/include/elf.h #define R_TILEPRO_16_PCREL 5 /* PC relative 16 bit */
R_TILEPRO_32     macro      3078 /usr/include/elf.h #define R_TILEPRO_32 1 /* Direct 32 bit */
R_TILEPRO_32_PCREL macro      3081 /usr/include/elf.h #define R_TILEPRO_32_PCREL 4 /* PC relative 32 bit */
R_TILEPRO_8      macro      3080 /usr/include/elf.h #define R_TILEPRO_8 3 /* Direct 8 bit */
R_TILEPRO_8_PCREL macro      3083 /usr/include/elf.h #define R_TILEPRO_8_PCREL 6 /* PC relative 8 bit */
R_TILEPRO_BROFF_X1 macro      3091 /usr/include/elf.h #define R_TILEPRO_BROFF_X1 14 /* X1 pipe branch offset */
R_TILEPRO_COPY   macro      3087 /usr/include/elf.h #define R_TILEPRO_COPY 10 /* Copy relocation */
R_TILEPRO_DEST_IMM8_X1 macro      3132 /usr/include/elf.h #define R_TILEPRO_DEST_IMM8_X1 55 /* X1 pipe destination 8-bit */
R_TILEPRO_GLOB_DAT macro      3088 /usr/include/elf.h #define R_TILEPRO_GLOB_DAT 11 /* Create GOT entry */
R_TILEPRO_GNU_VTENTRY macro      3169 /usr/include/elf.h #define R_TILEPRO_GNU_VTENTRY 129 /* GNU C++ vtable member usage */
R_TILEPRO_GNU_VTINHERIT macro      3168 /usr/include/elf.h #define R_TILEPRO_GNU_VTINHERIT 128 /* GNU C++ vtable hierarchy */
R_TILEPRO_HA16   macro      3086 /usr/include/elf.h #define R_TILEPRO_HA16 9 /* High 16 bit, adjusted */
R_TILEPRO_HI16   macro      3085 /usr/include/elf.h #define R_TILEPRO_HI16 8 /* High 16 bit */
R_TILEPRO_IMM16_X0 macro      3100 /usr/include/elf.h #define R_TILEPRO_IMM16_X0 23 /* X0 pipe 16-bit */
R_TILEPRO_IMM16_X0_GOT macro      3116 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_GOT 39 /* X0 pipe 16-bit GOT offset */
R_TILEPRO_IMM16_X0_GOT_HA macro      3122 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_GOT_HA 45 /* X0 pipe ha() 16-bit GOT offset */
R_TILEPRO_IMM16_X0_GOT_HI macro      3120 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_GOT_HI 43 /* X0 pipe high 16-bit GOT offset */
R_TILEPRO_IMM16_X0_GOT_LO macro      3118 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_GOT_LO 41 /* X0 pipe low 16-bit GOT offset */
R_TILEPRO_IMM16_X0_HA macro      3106 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_HA 29 /* X0 pipe high 16-bit, adjusted */
R_TILEPRO_IMM16_X0_HA_PCREL macro      3114 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_HA_PCREL 37 /* X0 pipe PC relative ha() 16 bit */
R_TILEPRO_IMM16_X0_HI macro      3104 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_HI 27 /* X0 pipe high 16-bit */
R_TILEPRO_IMM16_X0_HI_PCREL macro      3112 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_HI_PCREL 35 /* X0 pipe PC relative high 16 bit */
R_TILEPRO_IMM16_X0_LO macro      3102 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_LO 25 /* X0 pipe low 16-bit */
R_TILEPRO_IMM16_X0_LO_PCREL macro      3110 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_LO_PCREL 33 /* X0 pipe PC relative low 16 bit */
R_TILEPRO_IMM16_X0_PCREL macro      3108 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_PCREL 31 /* X0 pipe PC relative 16 bit */
R_TILEPRO_IMM16_X0_TLS_GD macro      3140 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_GD 66 /* X0 pipe 16-bit TLS GD offset */
R_TILEPRO_IMM16_X0_TLS_GD_HA macro      3146 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_GD_HA 72 /* X0 pipe ha() 16-bit TLS GD offset */
R_TILEPRO_IMM16_X0_TLS_GD_HI macro      3144 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_GD_HI 70 /* X0 pipe high 16-bit TLS GD offset */
R_TILEPRO_IMM16_X0_TLS_GD_LO macro      3142 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_GD_LO 68 /* X0 pipe low 16-bit TLS GD offset */
R_TILEPRO_IMM16_X0_TLS_IE macro      3148 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_IE 74 /* X0 pipe 16-bit TLS IE offset */
R_TILEPRO_IMM16_X0_TLS_IE_HA macro      3154 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_IE_HA 80 /* X0 pipe ha() 16-bit TLS IE offset */
R_TILEPRO_IMM16_X0_TLS_IE_HI macro      3152 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_IE_HI 78 /* X0 pipe high 16-bit TLS IE offset */
R_TILEPRO_IMM16_X0_TLS_IE_LO macro      3150 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_IE_LO 76 /* X0 pipe low 16-bit TLS IE offset */
R_TILEPRO_IMM16_X0_TLS_LE macro      3159 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_LE 85 /* X0 pipe 16-bit TLS LE offset */
R_TILEPRO_IMM16_X0_TLS_LE_HA macro      3165 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_LE_HA 91 /* X0 pipe ha() 16-bit TLS LE offset */
R_TILEPRO_IMM16_X0_TLS_LE_HI macro      3163 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_LE_HI 89 /* X0 pipe high 16-bit TLS LE offset */
R_TILEPRO_IMM16_X0_TLS_LE_LO macro      3161 /usr/include/elf.h #define R_TILEPRO_IMM16_X0_TLS_LE_LO 87 /* X0 pipe low 16-bit TLS LE offset */
R_TILEPRO_IMM16_X1 macro      3101 /usr/include/elf.h #define R_TILEPRO_IMM16_X1 24 /* X1 pipe 16-bit */
R_TILEPRO_IMM16_X1_GOT macro      3117 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_GOT 40 /* X1 pipe 16-bit GOT offset */
R_TILEPRO_IMM16_X1_GOT_HA macro      3123 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_GOT_HA 46 /* X1 pipe ha() 16-bit GOT offset */
R_TILEPRO_IMM16_X1_GOT_HI macro      3121 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_GOT_HI 44 /* X1 pipe high 16-bit GOT offset */
R_TILEPRO_IMM16_X1_GOT_LO macro      3119 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_GOT_LO 42 /* X1 pipe low 16-bit GOT offset */
R_TILEPRO_IMM16_X1_HA macro      3107 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_HA 30 /* X1 pipe high 16-bit, adjusted */
R_TILEPRO_IMM16_X1_HA_PCREL macro      3115 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_HA_PCREL 38 /* X1 pipe PC relative ha() 16 bit */
R_TILEPRO_IMM16_X1_HI macro      3105 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_HI 28 /* X1 pipe high 16-bit */
R_TILEPRO_IMM16_X1_HI_PCREL macro      3113 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_HI_PCREL 36 /* X1 pipe PC relative high 16 bit */
R_TILEPRO_IMM16_X1_LO macro      3103 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_LO 26 /* X1 pipe low 16-bit */
R_TILEPRO_IMM16_X1_LO_PCREL macro      3111 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_LO_PCREL 34 /* X1 pipe PC relative low 16 bit */
R_TILEPRO_IMM16_X1_PCREL macro      3109 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_PCREL 32 /* X1 pipe PC relative 16 bit */
R_TILEPRO_IMM16_X1_TLS_GD macro      3141 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_GD 67 /* X1 pipe 16-bit TLS GD offset */
R_TILEPRO_IMM16_X1_TLS_GD_HA macro      3147 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_GD_HA 73 /* X1 pipe ha() 16-bit TLS GD offset */
R_TILEPRO_IMM16_X1_TLS_GD_HI macro      3145 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_GD_HI 71 /* X1 pipe high 16-bit TLS GD offset */
R_TILEPRO_IMM16_X1_TLS_GD_LO macro      3143 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_GD_LO 69 /* X1 pipe low 16-bit TLS GD offset */
R_TILEPRO_IMM16_X1_TLS_IE macro      3149 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_IE 75 /* X1 pipe 16-bit TLS IE offset */
R_TILEPRO_IMM16_X1_TLS_IE_HA macro      3155 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_IE_HA 81 /* X1 pipe ha() 16-bit TLS IE offset */
R_TILEPRO_IMM16_X1_TLS_IE_HI macro      3153 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_IE_HI 79 /* X1 pipe high 16-bit TLS IE offset */
R_TILEPRO_IMM16_X1_TLS_IE_LO macro      3151 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_IE_LO 77 /* X1 pipe low 16-bit TLS IE offset */
R_TILEPRO_IMM16_X1_TLS_LE macro      3160 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_LE 86 /* X1 pipe 16-bit TLS LE offset */
R_TILEPRO_IMM16_X1_TLS_LE_HA macro      3166 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_LE_HA 92 /* X1 pipe ha() 16-bit TLS LE offset */
R_TILEPRO_IMM16_X1_TLS_LE_HI macro      3164 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_LE_HI 90 /* X1 pipe high 16-bit TLS LE offset */
R_TILEPRO_IMM16_X1_TLS_LE_LO macro      3162 /usr/include/elf.h #define R_TILEPRO_IMM16_X1_TLS_LE_LO 88 /* X1 pipe low 16-bit TLS LE offset */
R_TILEPRO_IMM8_X0 macro      3094 /usr/include/elf.h #define R_TILEPRO_IMM8_X0 17 /* X0 pipe 8-bit */
R_TILEPRO_IMM8_X0_TLS_GD_ADD macro      3135 /usr/include/elf.h #define R_TILEPRO_IMM8_X0_TLS_GD_ADD 61 /* X0 pipe "addi" for TLS GD */
R_TILEPRO_IMM8_X1 macro      3096 /usr/include/elf.h #define R_TILEPRO_IMM8_X1 19 /* X1 pipe 8-bit */
R_TILEPRO_IMM8_X1_TLS_GD_ADD macro      3136 /usr/include/elf.h #define R_TILEPRO_IMM8_X1_TLS_GD_ADD 62 /* X1 pipe "addi" for TLS GD */
R_TILEPRO_IMM8_Y0 macro      3095 /usr/include/elf.h #define R_TILEPRO_IMM8_Y0 18 /* Y0 pipe 8-bit */
R_TILEPRO_IMM8_Y0_TLS_GD_ADD macro      3137 /usr/include/elf.h #define R_TILEPRO_IMM8_Y0_TLS_GD_ADD 63 /* Y0 pipe "addi" for TLS GD */
R_TILEPRO_IMM8_Y1 macro      3097 /usr/include/elf.h #define R_TILEPRO_IMM8_Y1 20 /* Y1 pipe 8-bit */
R_TILEPRO_IMM8_Y1_TLS_GD_ADD macro      3138 /usr/include/elf.h #define R_TILEPRO_IMM8_Y1_TLS_GD_ADD 64 /* Y1 pipe "addi" for TLS GD */
R_TILEPRO_JMP_SLOT macro      3089 /usr/include/elf.h #define R_TILEPRO_JMP_SLOT 12 /* Create PLT entry */
R_TILEPRO_JOFFLONG_X1 macro      3092 /usr/include/elf.h #define R_TILEPRO_JOFFLONG_X1 15 /* X1 pipe jump offset */
R_TILEPRO_JOFFLONG_X1_PLT macro      3093 /usr/include/elf.h #define R_TILEPRO_JOFFLONG_X1_PLT 16 /* X1 pipe jump offset to PLT */
R_TILEPRO_LO16   macro      3084 /usr/include/elf.h #define R_TILEPRO_LO16 7 /* Low 16 bit */
R_TILEPRO_MF_IMM15_X1 macro      3099 /usr/include/elf.h #define R_TILEPRO_MF_IMM15_X1 22 /* X1 pipe mfspr */
R_TILEPRO_MMEND_X0 macro      3125 /usr/include/elf.h #define R_TILEPRO_MMEND_X0 48 /* X0 pipe mm "end" */
R_TILEPRO_MMEND_X1 macro      3127 /usr/include/elf.h #define R_TILEPRO_MMEND_X1 50 /* X1 pipe mm "end" */
R_TILEPRO_MMSTART_X0 macro      3124 /usr/include/elf.h #define R_TILEPRO_MMSTART_X0 47 /* X0 pipe mm "start" */
R_TILEPRO_MMSTART_X1 macro      3126 /usr/include/elf.h #define R_TILEPRO_MMSTART_X1 49 /* X1 pipe mm "start" */
R_TILEPRO_MT_IMM15_X1 macro      3098 /usr/include/elf.h #define R_TILEPRO_MT_IMM15_X1 21 /* X1 pipe mtspr */
R_TILEPRO_NONE   macro      3077 /usr/include/elf.h #define R_TILEPRO_NONE 0 /* No reloc */
R_TILEPRO_NUM    macro      3171 /usr/include/elf.h #define R_TILEPRO_NUM 130
R_TILEPRO_RELATIVE macro      3090 /usr/include/elf.h #define R_TILEPRO_RELATIVE 13 /* Adjust by program base */
R_TILEPRO_SHAMT_X0 macro      3128 /usr/include/elf.h #define R_TILEPRO_SHAMT_X0 51 /* X0 pipe shift amount */
R_TILEPRO_SHAMT_X1 macro      3129 /usr/include/elf.h #define R_TILEPRO_SHAMT_X1 52 /* X1 pipe shift amount */
R_TILEPRO_SHAMT_Y0 macro      3130 /usr/include/elf.h #define R_TILEPRO_SHAMT_Y0 53 /* Y0 pipe shift amount */
R_TILEPRO_SHAMT_Y1 macro      3131 /usr/include/elf.h #define R_TILEPRO_SHAMT_Y1 54 /* Y1 pipe shift amount */
R_TILEPRO_TLS_DTPMOD32 macro      3156 /usr/include/elf.h #define R_TILEPRO_TLS_DTPMOD32 82 /* ID of module containing symbol */
R_TILEPRO_TLS_DTPOFF32 macro      3157 /usr/include/elf.h #define R_TILEPRO_TLS_DTPOFF32 83 /* Offset in TLS block */
R_TILEPRO_TLS_GD_CALL macro      3134 /usr/include/elf.h #define R_TILEPRO_TLS_GD_CALL 60 /* "jal" for TLS GD */
R_TILEPRO_TLS_IE_LOAD macro      3139 /usr/include/elf.h #define R_TILEPRO_TLS_IE_LOAD 65 /* "lw_tls" for TLS IE */
R_TILEPRO_TLS_TPOFF32 macro      3158 /usr/include/elf.h #define R_TILEPRO_TLS_TPOFF32 84 /* Offset in static TLS block */
R_X86_64_16      macro      2907 /usr/include/elf.h #define R_X86_64_16 12 /* Direct 16 bit zero extended */
R_X86_64_32      macro      2905 /usr/include/elf.h #define R_X86_64_32 10 /* Direct 32 bit zero extended */
R_X86_64_32S     macro      2906 /usr/include/elf.h #define R_X86_64_32S 11 /* Direct 32 bit sign extended */
R_X86_64_64      macro      2895 /usr/include/elf.h #define R_X86_64_64 1 /* Direct 64 bit */
R_X86_64_8       macro      2909 /usr/include/elf.h #define R_X86_64_8 14 /* Direct 8 bit sign extended */
R_X86_64_COPY    macro      2899 /usr/include/elf.h #define R_X86_64_COPY 5 /* Copy symbol at runtime */
R_X86_64_DTPMOD64 macro      2911 /usr/include/elf.h #define R_X86_64_DTPMOD64 16 /* ID of module containing symbol */
R_X86_64_DTPOFF32 macro      2918 /usr/include/elf.h #define R_X86_64_DTPOFF32 21 /* Offset in TLS block */
R_X86_64_DTPOFF64 macro      2912 /usr/include/elf.h #define R_X86_64_DTPOFF64 17 /* Offset in module's TLS block */
R_X86_64_GLOB_DAT macro      2900 /usr/include/elf.h #define R_X86_64_GLOB_DAT 6 /* Create GOT entry */
R_X86_64_GOT32   macro      2897 /usr/include/elf.h #define R_X86_64_GOT32 3 /* 32 bit GOT entry */
R_X86_64_GOT64   macro      2926 /usr/include/elf.h #define R_X86_64_GOT64 27 /* 64-bit GOT entry offset */
R_X86_64_GOTOFF64 macro      2923 /usr/include/elf.h #define R_X86_64_GOTOFF64 25 /* 64 bit offset to GOT */
R_X86_64_GOTPC32 macro      2924 /usr/include/elf.h #define R_X86_64_GOTPC32 26 /* 32 bit signed pc relative
R_X86_64_GOTPC32_TLSDESC macro      2935 /usr/include/elf.h #define R_X86_64_GOTPC32_TLSDESC 34 /* GOT offset for TLS descriptor. */
R_X86_64_GOTPC64 macro      2929 /usr/include/elf.h #define R_X86_64_GOTPC64 29 /* 64-bit PC relative offset to GOT */
R_X86_64_GOTPCREL macro      2903 /usr/include/elf.h #define R_X86_64_GOTPCREL 9 /* 32 bit signed PC relative
R_X86_64_GOTPCREL64 macro      2927 /usr/include/elf.h #define R_X86_64_GOTPCREL64 28 /* 64-bit PC relative offset
R_X86_64_GOTPLT64 macro      2930 /usr/include/elf.h #define R_X86_64_GOTPLT64 30 /* like GOT64, says PLT entry needed */
R_X86_64_GOTTPOFF macro      2919 /usr/include/elf.h #define R_X86_64_GOTTPOFF 22 /* 32 bit signed PC relative offset
R_X86_64_IRELATIVE macro      2939 /usr/include/elf.h #define R_X86_64_IRELATIVE 37 /* Adjust indirectly by program base */
R_X86_64_JUMP_SLOT macro      2901 /usr/include/elf.h #define R_X86_64_JUMP_SLOT 7 /* Create PLT entry */
R_X86_64_NONE    macro      2894 /usr/include/elf.h #define R_X86_64_NONE 0 /* No reloc */
R_X86_64_NUM     macro      2942 /usr/include/elf.h #define R_X86_64_NUM 39
R_X86_64_PC16    macro      2908 /usr/include/elf.h #define R_X86_64_PC16 13 /* 16 bit sign extended pc relative */
R_X86_64_PC32    macro      2896 /usr/include/elf.h #define R_X86_64_PC32 2 /* PC relative 32 bit signed */
R_X86_64_PC64    macro      2922 /usr/include/elf.h #define R_X86_64_PC64 24 /* PC relative 64 bit */
R_X86_64_PC8     macro      2910 /usr/include/elf.h #define R_X86_64_PC8 15 /* 8 bit sign extended pc relative */
R_X86_64_PLT32   macro      2898 /usr/include/elf.h #define R_X86_64_PLT32 4 /* 32 bit PLT address */
R_X86_64_PLTOFF64 macro      2931 /usr/include/elf.h #define R_X86_64_PLTOFF64 31 /* 64-bit GOT relative offset
R_X86_64_RELATIVE macro      2902 /usr/include/elf.h #define R_X86_64_RELATIVE 8 /* Adjust by program base */
R_X86_64_RELATIVE64 macro      2940 /usr/include/elf.h #define R_X86_64_RELATIVE64 38 /* 64-bit adjust by program base */
R_X86_64_SIZE32  macro      2933 /usr/include/elf.h #define R_X86_64_SIZE32 32 /* Size of symbol plus 32-bit addend */
R_X86_64_SIZE64  macro      2934 /usr/include/elf.h #define R_X86_64_SIZE64 33 /* Size of symbol plus 64-bit addend */
R_X86_64_TLSDESC macro      2938 /usr/include/elf.h #define R_X86_64_TLSDESC 36 /* TLS descriptor. */
R_X86_64_TLSDESC_CALL macro      2936 /usr/include/elf.h #define R_X86_64_TLSDESC_CALL 35 /* Marker for call through TLS
R_X86_64_TLSGD   macro      2914 /usr/include/elf.h #define R_X86_64_TLSGD 19 /* 32 bit signed PC relative offset
R_X86_64_TLSLD   macro      2916 /usr/include/elf.h #define R_X86_64_TLSLD 20 /* 32 bit signed PC relative offset
R_X86_64_TPOFF32 macro      2921 /usr/include/elf.h #define R_X86_64_TPOFF32 23 /* Offset in initial TLS block */
R_X86_64_TPOFF64 macro      2913 /usr/include/elf.h #define R_X86_64_TPOFF64 18 /* Offset in initial TLS block */
SELFMAG          macro       121 /usr/include/elf.h #define SELFMAG 4
SHF_ALLOC        macro       359 /usr/include/elf.h #define SHF_ALLOC (1 << 1) /* Occupies memory during execution */
SHF_ALPHA_GPREL  macro      1906 /usr/include/elf.h #define SHF_ALPHA_GPREL 0x10000000
SHF_ARM_COMDEF   macro      2285 /usr/include/elf.h #define SHF_ARM_COMDEF 0x80000000 /* Section may be multiply defined
SHF_ARM_ENTRYSECT macro      2284 /usr/include/elf.h #define SHF_ARM_ENTRYSECT 0x10000000 /* Section contains an entry point */
SHF_EXCLUDE      macro       373 /usr/include/elf.h #define SHF_EXCLUDE (1 << 31) /* Section is excluded unless
SHF_EXECINSTR    macro       360 /usr/include/elf.h #define SHF_EXECINSTR (1 << 2) /* Executable */
SHF_GROUP        macro       367 /usr/include/elf.h #define SHF_GROUP (1 << 9) /* Section is member of a group. */
SHF_IA_64_NORECOV macro      2620 /usr/include/elf.h #define SHF_IA_64_NORECOV 0x20000000 /* spec insns w/o recovery */
SHF_IA_64_SHORT  macro      2619 /usr/include/elf.h #define SHF_IA_64_SHORT 0x10000000 /* section near gp */
SHF_INFO_LINK    macro       363 /usr/include/elf.h #define SHF_INFO_LINK (1 << 6) /* `sh_info' contains SHT index */
SHF_LINK_ORDER   macro       364 /usr/include/elf.h #define SHF_LINK_ORDER (1 << 7) /* Preserve order after combining */
SHF_MASKOS       macro       369 /usr/include/elf.h #define SHF_MASKOS 0x0ff00000 /* OS-specific. */
SHF_MASKPROC     macro       370 /usr/include/elf.h #define SHF_MASKPROC 0xf0000000 /* Processor-specific */
SHF_MERGE        macro       361 /usr/include/elf.h #define SHF_MERGE (1 << 4) /* Might be merged */
SHF_MIPS_ADDR    macro      1406 /usr/include/elf.h #define SHF_MIPS_ADDR 0x40000000
SHF_MIPS_GPREL   macro      1404 /usr/include/elf.h #define SHF_MIPS_GPREL 0x10000000 /* Must be in global data area. */
SHF_MIPS_LOCAL   macro      1409 /usr/include/elf.h #define SHF_MIPS_LOCAL 0x04000000
SHF_MIPS_MERGE   macro      1405 /usr/include/elf.h #define SHF_MIPS_MERGE 0x20000000
SHF_MIPS_NAMES   macro      1410 /usr/include/elf.h #define SHF_MIPS_NAMES 0x02000000
SHF_MIPS_NODUPE  macro      1411 /usr/include/elf.h #define SHF_MIPS_NODUPE 0x01000000
SHF_MIPS_NOSTRIP macro      1408 /usr/include/elf.h #define SHF_MIPS_NOSTRIP 0x08000000
SHF_MIPS_STRINGS macro      1407 /usr/include/elf.h #define SHF_MIPS_STRINGS 0x80000000
SHF_ORDERED      macro       371 /usr/include/elf.h #define SHF_ORDERED (1 << 30) /* Special ordering requirement
SHF_OS_NONCONFORMING macro       365 /usr/include/elf.h #define SHF_OS_NONCONFORMING (1 << 8) /* Non-standard OS specific handling
SHF_PARISC_HUGE  macro      1734 /usr/include/elf.h #define SHF_PARISC_HUGE 0x40000000 /* Section far from gp. */
SHF_PARISC_SBP   macro      1735 /usr/include/elf.h #define SHF_PARISC_SBP 0x80000000 /* Static branch prediction code. */
SHF_PARISC_SHORT macro      1733 /usr/include/elf.h #define SHF_PARISC_SHORT 0x20000000 /* Section with short addressing. */
SHF_STRINGS      macro       362 /usr/include/elf.h #define SHF_STRINGS (1 << 5) /* Contains nul-terminated strings */
SHF_TLS          macro       368 /usr/include/elf.h #define SHF_TLS (1 << 10) /* Section hold thread-local data. */
SHF_WRITE        macro       358 /usr/include/elf.h #define SHF_WRITE (1 << 0) /* Writable */
SHN_ABS          macro       312 /usr/include/elf.h #define SHN_ABS 0xfff1 /* Associated symbol is absolute */
SHN_AFTER        macro       307 /usr/include/elf.h #define SHN_AFTER 0xff01 /* Order section after all others
SHN_BEFORE       macro       305 /usr/include/elf.h #define SHN_BEFORE 0xff00 /* Order section before all others
SHN_COMMON       macro       313 /usr/include/elf.h #define SHN_COMMON 0xfff2 /* Associated symbol is common */
SHN_HIOS         macro       311 /usr/include/elf.h #define SHN_HIOS 0xff3f /* End of OS-specific */
SHN_HIPROC       macro       309 /usr/include/elf.h #define SHN_HIPROC 0xff1f /* End of processor-specific */
SHN_HIRESERVE    macro       315 /usr/include/elf.h #define SHN_HIRESERVE 0xffff /* End of reserved indices */
SHN_LOOS         macro       310 /usr/include/elf.h #define SHN_LOOS 0xff20 /* Start of OS-specific */
SHN_LOPROC       macro       304 /usr/include/elf.h #define SHN_LOPROC 0xff00 /* Start of processor-specific */
SHN_LORESERVE    macro       303 /usr/include/elf.h #define SHN_LORESERVE 0xff00 /* Start of reserved indices */
SHN_MIPS_ACOMMON macro      1354 /usr/include/elf.h #define SHN_MIPS_ACOMMON 0xff00 /* Allocated common symbols. */
SHN_MIPS_DATA    macro      1356 /usr/include/elf.h #define SHN_MIPS_DATA 0xff02 /* Allocated data symbols. */
SHN_MIPS_SCOMMON macro      1357 /usr/include/elf.h #define SHN_MIPS_SCOMMON 0xff03 /* Small common symbols. */
SHN_MIPS_SUNDEFINED macro      1358 /usr/include/elf.h #define SHN_MIPS_SUNDEFINED 0xff04 /* Small undefined symbols. */
SHN_MIPS_TEXT    macro      1355 /usr/include/elf.h #define SHN_MIPS_TEXT 0xff01 /* Allocated test symbols. */
SHN_PARISC_ANSI_COMMON macro      1721 /usr/include/elf.h #define SHN_PARISC_ANSI_COMMON 0xff00 /* Section for tenatively declared
SHN_PARISC_HUGE_COMMON macro      1723 /usr/include/elf.h #define SHN_PARISC_HUGE_COMMON 0xff01 /* Common blocks in huge model. */
SHN_UNDEF        macro       302 /usr/include/elf.h #define SHN_UNDEF 0 /* Undefined section */
SHN_XINDEX       macro       314 /usr/include/elf.h #define SHN_XINDEX 0xffff /* Index is in extra table. */
SHT_ALPHA_DEBUG  macro      1901 /usr/include/elf.h #define SHT_ALPHA_DEBUG 0x70000001
SHT_ALPHA_REGINFO macro      1902 /usr/include/elf.h #define SHT_ALPHA_REGINFO 0x70000002
SHT_ARM_ATTRIBUTES macro      2300 /usr/include/elf.h #define SHT_ARM_ATTRIBUTES (SHT_LOPROC + 3) /* ARM attributes section. */
SHT_ARM_EXIDX    macro      2298 /usr/include/elf.h #define SHT_ARM_EXIDX (SHT_LOPROC + 1) /* ARM unwind section. */
SHT_ARM_PREEMPTMAP macro      2299 /usr/include/elf.h #define SHT_ARM_PREEMPTMAP (SHT_LOPROC + 2) /* Preemption details. */
SHT_CHECKSUM     macro       341 /usr/include/elf.h #define SHT_CHECKSUM 0x6ffffff8 /* Checksum for DSO content. */
SHT_DYNAMIC      macro       325 /usr/include/elf.h #define SHT_DYNAMIC 6 /* Dynamic linking information */
SHT_DYNSYM       macro       330 /usr/include/elf.h #define SHT_DYNSYM 11 /* Dynamic linker symbol table */
SHT_FINI_ARRAY   macro       332 /usr/include/elf.h #define SHT_FINI_ARRAY 15 /* Array of destructors */
SHT_GNU_ATTRIBUTES macro       338 /usr/include/elf.h #define SHT_GNU_ATTRIBUTES 0x6ffffff5 /* Object attributes. */
SHT_GNU_HASH     macro       339 /usr/include/elf.h #define SHT_GNU_HASH 0x6ffffff6 /* GNU-style hash table. */
SHT_GNU_LIBLIST  macro       340 /usr/include/elf.h #define SHT_GNU_LIBLIST 0x6ffffff7 /* Prelink library list */
SHT_GNU_verdef   macro       346 /usr/include/elf.h #define SHT_GNU_verdef 0x6ffffffd /* Version definition section. */
SHT_GNU_verneed  macro       347 /usr/include/elf.h #define SHT_GNU_verneed 0x6ffffffe /* Version needs section. */
SHT_GNU_versym   macro       348 /usr/include/elf.h #define SHT_GNU_versym 0x6fffffff /* Version symbol table. */
SHT_GROUP        macro       334 /usr/include/elf.h #define SHT_GROUP 17 /* Section group */
SHT_HASH         macro       324 /usr/include/elf.h #define SHT_HASH 5 /* Symbol hash table */
SHT_HIOS         macro       350 /usr/include/elf.h #define SHT_HIOS 0x6fffffff /* End OS-specific type */
SHT_HIPROC       macro       352 /usr/include/elf.h #define SHT_HIPROC 0x7fffffff /* End of processor-specific */
SHT_HISUNW       macro       349 /usr/include/elf.h #define SHT_HISUNW 0x6fffffff /* Sun-specific high bound. */
SHT_HIUSER       macro       354 /usr/include/elf.h #define SHT_HIUSER 0x8fffffff /* End of application-specific */
SHT_IA_64_EXT    macro      2615 /usr/include/elf.h #define SHT_IA_64_EXT (SHT_LOPROC + 0) /* extension bits */
SHT_IA_64_UNWIND macro      2616 /usr/include/elf.h #define SHT_IA_64_UNWIND (SHT_LOPROC + 1) /* unwind bits */
SHT_INIT_ARRAY   macro       331 /usr/include/elf.h #define SHT_INIT_ARRAY 14 /* Array of constructors */
SHT_LOOS         macro       337 /usr/include/elf.h #define SHT_LOOS 0x60000000 /* Start OS-specific. */
SHT_LOPROC       macro       351 /usr/include/elf.h #define SHT_LOPROC 0x70000000 /* Start of processor-specific */
SHT_LOSUNW       macro       342 /usr/include/elf.h #define SHT_LOSUNW 0x6ffffffa /* Sun-specific low bound. */
SHT_LOUSER       macro       353 /usr/include/elf.h #define SHT_LOUSER 0x80000000 /* Start of application-specific */
SHT_MIPS_AUXSYM  macro      1381 /usr/include/elf.h #define SHT_MIPS_AUXSYM 0x70000016
SHT_MIPS_CONFLICT macro      1364 /usr/include/elf.h #define SHT_MIPS_CONFLICT 0x70000002 /* Conflicting symbols. */
SHT_MIPS_CONTENT macro      1373 /usr/include/elf.h #define SHT_MIPS_CONTENT 0x7000000c
SHT_MIPS_DEBUG   macro      1367 /usr/include/elf.h #define SHT_MIPS_DEBUG 0x70000005 /* MIPS ECOFF debugging info. */
SHT_MIPS_DELTACLASS macro      1388 /usr/include/elf.h #define SHT_MIPS_DELTACLASS 0x7000001d
SHT_MIPS_DELTADECL macro      1390 /usr/include/elf.h #define SHT_MIPS_DELTADECL 0x7000001f
SHT_MIPS_DELTAINST macro      1387 /usr/include/elf.h #define SHT_MIPS_DELTAINST 0x7000001c
SHT_MIPS_DELTASYM macro      1386 /usr/include/elf.h #define SHT_MIPS_DELTASYM 0x7000001b
SHT_MIPS_DENSE   macro      1378 /usr/include/elf.h #define SHT_MIPS_DENSE 0x70000013
SHT_MIPS_DWARF   macro      1389 /usr/include/elf.h #define SHT_MIPS_DWARF 0x7000001e /* DWARF debugging information. */
SHT_MIPS_EH_REGION macro      1398 /usr/include/elf.h #define SHT_MIPS_EH_REGION 0x70000027
SHT_MIPS_EVENTS  macro      1392 /usr/include/elf.h #define SHT_MIPS_EVENTS 0x70000021 /* Event section. */
SHT_MIPS_EXTSYM  macro      1377 /usr/include/elf.h #define SHT_MIPS_EXTSYM 0x70000012
SHT_MIPS_FDESC   macro      1376 /usr/include/elf.h #define SHT_MIPS_FDESC 0x70000011
SHT_MIPS_GPTAB   macro      1365 /usr/include/elf.h #define SHT_MIPS_GPTAB 0x70000003 /* Global data area sizes. */
SHT_MIPS_IFACE   macro      1372 /usr/include/elf.h #define SHT_MIPS_IFACE 0x7000000b
SHT_MIPS_LIBLIST macro      1362 /usr/include/elf.h #define SHT_MIPS_LIBLIST 0x70000000 /* Shared objects used in link. */
SHT_MIPS_LINE    macro      1384 /usr/include/elf.h #define SHT_MIPS_LINE 0x70000019
SHT_MIPS_LOCSTR  macro      1383 /usr/include/elf.h #define SHT_MIPS_LOCSTR 0x70000018
SHT_MIPS_LOCSYM  macro      1380 /usr/include/elf.h #define SHT_MIPS_LOCSYM 0x70000015
SHT_MIPS_MSYM    macro      1363 /usr/include/elf.h #define SHT_MIPS_MSYM 0x70000001
SHT_MIPS_OPTIONS macro      1374 /usr/include/elf.h #define SHT_MIPS_OPTIONS 0x7000000d /* Miscellaneous options. */
SHT_MIPS_OPTSYM  macro      1382 /usr/include/elf.h #define SHT_MIPS_OPTSYM 0x70000017
SHT_MIPS_PACKAGE macro      1369 /usr/include/elf.h #define SHT_MIPS_PACKAGE 0x70000007
SHT_MIPS_PACKSYM macro      1370 /usr/include/elf.h #define SHT_MIPS_PACKSYM 0x70000008
SHT_MIPS_PDESC   macro      1379 /usr/include/elf.h #define SHT_MIPS_PDESC 0x70000014
SHT_MIPS_PDR_EXCEPTION macro      1400 /usr/include/elf.h #define SHT_MIPS_PDR_EXCEPTION 0x70000029
SHT_MIPS_PIXIE   macro      1394 /usr/include/elf.h #define SHT_MIPS_PIXIE 0x70000023
SHT_MIPS_REGINFO macro      1368 /usr/include/elf.h #define SHT_MIPS_REGINFO 0x70000006 /* Register usage information. */
SHT_MIPS_RELD    macro      1371 /usr/include/elf.h #define SHT_MIPS_RELD 0x70000009
SHT_MIPS_RFDESC  macro      1385 /usr/include/elf.h #define SHT_MIPS_RFDESC 0x7000001a
SHT_MIPS_SHDR    macro      1375 /usr/include/elf.h #define SHT_MIPS_SHDR 0x70000010
SHT_MIPS_SYMBOL_LIB macro      1391 /usr/include/elf.h #define SHT_MIPS_SYMBOL_LIB 0x70000020
SHT_MIPS_TRANSLATE macro      1393 /usr/include/elf.h #define SHT_MIPS_TRANSLATE 0x70000022
SHT_MIPS_UCODE   macro      1366 /usr/include/elf.h #define SHT_MIPS_UCODE 0x70000004 /* Reserved for SGI/MIPS compilers */
SHT_MIPS_WHIRL   macro      1397 /usr/include/elf.h #define SHT_MIPS_WHIRL 0x70000026
SHT_MIPS_XLATE   macro      1395 /usr/include/elf.h #define SHT_MIPS_XLATE 0x70000024
SHT_MIPS_XLATE_DEBUG macro      1396 /usr/include/elf.h #define SHT_MIPS_XLATE_DEBUG 0x70000025
SHT_MIPS_XLATE_OLD macro      1399 /usr/include/elf.h #define SHT_MIPS_XLATE_OLD 0x70000028
SHT_NOBITS       macro       327 /usr/include/elf.h #define SHT_NOBITS 8 /* Program space with no data (bss) */
SHT_NOTE         macro       326 /usr/include/elf.h #define SHT_NOTE 7 /* Notes */
SHT_NULL         macro       319 /usr/include/elf.h #define SHT_NULL 0 /* Section header table entry unused */
SHT_NUM          macro       336 /usr/include/elf.h #define SHT_NUM 19 /* Number of defined types. */
SHT_PARISC_DOC   macro      1729 /usr/include/elf.h #define SHT_PARISC_DOC 0x70000002 /* Debug info for optimized code. */
SHT_PARISC_EXT   macro      1727 /usr/include/elf.h #define SHT_PARISC_EXT 0x70000000 /* Contains product specific ext. */
SHT_PARISC_UNWIND macro      1728 /usr/include/elf.h #define SHT_PARISC_UNWIND 0x70000001 /* Unwind information. */
SHT_PREINIT_ARRAY macro       333 /usr/include/elf.h #define SHT_PREINIT_ARRAY 16 /* Array of pre-constructors */
SHT_PROGBITS     macro       320 /usr/include/elf.h #define SHT_PROGBITS 1 /* Program data */
SHT_REL          macro       328 /usr/include/elf.h #define SHT_REL 9 /* Relocation entries, no addends */
SHT_RELA         macro       323 /usr/include/elf.h #define SHT_RELA 4 /* Relocation entries with addends */
SHT_SHLIB        macro       329 /usr/include/elf.h #define SHT_SHLIB 10 /* Reserved */
SHT_STRTAB       macro       322 /usr/include/elf.h #define SHT_STRTAB 3 /* String table */
SHT_SUNW_COMDAT  macro       344 /usr/include/elf.h #define SHT_SUNW_COMDAT 0x6ffffffb
SHT_SUNW_move    macro       343 /usr/include/elf.h #define SHT_SUNW_move 0x6ffffffa
SHT_SUNW_syminfo macro       345 /usr/include/elf.h #define SHT_SUNW_syminfo 0x6ffffffc
SHT_SYMTAB       macro       321 /usr/include/elf.h #define SHT_SYMTAB 2 /* Symbol table */
SHT_SYMTAB_SHNDX macro       335 /usr/include/elf.h #define SHT_SYMTAB_SHNDX 18 /* Extended section indeces */
STB_GLOBAL       macro       447 /usr/include/elf.h #define STB_GLOBAL 1 /* Global symbol */
STB_GNU_UNIQUE   macro       451 /usr/include/elf.h #define STB_GNU_UNIQUE 10 /* Unique symbol. */
STB_HIOS         macro       452 /usr/include/elf.h #define STB_HIOS 12 /* End of OS-specific */
STB_HIPROC       macro       454 /usr/include/elf.h #define STB_HIPROC 15 /* End of processor-specific */
STB_LOCAL        macro       446 /usr/include/elf.h #define STB_LOCAL 0 /* Local symbol */
STB_LOOS         macro       450 /usr/include/elf.h #define STB_LOOS 10 /* Start of OS-specific */
STB_LOPROC       macro       453 /usr/include/elf.h #define STB_LOPROC 13 /* Start of processor-specific */
STB_MIPS_SPLIT_COMMON macro      1425 /usr/include/elf.h #define STB_MIPS_SPLIT_COMMON 13
STB_NUM          macro       449 /usr/include/elf.h #define STB_NUM 3 /* Number of defined types. */
STB_WEAK         macro       448 /usr/include/elf.h #define STB_WEAK 2 /* Weak symbol */
STN_UNDEF        macro       477 /usr/include/elf.h #define STN_UNDEF 0 /* End of a chain. */
STO_ALPHA_NOPV   macro      1909 /usr/include/elf.h #define STO_ALPHA_NOPV 0x80 /* No PV required. */
STO_ALPHA_STD_GPLOAD macro      1910 /usr/include/elf.h #define STO_ALPHA_STD_GPLOAD 0x88 /* PV only used for initial ldgp. */
STO_MIPS_DEFAULT macro      1417 /usr/include/elf.h #define STO_MIPS_DEFAULT 0x0
STO_MIPS_HIDDEN  macro      1419 /usr/include/elf.h #define STO_MIPS_HIDDEN 0x2
STO_MIPS_INTERNAL macro      1418 /usr/include/elf.h #define STO_MIPS_INTERNAL 0x1
STO_MIPS_PLT     macro      1421 /usr/include/elf.h #define STO_MIPS_PLT 0x8
STO_MIPS_PROTECTED macro      1420 /usr/include/elf.h #define STO_MIPS_PROTECTED 0x3
STO_MIPS_SC_ALIGN_UNUSED macro      1422 /usr/include/elf.h #define STO_MIPS_SC_ALIGN_UNUSED 0xff
STO_PPC64_LOCAL_BIT macro      2234 /usr/include/elf.h #define STO_PPC64_LOCAL_BIT 5
STO_PPC64_LOCAL_MASK macro      2235 /usr/include/elf.h #define STO_PPC64_LOCAL_MASK (7 << STO_PPC64_LOCAL_BIT)
STT_ARM_16BIT    macro      2281 /usr/include/elf.h #define STT_ARM_16BIT STT_HIPROC /* A Thumb label. */
STT_ARM_TFUNC    macro      2280 /usr/include/elf.h #define STT_ARM_TFUNC STT_LOPROC /* A Thumb function. */
STT_COMMON       macro       463 /usr/include/elf.h #define STT_COMMON 5 /* Symbol is a common data object */
STT_FILE         macro       462 /usr/include/elf.h #define STT_FILE 4 /* Symbol's name is file name */
STT_FUNC         macro       460 /usr/include/elf.h #define STT_FUNC 2 /* Symbol is a code object */
STT_GNU_IFUNC    macro       467 /usr/include/elf.h #define STT_GNU_IFUNC 10 /* Symbol is indirect code object */
STT_HIOS         macro       468 /usr/include/elf.h #define STT_HIOS 12 /* End of OS-specific */
STT_HIPROC       macro       470 /usr/include/elf.h #define STT_HIPROC 15 /* End of processor-specific */
STT_HP_OPAQUE    macro      1741 /usr/include/elf.h #define STT_HP_OPAQUE (STT_LOOS + 0x1)
STT_HP_STUB      macro      1742 /usr/include/elf.h #define STT_HP_STUB (STT_LOOS + 0x2)
STT_LOOS         macro       466 /usr/include/elf.h #define STT_LOOS 10 /* Start of OS-specific */
STT_LOPROC       macro       469 /usr/include/elf.h #define STT_LOPROC 13 /* Start of processor-specific */
STT_NOTYPE       macro       458 /usr/include/elf.h #define STT_NOTYPE 0 /* Symbol type is unspecified */
STT_NUM          macro       465 /usr/include/elf.h #define STT_NUM 7 /* Number of defined types. */
STT_OBJECT       macro       459 /usr/include/elf.h #define STT_OBJECT 1 /* Symbol is a data object */
STT_PARISC_MILLICODE macro      1739 /usr/include/elf.h #define STT_PARISC_MILLICODE 13 /* Millicode function entry point. */
STT_SECTION      macro       461 /usr/include/elf.h #define STT_SECTION 3 /* Symbol associated with a section */
STT_SPARC_REGISTER macro      1194 /usr/include/elf.h #define STT_SPARC_REGISTER 13 /* Global register reserved to app. */
STT_TLS          macro       464 /usr/include/elf.h #define STT_TLS 6 /* Symbol is thread-local data object*/
STV_DEFAULT      macro       488 /usr/include/elf.h #define STV_DEFAULT 0 /* Default symbol visibility rules */
STV_HIDDEN       macro       490 /usr/include/elf.h #define STV_HIDDEN 2 /* Sym unavailable in other modules */
STV_INTERNAL     macro       489 /usr/include/elf.h #define STV_INTERNAL 1 /* Processor specific hidden class */
STV_PROTECTED    macro       491 /usr/include/elf.h #define STV_PROTECTED 3 /* Not preemptible, not exported */
SYMINFO_BT_LOWRESERVE macro       419 /usr/include/elf.h #define SYMINFO_BT_LOWRESERVE 0xff00 /* Beginning of reserved entries */
SYMINFO_BT_PARENT macro       418 /usr/include/elf.h #define SYMINFO_BT_PARENT 0xfffe /* Symbol bound to parent */
SYMINFO_BT_SELF  macro       417 /usr/include/elf.h #define SYMINFO_BT_SELF 0xffff /* Symbol bound to self */
SYMINFO_CURRENT  macro       429 /usr/include/elf.h #define SYMINFO_CURRENT 1
SYMINFO_FLG_COPY macro       424 /usr/include/elf.h #define SYMINFO_FLG_COPY 0x0004 /* Symbol is a copy-reloc */
SYMINFO_FLG_DIRECT macro       422 /usr/include/elf.h #define SYMINFO_FLG_DIRECT 0x0001 /* Direct bound symbol */
SYMINFO_FLG_LAZYLOAD macro       425 /usr/include/elf.h #define SYMINFO_FLG_LAZYLOAD 0x0008 /* Symbol bound to object to be lazy
SYMINFO_FLG_PASSTHRU macro       423 /usr/include/elf.h #define SYMINFO_FLG_PASSTHRU 0x0002 /* Pass-thru symbol for translator */
SYMINFO_NONE     macro       428 /usr/include/elf.h #define SYMINFO_NONE 0
SYMINFO_NUM      macro       430 /usr/include/elf.h #define SYMINFO_NUM 2
VER_DEF_CURRENT  macro       855 /usr/include/elf.h #define VER_DEF_CURRENT 1 /* Current version */
VER_DEF_NONE     macro       854 /usr/include/elf.h #define VER_DEF_NONE 0 /* No version */
VER_DEF_NUM      macro       856 /usr/include/elf.h #define VER_DEF_NUM 2 /* Given version number */
VER_FLG_BASE     macro       859 /usr/include/elf.h #define VER_FLG_BASE 0x1 /* Version definition of file itself */
VER_FLG_WEAK     macro       860 /usr/include/elf.h #define VER_FLG_WEAK 0x2 /* Weak version identifier */
VER_FLG_WEAK     macro       939 /usr/include/elf.h #define VER_FLG_WEAK 0x2 /* Weak version identifier */
VER_NDX_ELIMINATE macro       866 /usr/include/elf.h #define VER_NDX_ELIMINATE 0xff01 /* Symbol is to be eliminated. */
VER_NDX_GLOBAL   macro       864 /usr/include/elf.h #define VER_NDX_GLOBAL 1 /* Symbol is global. */
VER_NDX_LOCAL    macro       863 /usr/include/elf.h #define VER_NDX_LOCAL 0 /* Symbol is local. */
VER_NDX_LORESERVE macro       865 /usr/include/elf.h #define VER_NDX_LORESERVE 0xff00 /* Beginning of reserved entries. */
VER_NEED_CURRENT macro       912 /usr/include/elf.h #define VER_NEED_CURRENT 1 /* Current version */
VER_NEED_NONE    macro       911 /usr/include/elf.h #define VER_NEED_NONE 0 /* No version */
VER_NEED_NUM     macro       913 /usr/include/elf.h #define VER_NEED_NUM 2 /* Given version number */
_ELF_H           macro        20 /usr/include/elf.h #define _ELF_H 1
__anon10::r_info member      510 /usr/include/elf.h Elf64_Xword r_info; /* Relocation type and symbol index */
__anon10::r_offset member      509 /usr/include/elf.h Elf64_Addr r_offset; /* Address */
__anon11::r_addend member      519 /usr/include/elf.h Elf32_Sword r_addend; /* Addend */
__anon11::r_info member      518 /usr/include/elf.h Elf32_Word r_info; /* Relocation type and symbol index */
__anon11::r_offset member      517 /usr/include/elf.h Elf32_Addr r_offset; /* Address */
__anon12::r_addend member      526 /usr/include/elf.h Elf64_Sxword r_addend; /* Addend */
__anon12::r_info member      525 /usr/include/elf.h Elf64_Xword r_info; /* Relocation type and symbol index */
__anon12::r_offset member      524 /usr/include/elf.h Elf64_Addr r_offset; /* Address */
__anon13::p_align member      550 /usr/include/elf.h Elf32_Word p_align; /* Segment alignment */
__anon13::p_filesz member      547 /usr/include/elf.h Elf32_Word p_filesz; /* Segment size in file */
__anon13::p_flags member      549 /usr/include/elf.h Elf32_Word p_flags; /* Segment flags */
__anon13::p_memsz member      548 /usr/include/elf.h Elf32_Word p_memsz; /* Segment size in memory */
__anon13::p_offset member      544 /usr/include/elf.h Elf32_Off p_offset; /* Segment file offset */
__anon13::p_paddr member      546 /usr/include/elf.h Elf32_Addr p_paddr; /* Segment physical address */
__anon13::p_type member      543 /usr/include/elf.h Elf32_Word p_type; /* Segment type */
__anon13::p_vaddr member      545 /usr/include/elf.h Elf32_Addr p_vaddr; /* Segment virtual address */
__anon14::p_align member      562 /usr/include/elf.h Elf64_Xword p_align; /* Segment alignment */
__anon14::p_filesz member      560 /usr/include/elf.h Elf64_Xword p_filesz; /* Segment size in file */
__anon14::p_flags member      556 /usr/include/elf.h Elf64_Word p_flags; /* Segment flags */
__anon14::p_memsz member      561 /usr/include/elf.h Elf64_Xword p_memsz; /* Segment size in memory */
__anon14::p_offset member      557 /usr/include/elf.h Elf64_Off p_offset; /* Segment file offset */
__anon14::p_paddr member      559 /usr/include/elf.h Elf64_Addr p_paddr; /* Segment physical address */
__anon14::p_type member      555 /usr/include/elf.h Elf64_Word p_type; /* Segment type */
__anon14::p_vaddr member      558 /usr/include/elf.h Elf64_Addr p_vaddr; /* Segment virtual address */
__anon15::__anon16::d_ptr member      658 /usr/include/elf.h Elf32_Addr d_ptr; /* Address value */
__anon15::__anon16::d_val member      657 /usr/include/elf.h Elf32_Word d_val; /* Integer value */
__anon15::d_tag  member      654 /usr/include/elf.h Elf32_Sword d_tag; /* Dynamic entry type */
__anon15::d_un   member      659 /usr/include/elf.h } d_un;
__anon17::__anon18::d_ptr member      668 /usr/include/elf.h Elf64_Addr d_ptr; /* Address value */
__anon17::__anon18::d_val member      667 /usr/include/elf.h Elf64_Xword d_val; /* Integer value */
__anon17::d_tag  member      664 /usr/include/elf.h Elf64_Sxword d_tag; /* Dynamic entry type */
__anon17::d_un   member      669 /usr/include/elf.h } d_un;
__anon19::vd_aux member      835 /usr/include/elf.h Elf32_Word vd_aux; /* Offset in bytes to verdaux array */
__anon19::vd_cnt member      833 /usr/include/elf.h Elf32_Half vd_cnt; /* Number of associated aux entries */
__anon19::vd_flags member      831 /usr/include/elf.h Elf32_Half vd_flags; /* Version information */
__anon19::vd_hash member      834 /usr/include/elf.h Elf32_Word vd_hash; /* Version name hash value */
__anon19::vd_ndx member      832 /usr/include/elf.h Elf32_Half vd_ndx; /* Version Index */
__anon19::vd_next member      836 /usr/include/elf.h Elf32_Word vd_next; /* Offset in bytes to next verdef
__anon19::vd_version member      830 /usr/include/elf.h Elf32_Half vd_version; /* Version revision */
__anon1::e_ehsize member       77 /usr/include/elf.h Elf32_Half e_ehsize; /* ELF header size in bytes */
__anon1::e_entry member       73 /usr/include/elf.h Elf32_Addr e_entry; /* Entry point virtual address */
__anon1::e_flags member       76 /usr/include/elf.h Elf32_Word e_flags; /* Processor-specific flags */
__anon1::e_ident member       69 /usr/include/elf.h unsigned char e_ident[EI_NIDENT]; /* Magic number and other info */
__anon1::e_machine member       71 /usr/include/elf.h Elf32_Half e_machine; /* Architecture */
__anon1::e_phentsize member       78 /usr/include/elf.h Elf32_Half e_phentsize; /* Program header table entry size */
__anon1::e_phnum member       79 /usr/include/elf.h Elf32_Half e_phnum; /* Program header table entry count */
__anon1::e_phoff member       74 /usr/include/elf.h Elf32_Off e_phoff; /* Program header table file offset */
__anon1::e_shentsize member       80 /usr/include/elf.h Elf32_Half e_shentsize; /* Section header table entry size */
__anon1::e_shnum member       81 /usr/include/elf.h Elf32_Half e_shnum; /* Section header table entry count */
__anon1::e_shoff member       75 /usr/include/elf.h Elf32_Off e_shoff; /* Section header table file offset */
__anon1::e_shstrndx member       82 /usr/include/elf.h Elf32_Half e_shstrndx; /* Section header string table index */
__anon1::e_type  member       70 /usr/include/elf.h Elf32_Half e_type; /* Object file type */
__anon1::e_version member       72 /usr/include/elf.h Elf32_Word e_version; /* Object file version */
__anon20::vd_aux member      847 /usr/include/elf.h Elf64_Word vd_aux; /* Offset in bytes to verdaux array */
__anon20::vd_cnt member      845 /usr/include/elf.h Elf64_Half vd_cnt; /* Number of associated aux entries */
__anon20::vd_flags member      843 /usr/include/elf.h Elf64_Half vd_flags; /* Version information */
__anon20::vd_hash member      846 /usr/include/elf.h Elf64_Word vd_hash; /* Version name hash value */
__anon20::vd_ndx member      844 /usr/include/elf.h Elf64_Half vd_ndx; /* Version Index */
__anon20::vd_next member      848 /usr/include/elf.h Elf64_Word vd_next; /* Offset in bytes to next verdef
__anon20::vd_version member      842 /usr/include/elf.h Elf64_Half vd_version; /* Version revision */
__anon21::vda_name member      872 /usr/include/elf.h Elf32_Word vda_name; /* Version or dependency names */
__anon21::vda_next member      873 /usr/include/elf.h Elf32_Word vda_next; /* Offset in bytes to next verdaux
__anon22::vda_name member      879 /usr/include/elf.h Elf64_Word vda_name; /* Version or dependency names */
__anon22::vda_next member      880 /usr/include/elf.h Elf64_Word vda_next; /* Offset in bytes to next verdaux
__anon23::vn_aux member      893 /usr/include/elf.h Elf32_Word vn_aux; /* Offset in bytes to vernaux array */
__anon23::vn_cnt member      890 /usr/include/elf.h Elf32_Half vn_cnt; /* Number of associated aux entries */
__anon23::vn_file member      891 /usr/include/elf.h Elf32_Word vn_file; /* Offset of filename for this
__anon23::vn_next member      894 /usr/include/elf.h Elf32_Word vn_next; /* Offset in bytes to next verneed
__anon23::vn_version member      889 /usr/include/elf.h Elf32_Half vn_version; /* Version of structure */
__anon24::vn_aux member      904 /usr/include/elf.h Elf64_Word vn_aux; /* Offset in bytes to vernaux array */
__anon24::vn_cnt member      901 /usr/include/elf.h Elf64_Half vn_cnt; /* Number of associated aux entries */
__anon24::vn_file member      902 /usr/include/elf.h Elf64_Word vn_file; /* Offset of filename for this
__anon24::vn_next member      905 /usr/include/elf.h Elf64_Word vn_next; /* Offset in bytes to next verneed
__anon24::vn_version member      900 /usr/include/elf.h Elf64_Half vn_version; /* Version of structure */
__anon25::vna_flags member      920 /usr/include/elf.h Elf32_Half vna_flags; /* Dependency specific information */
__anon25::vna_hash member      919 /usr/include/elf.h Elf32_Word vna_hash; /* Hash value of dependency name */
__anon25::vna_name member      922 /usr/include/elf.h Elf32_Word vna_name; /* Dependency name string offset */
__anon25::vna_next member      923 /usr/include/elf.h Elf32_Word vna_next; /* Offset in bytes to next vernaux
__anon25::vna_other member      921 /usr/include/elf.h Elf32_Half vna_other; /* Unused */
__anon26::vna_flags member      930 /usr/include/elf.h Elf64_Half vna_flags; /* Dependency specific information */
__anon26::vna_hash member      929 /usr/include/elf.h Elf64_Word vna_hash; /* Hash value of dependency name */
__anon26::vna_name member      932 /usr/include/elf.h Elf64_Word vna_name; /* Dependency name string offset */
__anon26::vna_next member      933 /usr/include/elf.h Elf64_Word vna_next; /* Offset in bytes to next vernaux
__anon26::vna_other member      931 /usr/include/elf.h Elf64_Half vna_other; /* Unused */
__anon27::__anon28::a_val member      956 /usr/include/elf.h uint32_t a_val; /* Integer value */
__anon27::a_type member      953 /usr/include/elf.h uint32_t a_type; /* Entry type */
__anon27::a_un   member      960 /usr/include/elf.h } a_un;
__anon29::__anon30::a_val member      968 /usr/include/elf.h uint64_t a_val; /* Integer value */
__anon29::a_type member      965 /usr/include/elf.h uint64_t a_type; /* Entry type */
__anon29::a_un   member      972 /usr/include/elf.h } a_un;
__anon2::e_ehsize member       95 /usr/include/elf.h Elf64_Half e_ehsize; /* ELF header size in bytes */
__anon2::e_entry member       91 /usr/include/elf.h Elf64_Addr e_entry; /* Entry point virtual address */
__anon2::e_flags member       94 /usr/include/elf.h Elf64_Word e_flags; /* Processor-specific flags */
__anon2::e_ident member       87 /usr/include/elf.h unsigned char e_ident[EI_NIDENT]; /* Magic number and other info */
__anon2::e_machine member       89 /usr/include/elf.h Elf64_Half e_machine; /* Architecture */
__anon2::e_phentsize member       96 /usr/include/elf.h Elf64_Half e_phentsize; /* Program header table entry size */
__anon2::e_phnum member       97 /usr/include/elf.h Elf64_Half e_phnum; /* Program header table entry count */
__anon2::e_phoff member       92 /usr/include/elf.h Elf64_Off e_phoff; /* Program header table file offset */
__anon2::e_shentsize member       98 /usr/include/elf.h Elf64_Half e_shentsize; /* Section header table entry size */
__anon2::e_shnum member       99 /usr/include/elf.h Elf64_Half e_shnum; /* Section header table entry count */
__anon2::e_shoff member       93 /usr/include/elf.h Elf64_Off e_shoff; /* Section header table file offset */
__anon2::e_shstrndx member      100 /usr/include/elf.h Elf64_Half e_shstrndx; /* Section header string table index */
__anon2::e_type  member       88 /usr/include/elf.h Elf64_Half e_type; /* Object file type */
__anon2::e_version member       90 /usr/include/elf.h Elf64_Word e_version; /* Object file version */
__anon31::n_descsz member      982 /usr/include/elf.h Elf32_Word n_descsz; /* Length of the note's descriptor. */
__anon31::n_namesz member      981 /usr/include/elf.h Elf32_Word n_namesz; /* Length of the note's name. */
__anon31::n_type member      983 /usr/include/elf.h Elf32_Word n_type; /* Type of the note. */
__anon32::n_descsz member      989 /usr/include/elf.h Elf64_Word n_descsz; /* Length of the note's descriptor. */
__anon32::n_namesz member      988 /usr/include/elf.h Elf64_Word n_namesz; /* Length of the note's name. */
__anon32::n_type member      990 /usr/include/elf.h Elf64_Word n_type; /* Type of the note. */
__anon33::m_info member     1046 /usr/include/elf.h Elf32_Word m_info; /* Size and index. */
__anon33::m_poffset member     1047 /usr/include/elf.h Elf32_Word m_poffset; /* Symbol offset. */
__anon33::m_repeat member     1048 /usr/include/elf.h Elf32_Half m_repeat; /* Repeat count. */
__anon33::m_stride member     1049 /usr/include/elf.h Elf32_Half m_stride; /* Stride info. */
__anon33::m_value member     1045 /usr/include/elf.h Elf32_Xword m_value; /* Symbol value. */
__anon34::m_info member     1055 /usr/include/elf.h Elf64_Xword m_info; /* Size and index. */
__anon34::m_poffset member     1056 /usr/include/elf.h Elf64_Xword m_poffset; /* Symbol offset. */
__anon34::m_repeat member     1057 /usr/include/elf.h Elf64_Half m_repeat; /* Repeat count. */
__anon34::m_stride member     1058 /usr/include/elf.h Elf64_Half m_stride; /* Stride info. */
__anon34::m_value member     1054 /usr/include/elf.h Elf64_Xword m_value; /* Symbol value. */
__anon35::__anon36::gt_current_g_value member     1433 /usr/include/elf.h Elf32_Word gt_current_g_value; /* -G value used for compilation. */
__anon35::__anon36::gt_unused member     1434 /usr/include/elf.h Elf32_Word gt_unused; /* Not used. */
__anon35::__anon37::gt_bytes member     1439 /usr/include/elf.h Elf32_Word gt_bytes; /* This many bytes would be used. */
__anon35::__anon37::gt_g_value member     1438 /usr/include/elf.h Elf32_Word gt_g_value; /* If this value were used for -G. */
__anon35::gt_entry member     1440 /usr/include/elf.h } gt_entry; /* Subsequent entries in section. */
__anon35::gt_header member     1435 /usr/include/elf.h } gt_header; /* First entry in section. */
__anon38::ri_cprmask member     1448 /usr/include/elf.h Elf32_Word ri_cprmask[4]; /* Coprocessor registers used. */
__anon38::ri_gp_value member     1449 /usr/include/elf.h Elf32_Sword ri_gp_value; /* $gp register value. */
__anon38::ri_gprmask member     1447 /usr/include/elf.h Elf32_Word ri_gprmask; /* General registers used. */
__anon39::info   member     1461 /usr/include/elf.h Elf32_Word info; /* Kind-specific information. */
__anon39::kind   member     1456 /usr/include/elf.h unsigned char kind; /* Determines interpretation of the
__anon39::section member     1459 /usr/include/elf.h Elf32_Section section; /* Section header index of section affected,
__anon39::size   member     1458 /usr/include/elf.h unsigned char size; /* Size of descriptor, including header. */
__anon3::sh_addr member      277 /usr/include/elf.h Elf32_Addr sh_addr; /* Section virtual addr at execution */
__anon3::sh_addralign member      282 /usr/include/elf.h Elf32_Word sh_addralign; /* Section alignment */
__anon3::sh_entsize member      283 /usr/include/elf.h Elf32_Word sh_entsize; /* Entry size if section holds table */
__anon3::sh_flags member      276 /usr/include/elf.h Elf32_Word sh_flags; /* Section flags */
__anon3::sh_info member      281 /usr/include/elf.h Elf32_Word sh_info; /* Additional section information */
__anon3::sh_link member      280 /usr/include/elf.h Elf32_Word sh_link; /* Link to another section */
__anon3::sh_name member      274 /usr/include/elf.h Elf32_Word sh_name; /* Section name (string tbl index) */
__anon3::sh_offset member      278 /usr/include/elf.h Elf32_Off sh_offset; /* Section file offset */
__anon3::sh_size member      279 /usr/include/elf.h Elf32_Word sh_size; /* Section size in bytes */
__anon3::sh_type member      275 /usr/include/elf.h Elf32_Word sh_type; /* Section type */
__anon40::hwp_flags1 member     1507 /usr/include/elf.h Elf32_Word hwp_flags1; /* Extra flags. */
__anon40::hwp_flags2 member     1508 /usr/include/elf.h Elf32_Word hwp_flags2; /* Extra flags. */
__anon41::l_checksum member     1670 /usr/include/elf.h Elf32_Word l_checksum; /* Checksum */
__anon41::l_flags member     1672 /usr/include/elf.h Elf32_Word l_flags; /* Flags */
__anon41::l_name member     1668 /usr/include/elf.h Elf32_Word l_name; /* Name (string table index) */
__anon41::l_time_stamp member     1669 /usr/include/elf.h Elf32_Word l_time_stamp; /* Timestamp */
__anon41::l_version member     1671 /usr/include/elf.h Elf32_Word l_version; /* Interface version */
__anon42::l_checksum member     1679 /usr/include/elf.h Elf64_Word l_checksum; /* Checksum */
__anon42::l_flags member     1681 /usr/include/elf.h Elf64_Word l_flags; /* Flags */
__anon42::l_name member     1677 /usr/include/elf.h Elf64_Word l_name; /* Name (string table index) */
__anon42::l_time_stamp member     1678 /usr/include/elf.h Elf64_Word l_time_stamp; /* Timestamp */
__anon42::l_version member     1680 /usr/include/elf.h Elf64_Word l_version; /* Interface version */
__anon4::sh_addr member      291 /usr/include/elf.h Elf64_Addr sh_addr; /* Section virtual addr at execution */
__anon4::sh_addralign member      296 /usr/include/elf.h Elf64_Xword sh_addralign; /* Section alignment */
__anon4::sh_entsize member      297 /usr/include/elf.h Elf64_Xword sh_entsize; /* Entry size if section holds table */
__anon4::sh_flags member      290 /usr/include/elf.h Elf64_Xword sh_flags; /* Section flags */
__anon4::sh_info member      295 /usr/include/elf.h Elf64_Word sh_info; /* Additional section information */
__anon4::sh_link member      294 /usr/include/elf.h Elf64_Word sh_link; /* Link to another section */
__anon4::sh_name member      288 /usr/include/elf.h Elf64_Word sh_name; /* Section name (string tbl index) */
__anon4::sh_offset member      292 /usr/include/elf.h Elf64_Off sh_offset; /* Section file offset */
__anon4::sh_size member      293 /usr/include/elf.h Elf64_Xword sh_size; /* Section size in bytes */
__anon4::sh_type member      289 /usr/include/elf.h Elf64_Word sh_type; /* Section type */
__anon5::st_info member      386 /usr/include/elf.h unsigned char st_info; /* Symbol type and binding */
__anon5::st_name member      383 /usr/include/elf.h Elf32_Word st_name; /* Symbol name (string tbl index) */
__anon5::st_other member      387 /usr/include/elf.h unsigned char st_other; /* Symbol visibility */
__anon5::st_shndx member      388 /usr/include/elf.h Elf32_Section st_shndx; /* Section index */
__anon5::st_size member      385 /usr/include/elf.h Elf32_Word st_size; /* Symbol size */
__anon5::st_value member      384 /usr/include/elf.h Elf32_Addr st_value; /* Symbol value */
__anon6::st_info member      394 /usr/include/elf.h unsigned char st_info; /* Symbol type and binding */
__anon6::st_name member      393 /usr/include/elf.h Elf64_Word st_name; /* Symbol name (string tbl index) */
__anon6::st_other member      395 /usr/include/elf.h unsigned char st_other; /* Symbol visibility */
__anon6::st_shndx member      396 /usr/include/elf.h Elf64_Section st_shndx; /* Section index */
__anon6::st_size member      398 /usr/include/elf.h Elf64_Xword st_size; /* Symbol size */
__anon6::st_value member      397 /usr/include/elf.h Elf64_Addr st_value; /* Symbol value */
__anon7::si_boundto member      406 /usr/include/elf.h Elf32_Half si_boundto; /* Direct bindings, symbol bound to */
__anon7::si_flags member      407 /usr/include/elf.h Elf32_Half si_flags; /* Per symbol flags */
__anon8::si_boundto member      412 /usr/include/elf.h Elf64_Half si_boundto; /* Direct bindings, symbol bound to */
__anon8::si_flags member      413 /usr/include/elf.h Elf64_Half si_flags; /* Per symbol flags */
__anon9::r_info  member      499 /usr/include/elf.h Elf32_Word r_info; /* Relocation type and symbol index */
__anon9::r_offset member      498 /usr/include/elf.h Elf32_Addr r_offset; /* Address */
a_type           member      953 /usr/include/elf.h uint32_t a_type; /* Entry type */
a_type           member      965 /usr/include/elf.h uint64_t a_type; /* Entry type */
a_un             member      960 /usr/include/elf.h } a_un;
a_un             member      972 /usr/include/elf.h } a_un;
a_val            member      956 /usr/include/elf.h uint32_t a_val; /* Integer value */
a_val            member      968 /usr/include/elf.h uint64_t a_val; /* Integer value */
d_ptr            member      658 /usr/include/elf.h Elf32_Addr d_ptr; /* Address value */
d_ptr            member      668 /usr/include/elf.h Elf64_Addr d_ptr; /* Address value */
d_tag            member      654 /usr/include/elf.h Elf32_Sword d_tag; /* Dynamic entry type */
d_tag            member      664 /usr/include/elf.h Elf64_Sxword d_tag; /* Dynamic entry type */
d_un             member      659 /usr/include/elf.h } d_un;
d_un             member      669 /usr/include/elf.h } d_un;
d_val            member      657 /usr/include/elf.h Elf32_Word d_val; /* Integer value */
d_val            member      667 /usr/include/elf.h Elf64_Xword d_val; /* Integer value */
e_ehsize         member       77 /usr/include/elf.h Elf32_Half e_ehsize; /* ELF header size in bytes */
e_ehsize         member       95 /usr/include/elf.h Elf64_Half e_ehsize; /* ELF header size in bytes */
e_entry          member       73 /usr/include/elf.h Elf32_Addr e_entry; /* Entry point virtual address */
e_entry          member       91 /usr/include/elf.h Elf64_Addr e_entry; /* Entry point virtual address */
e_flags          member       76 /usr/include/elf.h Elf32_Word e_flags; /* Processor-specific flags */
e_flags          member       94 /usr/include/elf.h Elf64_Word e_flags; /* Processor-specific flags */
e_ident          member       69 /usr/include/elf.h unsigned char e_ident[EI_NIDENT]; /* Magic number and other info */
e_ident          member       87 /usr/include/elf.h unsigned char e_ident[EI_NIDENT]; /* Magic number and other info */
e_machine        member       71 /usr/include/elf.h Elf32_Half e_machine; /* Architecture */
e_machine        member       89 /usr/include/elf.h Elf64_Half e_machine; /* Architecture */
e_phentsize      member       78 /usr/include/elf.h Elf32_Half e_phentsize; /* Program header table entry size */
e_phentsize      member       96 /usr/include/elf.h Elf64_Half e_phentsize; /* Program header table entry size */
e_phnum          member       79 /usr/include/elf.h Elf32_Half e_phnum; /* Program header table entry count */
e_phnum          member       97 /usr/include/elf.h Elf64_Half e_phnum; /* Program header table entry count */
e_phoff          member       74 /usr/include/elf.h Elf32_Off e_phoff; /* Program header table file offset */
e_phoff          member       92 /usr/include/elf.h Elf64_Off e_phoff; /* Program header table file offset */
e_shentsize      member       80 /usr/include/elf.h Elf32_Half e_shentsize; /* Section header table entry size */
e_shentsize      member       98 /usr/include/elf.h Elf64_Half e_shentsize; /* Section header table entry size */
e_shnum          member       81 /usr/include/elf.h Elf32_Half e_shnum; /* Section header table entry count */
e_shnum          member       99 /usr/include/elf.h Elf64_Half e_shnum; /* Section header table entry count */
e_shoff          member       75 /usr/include/elf.h Elf32_Off e_shoff; /* Section header table file offset */
e_shoff          member       93 /usr/include/elf.h Elf64_Off e_shoff; /* Section header table file offset */
e_shstrndx       member       82 /usr/include/elf.h Elf32_Half e_shstrndx; /* Section header string table index */
e_shstrndx       member      100 /usr/include/elf.h Elf64_Half e_shstrndx; /* Section header string table index */
e_type           member       70 /usr/include/elf.h Elf32_Half e_type; /* Object file type */
e_type           member       88 /usr/include/elf.h Elf64_Half e_type; /* Object file type */
e_version        member       72 /usr/include/elf.h Elf32_Word e_version; /* Object file version */
e_version        member       90 /usr/include/elf.h Elf64_Word e_version; /* Object file version */
gt_bytes         member     1439 /usr/include/elf.h Elf32_Word gt_bytes; /* This many bytes would be used. */
gt_current_g_value member     1433 /usr/include/elf.h Elf32_Word gt_current_g_value; /* -G value used for compilation. */
gt_entry         member     1440 /usr/include/elf.h } gt_entry; /* Subsequent entries in section. */
gt_g_value       member     1438 /usr/include/elf.h Elf32_Word gt_g_value; /* If this value were used for -G. */
gt_header        member     1435 /usr/include/elf.h } gt_header; /* First entry in section. */
gt_unused        member     1434 /usr/include/elf.h Elf32_Word gt_unused; /* Not used. */
hwp_flags1       member     1507 /usr/include/elf.h Elf32_Word hwp_flags1; /* Extra flags. */
hwp_flags2       member     1508 /usr/include/elf.h Elf32_Word hwp_flags2; /* Extra flags. */
info             member     1461 /usr/include/elf.h Elf32_Word info; /* Kind-specific information. */
kind             member     1456 /usr/include/elf.h unsigned char kind; /* Determines interpretation of the
l_checksum       member     1670 /usr/include/elf.h Elf32_Word l_checksum; /* Checksum */
l_checksum       member     1679 /usr/include/elf.h Elf64_Word l_checksum; /* Checksum */
l_flags          member     1672 /usr/include/elf.h Elf32_Word l_flags; /* Flags */
l_flags          member     1681 /usr/include/elf.h Elf64_Word l_flags; /* Flags */
l_name           member     1668 /usr/include/elf.h Elf32_Word l_name; /* Name (string table index) */
l_name           member     1677 /usr/include/elf.h Elf64_Word l_name; /* Name (string table index) */
l_time_stamp     member     1669 /usr/include/elf.h Elf32_Word l_time_stamp; /* Timestamp */
l_time_stamp     member     1678 /usr/include/elf.h Elf64_Word l_time_stamp; /* Timestamp */
l_version        member     1671 /usr/include/elf.h Elf32_Word l_version; /* Interface version */
l_version        member     1680 /usr/include/elf.h Elf64_Word l_version; /* Interface version */
m_info           member     1046 /usr/include/elf.h Elf32_Word m_info; /* Size and index. */
m_info           member     1055 /usr/include/elf.h Elf64_Xword m_info; /* Size and index. */
m_poffset        member     1047 /usr/include/elf.h Elf32_Word m_poffset; /* Symbol offset. */
m_poffset        member     1056 /usr/include/elf.h Elf64_Xword m_poffset; /* Symbol offset. */
m_repeat         member     1048 /usr/include/elf.h Elf32_Half m_repeat; /* Repeat count. */
m_repeat         member     1057 /usr/include/elf.h Elf64_Half m_repeat; /* Repeat count. */
m_stride         member     1049 /usr/include/elf.h Elf32_Half m_stride; /* Stride info. */
m_stride         member     1058 /usr/include/elf.h Elf64_Half m_stride; /* Stride info. */
m_value          member     1045 /usr/include/elf.h Elf32_Xword m_value; /* Symbol value. */
m_value          member     1054 /usr/include/elf.h Elf64_Xword m_value; /* Symbol value. */
n_descsz         member      982 /usr/include/elf.h Elf32_Word n_descsz; /* Length of the note's descriptor. */
n_descsz         member      989 /usr/include/elf.h Elf64_Word n_descsz; /* Length of the note's descriptor. */
n_namesz         member      981 /usr/include/elf.h Elf32_Word n_namesz; /* Length of the note's name. */
n_namesz         member      988 /usr/include/elf.h Elf64_Word n_namesz; /* Length of the note's name. */
n_type           member      983 /usr/include/elf.h Elf32_Word n_type; /* Type of the note. */
n_type           member      990 /usr/include/elf.h Elf64_Word n_type; /* Type of the note. */
p_align          member      550 /usr/include/elf.h Elf32_Word p_align; /* Segment alignment */
p_align          member      562 /usr/include/elf.h Elf64_Xword p_align; /* Segment alignment */
p_filesz         member      547 /usr/include/elf.h Elf32_Word p_filesz; /* Segment size in file */
p_filesz         member      560 /usr/include/elf.h Elf64_Xword p_filesz; /* Segment size in file */
p_flags          member      549 /usr/include/elf.h Elf32_Word p_flags; /* Segment flags */
p_flags          member      556 /usr/include/elf.h Elf64_Word p_flags; /* Segment flags */
p_memsz          member      548 /usr/include/elf.h Elf32_Word p_memsz; /* Segment size in memory */
p_memsz          member      561 /usr/include/elf.h Elf64_Xword p_memsz; /* Segment size in memory */
p_offset         member      544 /usr/include/elf.h Elf32_Off p_offset; /* Segment file offset */
p_offset         member      557 /usr/include/elf.h Elf64_Off p_offset; /* Segment file offset */
p_paddr          member      546 /usr/include/elf.h Elf32_Addr p_paddr; /* Segment physical address */
p_paddr          member      559 /usr/include/elf.h Elf64_Addr p_paddr; /* Segment physical address */
p_type           member      543 /usr/include/elf.h Elf32_Word p_type; /* Segment type */
p_type           member      555 /usr/include/elf.h Elf64_Word p_type; /* Segment type */
p_vaddr          member      545 /usr/include/elf.h Elf32_Addr p_vaddr; /* Segment virtual address */
p_vaddr          member      558 /usr/include/elf.h Elf64_Addr p_vaddr; /* Segment virtual address */
r_addend         member      519 /usr/include/elf.h Elf32_Sword r_addend; /* Addend */
r_addend         member      526 /usr/include/elf.h Elf64_Sxword r_addend; /* Addend */
r_info           member      499 /usr/include/elf.h Elf32_Word r_info; /* Relocation type and symbol index */
r_info           member      510 /usr/include/elf.h Elf64_Xword r_info; /* Relocation type and symbol index */
r_info           member      518 /usr/include/elf.h Elf32_Word r_info; /* Relocation type and symbol index */
r_info           member      525 /usr/include/elf.h Elf64_Xword r_info; /* Relocation type and symbol index */
r_offset         member      498 /usr/include/elf.h Elf32_Addr r_offset; /* Address */
r_offset         member      509 /usr/include/elf.h Elf64_Addr r_offset; /* Address */
r_offset         member      517 /usr/include/elf.h Elf32_Addr r_offset; /* Address */
r_offset         member      524 /usr/include/elf.h Elf64_Addr r_offset; /* Address */
ri_cprmask       member     1448 /usr/include/elf.h Elf32_Word ri_cprmask[4]; /* Coprocessor registers used. */
ri_gp_value      member     1449 /usr/include/elf.h Elf32_Sword ri_gp_value; /* $gp register value. */
ri_gprmask       member     1447 /usr/include/elf.h Elf32_Word ri_gprmask; /* General registers used. */
section          member     1459 /usr/include/elf.h Elf32_Section section; /* Section header index of section affected,
sh_addr          member      277 /usr/include/elf.h Elf32_Addr sh_addr; /* Section virtual addr at execution */
sh_addr          member      291 /usr/include/elf.h Elf64_Addr sh_addr; /* Section virtual addr at execution */
sh_addralign     member      282 /usr/include/elf.h Elf32_Word sh_addralign; /* Section alignment */
sh_addralign     member      296 /usr/include/elf.h Elf64_Xword sh_addralign; /* Section alignment */
sh_entsize       member      283 /usr/include/elf.h Elf32_Word sh_entsize; /* Entry size if section holds table */
sh_entsize       member      297 /usr/include/elf.h Elf64_Xword sh_entsize; /* Entry size if section holds table */
sh_flags         member      276 /usr/include/elf.h Elf32_Word sh_flags; /* Section flags */
sh_flags         member      290 /usr/include/elf.h Elf64_Xword sh_flags; /* Section flags */
sh_info          member      281 /usr/include/elf.h Elf32_Word sh_info; /* Additional section information */
sh_info          member      295 /usr/include/elf.h Elf64_Word sh_info; /* Additional section information */
sh_link          member      280 /usr/include/elf.h Elf32_Word sh_link; /* Link to another section */
sh_link          member      294 /usr/include/elf.h Elf64_Word sh_link; /* Link to another section */
sh_name          member      274 /usr/include/elf.h Elf32_Word sh_name; /* Section name (string tbl index) */
sh_name          member      288 /usr/include/elf.h Elf64_Word sh_name; /* Section name (string tbl index) */
sh_offset        member      278 /usr/include/elf.h Elf32_Off sh_offset; /* Section file offset */
sh_offset        member      292 /usr/include/elf.h Elf64_Off sh_offset; /* Section file offset */
sh_size          member      279 /usr/include/elf.h Elf32_Word sh_size; /* Section size in bytes */
sh_size          member      293 /usr/include/elf.h Elf64_Xword sh_size; /* Section size in bytes */
sh_type          member      275 /usr/include/elf.h Elf32_Word sh_type; /* Section type */
sh_type          member      289 /usr/include/elf.h Elf64_Word sh_type; /* Section type */
si_boundto       member      406 /usr/include/elf.h Elf32_Half si_boundto; /* Direct bindings, symbol bound to */
si_boundto       member      412 /usr/include/elf.h Elf64_Half si_boundto; /* Direct bindings, symbol bound to */
si_flags         member      407 /usr/include/elf.h Elf32_Half si_flags; /* Per symbol flags */
si_flags         member      413 /usr/include/elf.h Elf64_Half si_flags; /* Per symbol flags */
size             member     1458 /usr/include/elf.h unsigned char size; /* Size of descriptor, including header. */
st_info          member      386 /usr/include/elf.h unsigned char st_info; /* Symbol type and binding */
st_info          member      394 /usr/include/elf.h unsigned char st_info; /* Symbol type and binding */
st_name          member      383 /usr/include/elf.h Elf32_Word st_name; /* Symbol name (string tbl index) */
st_name          member      393 /usr/include/elf.h Elf64_Word st_name; /* Symbol name (string tbl index) */
st_other         member      387 /usr/include/elf.h unsigned char st_other; /* Symbol visibility */
st_other         member      395 /usr/include/elf.h unsigned char st_other; /* Symbol visibility */
st_shndx         member      388 /usr/include/elf.h Elf32_Section st_shndx; /* Section index */
st_shndx         member      396 /usr/include/elf.h Elf64_Section st_shndx; /* Section index */
st_size          member      385 /usr/include/elf.h Elf32_Word st_size; /* Symbol size */
st_size          member      398 /usr/include/elf.h Elf64_Xword st_size; /* Symbol size */
st_value         member      384 /usr/include/elf.h Elf32_Addr st_value; /* Symbol value */
st_value         member      397 /usr/include/elf.h Elf64_Addr st_value; /* Symbol value */
vd_aux           member      835 /usr/include/elf.h Elf32_Word vd_aux; /* Offset in bytes to verdaux array */
vd_aux           member      847 /usr/include/elf.h Elf64_Word vd_aux; /* Offset in bytes to verdaux array */
vd_cnt           member      833 /usr/include/elf.h Elf32_Half vd_cnt; /* Number of associated aux entries */
vd_cnt           member      845 /usr/include/elf.h Elf64_Half vd_cnt; /* Number of associated aux entries */
vd_flags         member      831 /usr/include/elf.h Elf32_Half vd_flags; /* Version information */
vd_flags         member      843 /usr/include/elf.h Elf64_Half vd_flags; /* Version information */
vd_hash          member      834 /usr/include/elf.h Elf32_Word vd_hash; /* Version name hash value */
vd_hash          member      846 /usr/include/elf.h Elf64_Word vd_hash; /* Version name hash value */
vd_ndx           member      832 /usr/include/elf.h Elf32_Half vd_ndx; /* Version Index */
vd_ndx           member      844 /usr/include/elf.h Elf64_Half vd_ndx; /* Version Index */
vd_next          member      836 /usr/include/elf.h Elf32_Word vd_next; /* Offset in bytes to next verdef
vd_next          member      848 /usr/include/elf.h Elf64_Word vd_next; /* Offset in bytes to next verdef
vd_version       member      830 /usr/include/elf.h Elf32_Half vd_version; /* Version revision */
vd_version       member      842 /usr/include/elf.h Elf64_Half vd_version; /* Version revision */
vda_name         member      872 /usr/include/elf.h Elf32_Word vda_name; /* Version or dependency names */
vda_name         member      879 /usr/include/elf.h Elf64_Word vda_name; /* Version or dependency names */
vda_next         member      873 /usr/include/elf.h Elf32_Word vda_next; /* Offset in bytes to next verdaux
vda_next         member      880 /usr/include/elf.h Elf64_Word vda_next; /* Offset in bytes to next verdaux
vn_aux           member      893 /usr/include/elf.h Elf32_Word vn_aux; /* Offset in bytes to vernaux array */
vn_aux           member      904 /usr/include/elf.h Elf64_Word vn_aux; /* Offset in bytes to vernaux array */
vn_cnt           member      890 /usr/include/elf.h Elf32_Half vn_cnt; /* Number of associated aux entries */
vn_cnt           member      901 /usr/include/elf.h Elf64_Half vn_cnt; /* Number of associated aux entries */
vn_file          member      891 /usr/include/elf.h Elf32_Word vn_file; /* Offset of filename for this
vn_file          member      902 /usr/include/elf.h Elf64_Word vn_file; /* Offset of filename for this
vn_next          member      894 /usr/include/elf.h Elf32_Word vn_next; /* Offset in bytes to next verneed
vn_next          member      905 /usr/include/elf.h Elf64_Word vn_next; /* Offset in bytes to next verneed
vn_version       member      889 /usr/include/elf.h Elf32_Half vn_version; /* Version of structure */
vn_version       member      900 /usr/include/elf.h Elf64_Half vn_version; /* Version of structure */
vna_flags        member      920 /usr/include/elf.h Elf32_Half vna_flags; /* Dependency specific information */
vna_flags        member      930 /usr/include/elf.h Elf64_Half vna_flags; /* Dependency specific information */
vna_hash         member      919 /usr/include/elf.h Elf32_Word vna_hash; /* Hash value of dependency name */
vna_hash         member      929 /usr/include/elf.h Elf64_Word vna_hash; /* Hash value of dependency name */
vna_name         member      922 /usr/include/elf.h Elf32_Word vna_name; /* Dependency name string offset */
vna_name         member      932 /usr/include/elf.h Elf64_Word vna_name; /* Dependency name string offset */
vna_next         member      923 /usr/include/elf.h Elf32_Word vna_next; /* Offset in bytes to next vernaux
vna_next         member      933 /usr/include/elf.h Elf64_Word vna_next; /* Offset in bytes to next vernaux
vna_other        member      921 /usr/include/elf.h Elf32_Half vna_other; /* Unused */
vna_other        member      931 /usr/include/elf.h Elf64_Half vna_other; /* Unused */
