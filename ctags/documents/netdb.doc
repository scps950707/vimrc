AI_ADDRCONFIG    macro       603 /usr/include/netdb.h # define AI_ADDRCONFIG 0x0020 /* Use configuration of this host to choose
AI_ALL           macro       602 /usr/include/netdb.h # define AI_ALL 0x0010 /* Return IPv4 mapped and IPv6 addresses. */
AI_CANONIDN      macro       609 /usr/include/netdb.h # define AI_CANONIDN 0x0080 /* Translate canonical name from IDN format. */
AI_CANONNAME     macro       599 /usr/include/netdb.h # define AI_CANONNAME 0x0002 /* Request for canonical name. */
AI_IDN           macro       606 /usr/include/netdb.h # define AI_IDN 0x0040 /* IDN encode input (assuming it is encoded
AI_IDN_ALLOW_UNASSIGNED macro       610 /usr/include/netdb.h # define AI_IDN_ALLOW_UNASSIGNED 0x0100 /* Don't reject unassigned Unicode
AI_IDN_USE_STD3_ASCII_RULES macro       612 /usr/include/netdb.h # define AI_IDN_USE_STD3_ASCII_RULES 0x0200 /* Validate strings according to
AI_NUMERICHOST   macro       600 /usr/include/netdb.h # define AI_NUMERICHOST 0x0004 /* Don't use name resolution. */
AI_NUMERICSERV   macro       615 /usr/include/netdb.h # define AI_NUMERICSERV 0x0400 /* Don't use name resolution. */
AI_PASSIVE       macro       598 /usr/include/netdb.h # define AI_PASSIVE 0x0001 /* Socket address is intended for `bind'. */
AI_V4MAPPED      macro       601 /usr/include/netdb.h # define AI_V4MAPPED 0x0008 /* IPv4 mapped addresses are acceptable. */
EAI_ADDRFAMILY   macro       630 /usr/include/netdb.h # define EAI_ADDRFAMILY -9 /* Address family for NAME not supported. */
EAI_AGAIN        macro       620 /usr/include/netdb.h # define EAI_AGAIN -3 /* Temporary failure in name resolution. */
EAI_ALLDONE      macro       634 /usr/include/netdb.h # define EAI_ALLDONE -103 /* All requests done. */
EAI_BADFLAGS     macro       618 /usr/include/netdb.h # define EAI_BADFLAGS -1 /* Invalid value for `ai_flags' field. */
EAI_CANCELED     macro       632 /usr/include/netdb.h # define EAI_CANCELED -101 /* Request canceled. */
EAI_FAIL         macro       621 /usr/include/netdb.h # define EAI_FAIL -4 /* Non-recoverable failure in name res. */
EAI_FAMILY       macro       622 /usr/include/netdb.h # define EAI_FAMILY -6 /* `ai_family' not supported. */
EAI_IDN_ENCODE   macro       636 /usr/include/netdb.h # define EAI_IDN_ENCODE -105 /* IDN encoding failed. */
EAI_INPROGRESS   macro       631 /usr/include/netdb.h # define EAI_INPROGRESS -100 /* Processing request in progress. */
EAI_INTR         macro       635 /usr/include/netdb.h # define EAI_INTR -104 /* Interrupted by a signal. */
EAI_MEMORY       macro       625 /usr/include/netdb.h # define EAI_MEMORY -10 /* Memory allocation failure. */
EAI_NODATA       macro       629 /usr/include/netdb.h # define EAI_NODATA -5 /* No address associated with NAME. */
EAI_NONAME       macro       619 /usr/include/netdb.h # define EAI_NONAME -2 /* NAME or SERVICE is unknown. */
EAI_NOTCANCELED  macro       633 /usr/include/netdb.h # define EAI_NOTCANCELED -102 /* Request not canceled. */
EAI_OVERFLOW     macro       627 /usr/include/netdb.h # define EAI_OVERFLOW -12 /* Argument buffer overflow. */
EAI_SERVICE      macro       624 /usr/include/netdb.h # define EAI_SERVICE -8 /* SERVICE not supported for `ai_socktype'. */
EAI_SOCKTYPE     macro       623 /usr/include/netdb.h # define EAI_SOCKTYPE -7 /* `ai_socktype' not supported. */
EAI_SYSTEM       macro       626 /usr/include/netdb.h # define EAI_SYSTEM -11 /* System error returned in `errno'. */
GAI_NOWAIT       macro       594 /usr/include/netdb.h # define GAI_NOWAIT 1
GAI_WAIT         macro       593 /usr/include/netdb.h # define GAI_WAIT 0
HOST_NOT_FOUND   macro        65 /usr/include/netdb.h # define HOST_NOT_FOUND 1 /* Authoritative Answer Host not found. */
IPPORT_RESERVED  macro        81 /usr/include/netdb.h # define IPPORT_RESERVED 1024
NETDB_INTERNAL   macro        74 /usr/include/netdb.h # define NETDB_INTERNAL -1 /* See errno. */
NETDB_SUCCESS    macro        75 /usr/include/netdb.h # define NETDB_SUCCESS 0 /* No problem. */
NI_DGRAM         macro       648 /usr/include/netdb.h # define NI_DGRAM 16 /* Look up UDP service rather than TCP. */
NI_IDN           macro       650 /usr/include/netdb.h # define NI_IDN 32 /* Convert name from IDN format. */
NI_IDN_ALLOW_UNASSIGNED macro       651 /usr/include/netdb.h # define NI_IDN_ALLOW_UNASSIGNED 64 /* Don't reject unassigned Unicode
NI_IDN_USE_STD3_ASCII_RULES macro       653 /usr/include/netdb.h # define NI_IDN_USE_STD3_ASCII_RULES 128 /* Validate strings according to
NI_MAXHOST       macro       640 /usr/include/netdb.h # define NI_MAXHOST 1025
NI_MAXSERV       macro       641 /usr/include/netdb.h # define NI_MAXSERV 32
NI_NAMEREQD      macro       647 /usr/include/netdb.h # define NI_NAMEREQD 8 /* Don't return numeric addresses. */
NI_NOFQDN        macro       646 /usr/include/netdb.h # define NI_NOFQDN 4 /* Only return nodename portion. */
NI_NUMERICHOST   macro       644 /usr/include/netdb.h # define NI_NUMERICHOST 1 /* Don't try to look up hostname. */
NI_NUMERICSERV   macro       645 /usr/include/netdb.h # define NI_NUMERICSERV 2 /* Don't convert port number to name. */
NO_ADDRESS       macro        76 /usr/include/netdb.h # define NO_ADDRESS NO_DATA /* No address, look for MX record. */
NO_DATA          macro        70 /usr/include/netdb.h # define NO_DATA 4 /* Valid name, no data record of requested
NO_RECOVERY      macro        68 /usr/include/netdb.h # define NO_RECOVERY 3 /* Non recoverable errors, FORMERR, REFUSED,
SCOPE_DELIMITER  macro        86 /usr/include/netdb.h # define SCOPE_DELIMITER '%'
TRY_AGAIN        macro        66 /usr/include/netdb.h # define TRY_AGAIN 2 /* Non-Authoritative Host not found,
_NETDB_H         macro        23 /usr/include/netdb.h #define _NETDB_H 1
_PATH_HEQUIV     macro        45 /usr/include/netdb.h #define _PATH_HEQUIV "/etc/hosts.equiv"
_PATH_HOSTS      macro        46 /usr/include/netdb.h #define _PATH_HOSTS "/etc/hosts"
_PATH_NETWORKS   macro        47 /usr/include/netdb.h #define _PATH_NETWORKS "/etc/networks"
_PATH_NSSWITCH_CONF macro        48 /usr/include/netdb.h #define _PATH_NSSWITCH_CONF "/etc/nsswitch.conf"
_PATH_PROTOCOLS  macro        49 /usr/include/netdb.h #define _PATH_PROTOCOLS "/etc/protocols"
_PATH_SERVICES   macro        50 /usr/include/netdb.h #define _PATH_SERVICES "/etc/services"
__glibc_reserved member      589 /usr/include/netdb.h int __glibc_reserved[5];
__h_errno_location prototype    61 /usr/include/netdb.h extern int *__h_errno_location (void) __THROW __attribute__ ((__const__));
__need_sigevent_t macro        36 /usr/include/netdb.h # define __need_sigevent_t
__need_timespec  macro        38 /usr/include/netdb.h # define __need_timespec
__return         member      588 /usr/include/netdb.h int __return;
addrinfo         struct      567 /usr/include/netdb.h struct addrinfo
addrinfo::ai_addr member      574 /usr/include/netdb.h struct sockaddr *ai_addr; /* Socket address for socket. */
addrinfo::ai_addrlen member      573 /usr/include/netdb.h socklen_t ai_addrlen; /* Length of socket address. */
addrinfo::ai_canonname member      575 /usr/include/netdb.h char *ai_canonname; /* Canonical name for service location. */
addrinfo::ai_family member      570 /usr/include/netdb.h int ai_family; /* Protocol family for socket. */
addrinfo::ai_flags member      569 /usr/include/netdb.h int ai_flags; /* Input flags. */
addrinfo::ai_next member      576 /usr/include/netdb.h struct addrinfo *ai_next; /* Pointer to next in list. */
addrinfo::ai_protocol member      572 /usr/include/netdb.h int ai_protocol; /* Protocol for socket. */
addrinfo::ai_socktype member      571 /usr/include/netdb.h int ai_socktype; /* Socket type. */
ai_addr          member      574 /usr/include/netdb.h struct sockaddr *ai_addr; /* Socket address for socket. */
ai_addrlen       member      573 /usr/include/netdb.h socklen_t ai_addrlen; /* Length of socket address. */
ai_canonname     member      575 /usr/include/netdb.h char *ai_canonname; /* Canonical name for service location. */
ai_family        member      570 /usr/include/netdb.h int ai_family; /* Protocol family for socket. */
ai_flags         member      569 /usr/include/netdb.h int ai_flags; /* Input flags. */
ai_next          member      576 /usr/include/netdb.h struct addrinfo *ai_next; /* Pointer to next in list. */
ai_protocol      member      572 /usr/include/netdb.h int ai_protocol; /* Protocol for socket. */
ai_socktype      member      571 /usr/include/netdb.h int ai_socktype; /* Socket type. */
ar_name          member      583 /usr/include/netdb.h const char *ar_name; /* Name to look up. */
ar_request       member      585 /usr/include/netdb.h const struct addrinfo *ar_request; /* Additional request specification. */
ar_result        member      586 /usr/include/netdb.h struct addrinfo *ar_result; /* Pointer to result. */
ar_service       member      584 /usr/include/netdb.h const char *ar_service; /* Service name. */
endhostent       prototype   123 /usr/include/netdb.h extern void endhostent (void);
endnetent        prototype   204 /usr/include/netdb.h extern void endnetent (void);
endnetgrent      prototype   403 /usr/include/netdb.h extern void endnetgrent (void);
endprotoent      prototype   344 /usr/include/netdb.h extern void endprotoent (void);
endservent       prototype   276 /usr/include/netdb.h extern void endservent (void);
freeaddrinfo     prototype   668 /usr/include/netdb.h extern void freeaddrinfo (struct addrinfo *__ai) __THROW;
gai_cancel       prototype   710 /usr/include/netdb.h extern int gai_cancel (struct gaicb *__gaicbp) __THROW;
gai_error        prototype   707 /usr/include/netdb.h extern int gai_error (struct gaicb *__req) __THROW;
gai_strerror     prototype   671 /usr/include/netdb.h extern const char *gai_strerror (int __ecode) __THROW;
gai_suspend      prototype   703 /usr/include/netdb.h extern int gai_suspend (const struct gaicb *const __list[], int __ent,
gaicb            struct      581 /usr/include/netdb.h struct gaicb
gaicb::__glibc_reserved member      589 /usr/include/netdb.h int __glibc_reserved[5];
gaicb::__return  member      588 /usr/include/netdb.h int __return;
gaicb::ar_name   member      583 /usr/include/netdb.h const char *ar_name; /* Name to look up. */
gaicb::ar_request member      585 /usr/include/netdb.h const struct addrinfo *ar_request; /* Additional request specification. */
gaicb::ar_result member      586 /usr/include/netdb.h struct addrinfo *ar_result; /* Pointer to result. */
gaicb::ar_service member      584 /usr/include/netdb.h const char *ar_service; /* Service name. */
getaddrinfo      prototype   662 /usr/include/netdb.h extern int getaddrinfo (const char *__restrict __name,
getaddrinfo_a    prototype   692 /usr/include/netdb.h extern int getaddrinfo_a (int __mode, struct gaicb *__list[__restrict_arr],
gethostbyaddr    prototype   137 /usr/include/netdb.h extern struct hostent *gethostbyaddr (const void *__addr, __socklen_t __len,
gethostbyaddr_r  prototype   172 /usr/include/netdb.h extern int gethostbyaddr_r (const void *__restrict __addr, __socklen_t __len,
gethostbyname    prototype   144 /usr/include/netdb.h extern struct hostent *gethostbyname (const char *__name);
gethostbyname2   prototype   155 /usr/include/netdb.h extern struct hostent *gethostbyname2 (const char *__name, int __af);
gethostbyname2_r prototype   185 /usr/include/netdb.h extern int gethostbyname2_r (const char *__restrict __name, int __af,
gethostbyname_r  prototype   179 /usr/include/netdb.h extern int gethostbyname_r (const char *__restrict __name,
gethostent       prototype   130 /usr/include/netdb.h extern struct hostent *gethostent (void);
gethostent_r     prototype   167 /usr/include/netdb.h extern int gethostent_r (struct hostent *__restrict __result_buf,
getnameinfo      prototype   677 /usr/include/netdb.h extern int getnameinfo (const struct sockaddr *__restrict __sa,
getnetbyaddr     prototype   218 /usr/include/netdb.h extern struct netent *getnetbyaddr (uint32_t __net, int __type);
getnetbyaddr_r   prototype   242 /usr/include/netdb.h extern int getnetbyaddr_r (uint32_t __net, int __type,
getnetbyname     prototype   224 /usr/include/netdb.h extern struct netent *getnetbyname (const char *__name);
getnetbyname_r   prototype   248 /usr/include/netdb.h extern int getnetbyname_r (const char *__restrict __name,
getnetent        prototype   211 /usr/include/netdb.h extern struct netent *getnetent (void);
getnetent_r      prototype   237 /usr/include/netdb.h extern int getnetent_r (struct netent *__restrict __result_buf,
getnetgrent      prototype   412 /usr/include/netdb.h extern int getnetgrent (char **__restrict __hostp,
getnetgrent_r    prototype   432 /usr/include/netdb.h extern int getnetgrent_r (char **__restrict __hostp,
getprotobyname   prototype   357 /usr/include/netdb.h extern struct protoent *getprotobyname (const char *__name);
getprotobyname_r prototype   378 /usr/include/netdb.h extern int getprotobyname_r (const char *__restrict __name,
getprotobynumber prototype   363 /usr/include/netdb.h extern struct protoent *getprotobynumber (int __proto);
getprotobynumber_r prototype   383 /usr/include/netdb.h extern int getprotobynumber_r (int __proto,
getprotoent      prototype   351 /usr/include/netdb.h extern struct protoent *getprotoent (void);
getprotoent_r    prototype   374 /usr/include/netdb.h extern int getprotoent_r (struct protoent *__restrict __result_buf,
getservbyname    prototype   290 /usr/include/netdb.h extern struct servent *getservbyname (const char *__name, const char *__proto);
getservbyname_r  prototype   312 /usr/include/netdb.h extern int getservbyname_r (const char *__restrict __name,
getservbyport    prototype   297 /usr/include/netdb.h extern struct servent *getservbyport (int __port, const char *__proto);
getservbyport_r  prototype   318 /usr/include/netdb.h extern int getservbyport_r (int __port, const char *__restrict __proto,
getservent       prototype   283 /usr/include/netdb.h extern struct servent *getservent (void);
getservent_r     prototype   308 /usr/include/netdb.h extern int getservent_r (struct servent *__restrict __result_buf,
h_addr           macro       108 /usr/include/netdb.h # define h_addr h_addr_list[0] /* Address, for backward compatibility.*/
h_addr_list      member      106 /usr/include/netdb.h char **h_addr_list; /* List of addresses from name server. */
h_addrtype       member      104 /usr/include/netdb.h int h_addrtype; /* Host address type. */
h_aliases        member      103 /usr/include/netdb.h char **h_aliases; /* Alias list. */
h_errno          macro        58 /usr/include/netdb.h # define h_errno (*__h_errno_location ())
h_length         member      105 /usr/include/netdb.h int h_length; /* Length of address. */
h_name           member      102 /usr/include/netdb.h char *h_name; /* Official name of host. */
herror           prototype    92 /usr/include/netdb.h extern void herror (const char *__str) __THROW;
hostent          struct      100 /usr/include/netdb.h struct hostent
hostent::h_addr_list member      106 /usr/include/netdb.h char **h_addr_list; /* List of addresses from name server. */
hostent::h_addrtype member      104 /usr/include/netdb.h int h_addrtype; /* Host address type. */
hostent::h_aliases member      103 /usr/include/netdb.h char **h_aliases; /* Alias list. */
hostent::h_length member      105 /usr/include/netdb.h int h_length; /* Length of address. */
hostent::h_name  member      102 /usr/include/netdb.h char *h_name; /* Official name of host. */
hstrerror        prototype    95 /usr/include/netdb.h extern const char *hstrerror (int __err_num) __THROW;
innetgr          prototype   423 /usr/include/netdb.h extern int innetgr (const char *__netgroup, const char *__host,
iruserok         prototype   528 /usr/include/netdb.h extern int iruserok (uint32_t __raddr, int __suser,
iruserok_af      prototype   539 /usr/include/netdb.h extern int iruserok_af (const void *__raddr, int __suser,
p_aliases        member      329 /usr/include/netdb.h char **p_aliases; /* Alias list. */
p_name           member      328 /usr/include/netdb.h char *p_name; /* Official protocol name. */
p_proto          member      330 /usr/include/netdb.h int p_proto; /* Protocol number. */
protoent         struct      326 /usr/include/netdb.h struct protoent
protoent::p_aliases member      329 /usr/include/netdb.h char **p_aliases; /* Alias list. */
protoent::p_name member      328 /usr/include/netdb.h char *p_name; /* Official protocol name. */
protoent::p_proto member      330 /usr/include/netdb.h int p_proto; /* Protocol number. */
rcmd             prototype   451 /usr/include/netdb.h extern int rcmd (char **__restrict __ahost, unsigned short int __rport,
rcmd_af          prototype   463 /usr/include/netdb.h extern int rcmd_af (char **__restrict __ahost, unsigned short int __rport,
rexec            prototype   479 /usr/include/netdb.h extern int rexec (char **__restrict __ahost, int __rport,
rexec_af         prototype   491 /usr/include/netdb.h extern int rexec_af (char **__restrict __ahost, int __rport,
rresvport        prototype   551 /usr/include/netdb.h extern int rresvport (int *__alport);
rresvport_af     prototype   560 /usr/include/netdb.h extern int rresvport_af (int *__alport, sa_family_t __af);
ruserok          prototype   505 /usr/include/netdb.h extern int ruserok (const char *__rhost, int __suser,
ruserok_af       prototype   515 /usr/include/netdb.h extern int ruserok_af (const char *__rhost, int __suser,
s_aliases        member      260 /usr/include/netdb.h char **s_aliases; /* Alias list. */
s_name           member      259 /usr/include/netdb.h char *s_name; /* Official service name. */
s_port           member      261 /usr/include/netdb.h int s_port; /* Port number. */
s_proto          member      262 /usr/include/netdb.h char *s_proto; /* Protocol to use. */
servent          struct      257 /usr/include/netdb.h struct servent
servent::s_aliases member      260 /usr/include/netdb.h char **s_aliases; /* Alias list. */
servent::s_name  member      259 /usr/include/netdb.h char *s_name; /* Official service name. */
servent::s_port  member      261 /usr/include/netdb.h int s_port; /* Port number. */
servent::s_proto member      262 /usr/include/netdb.h char *s_proto; /* Protocol to use. */
sethostent       prototype   117 /usr/include/netdb.h extern void sethostent (int __stay_open);
setnetent        prototype   198 /usr/include/netdb.h extern void setnetent (int __stay_open);
setnetgrent      prototype   395 /usr/include/netdb.h extern int setnetgrent (const char *__netgroup);
setprotoent      prototype   338 /usr/include/netdb.h extern void setprotoent (int __stay_open);
setservent       prototype   270 /usr/include/netdb.h extern void setservent (int __stay_open);
