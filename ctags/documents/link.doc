ElfW             macro        30 /usr/include/link.h #define ElfW(type) _ElfW (Elf, __ELF_NATIVE_CLASS, type)
LAV_CURRENT      macro        99 /usr/include/link.h #define LAV_CURRENT 1
LA_ACT_ADD       enumerator  105 /usr/include/link.h LA_ACT_ADD, /* New object will be added. */
LA_ACT_CONSISTENT enumerator  104 /usr/include/link.h LA_ACT_CONSISTENT, /* Link map consistent again. */
LA_ACT_DELETE    enumerator  106 /usr/include/link.h LA_ACT_DELETE /* Objects will be removed. */
LA_FLG_BINDFROM  enumerator  124 /usr/include/link.h LA_FLG_BINDFROM = 0x02 /* Audit symbols bound from this object. */
LA_FLG_BINDTO    enumerator  123 /usr/include/link.h LA_FLG_BINDTO = 0x01, /* Audit symbols bound to this object. */
LA_SER_CONFIG    enumerator  115 /usr/include/link.h LA_SER_CONFIG = 0x08, /* Found through ldconfig. */
LA_SER_DEFAULT   enumerator  116 /usr/include/link.h LA_SER_DEFAULT = 0x40, /* Default directory. */
LA_SER_LIBPATH   enumerator  113 /usr/include/link.h LA_SER_LIBPATH = 0x02, /* Directory from LD_LIBRARY_PATH. */
LA_SER_ORIG      enumerator  112 /usr/include/link.h LA_SER_ORIG = 0x01, /* Original name. */
LA_SER_RUNPATH   enumerator  114 /usr/include/link.h LA_SER_RUNPATH = 0x04, /* Directory from RPATH/RUNPATH. */
LA_SER_SECURE    enumerator  117 /usr/include/link.h LA_SER_SECURE = 0x80 /* Unused. */
LA_SYMB_ALTVALUE enumerator  134 /usr/include/link.h LA_SYMB_ALTVALUE = 0x10 /* Value has been changed by a previous
LA_SYMB_DLSYM    enumerator  133 /usr/include/link.h LA_SYMB_DLSYM = 0x08, /* Binding due to dlsym call. */
LA_SYMB_NOPLTENTER enumerator  130 /usr/include/link.h LA_SYMB_NOPLTENTER = 0x01, /* la_pltenter will not be called. */
LA_SYMB_NOPLTEXIT enumerator  131 /usr/include/link.h LA_SYMB_NOPLTEXIT = 0x02, /* la_pltexit will not be called. */
LA_SYMB_STRUCTCALL enumerator  132 /usr/include/link.h LA_SYMB_STRUCTCALL = 0x04, /* Return value is a structure. */
RT_ADD           enumerator   59 /usr/include/link.h RT_ADD, /* Beginning to add a new object. */
RT_CONSISTENT    enumerator   58 /usr/include/link.h RT_CONSISTENT, /* Mapping change is complete. */
RT_DELETE        enumerator   60 /usr/include/link.h RT_DELETE /* Beginning to remove an object mapping. */
_ElfW            macro        31 /usr/include/link.h #define _ElfW(e,w,t) _ElfW_1 (e, w, _##t)
_ElfW_1          macro        32 /usr/include/link.h #define _ElfW_1(e,w,t) e##w##t
_LINK_H          macro        21 /usr/include/link.h #define _LINK_H 1
_r_debug         externvar    67 /usr/include/link.h extern struct r_debug _r_debug;
dl_iterate_phdr  prototype   167 /usr/include/link.h extern int dl_iterate_phdr (int (*__callback) (struct dl_phdr_info *,
dl_phdr_info     struct      138 /usr/include/link.h struct dl_phdr_info
dl_phdr_info::dlpi_addr member      140 /usr/include/link.h ElfW(Addr) dlpi_addr;
dl_phdr_info::dlpi_adds member      151 /usr/include/link.h __extension__ unsigned long long int dlpi_adds;
dl_phdr_info::dlpi_name member      141 /usr/include/link.h const char *dlpi_name;
dl_phdr_info::dlpi_phdr member      142 /usr/include/link.h const ElfW(Phdr) *dlpi_phdr;
dl_phdr_info::dlpi_phnum member      143 /usr/include/link.h ElfW(Half) dlpi_phnum;
dl_phdr_info::dlpi_subs member      153 /usr/include/link.h __extension__ unsigned long long int dlpi_subs;
dl_phdr_info::dlpi_tls_data member      162 /usr/include/link.h void *dlpi_tls_data;
dl_phdr_info::dlpi_tls_modid member      157 /usr/include/link.h size_t dlpi_tls_modid;
dlpi_addr        member      140 /usr/include/link.h ElfW(Addr) dlpi_addr;
dlpi_adds        member      151 /usr/include/link.h __extension__ unsigned long long int dlpi_adds;
dlpi_name        member      141 /usr/include/link.h const char *dlpi_name;
dlpi_phdr        member      142 /usr/include/link.h const ElfW(Phdr) *dlpi_phdr;
dlpi_phnum       member      143 /usr/include/link.h ElfW(Half) dlpi_phnum;
dlpi_subs        member      153 /usr/include/link.h __extension__ unsigned long long int dlpi_subs;
dlpi_tls_data    member      162 /usr/include/link.h void *dlpi_tls_data;
dlpi_tls_modid   member      157 /usr/include/link.h size_t dlpi_tls_modid;
l_addr           member       89 /usr/include/link.h ElfW(Addr) l_addr; /* Difference between the address in the ELF
l_ld             member       92 /usr/include/link.h ElfW(Dyn) *l_ld; /* Dynamic section of the shared object. */
l_name           member       91 /usr/include/link.h char *l_name; /* Absolute file name object was found in. */
l_next           member       93 /usr/include/link.h struct link_map *l_next, *l_prev; /* Chain of loaded objects. */
l_prev           member       93 /usr/include/link.h struct link_map *l_next, *l_prev; /* Chain of loaded objects. */
la_activity      prototype   176 /usr/include/link.h extern void la_activity (uintptr_t *__cookie, unsigned int __flag);
la_objclose      prototype   188 /usr/include/link.h extern unsigned int la_objclose (uintptr_t *__cookie);
la_objopen       prototype   179 /usr/include/link.h extern unsigned int la_objopen (struct link_map *__map, Lmid_t __lmid,
la_objsearch     prototype   177 /usr/include/link.h extern char *la_objsearch (const char *__name, uintptr_t *__cookie,
la_preinit       prototype   181 /usr/include/link.h extern void la_preinit (uintptr_t *__cookie);
la_symbind32     prototype   182 /usr/include/link.h extern uintptr_t la_symbind32 (Elf32_Sym *__sym, unsigned int __ndx,
la_symbind64     prototype   185 /usr/include/link.h extern uintptr_t la_symbind64 (Elf64_Sym *__sym, unsigned int __ndx,
la_version       prototype   175 /usr/include/link.h extern unsigned int la_version (unsigned int __version);
link_map         struct       84 /usr/include/link.h struct link_map
link_map::l_addr member       89 /usr/include/link.h ElfW(Addr) l_addr; /* Difference between the address in the ELF
link_map::l_ld   member       92 /usr/include/link.h ElfW(Dyn) *l_ld; /* Dynamic section of the shared object. */
link_map::l_name member       91 /usr/include/link.h char *l_name; /* Absolute file name object was found in. */
link_map::l_next member       93 /usr/include/link.h struct link_map *l_next, *l_prev; /* Chain of loaded objects. */
link_map::l_prev member       93 /usr/include/link.h struct link_map *l_next, *l_prev; /* Chain of loaded objects. */
r_brk            member       53 /usr/include/link.h ElfW(Addr) r_brk;
r_debug          struct       42 /usr/include/link.h struct r_debug
r_debug::RT_ADD  enumerator   59 /usr/include/link.h RT_ADD, /* Beginning to add a new object. */
r_debug::RT_CONSISTENT enumerator   58 /usr/include/link.h RT_CONSISTENT, /* Mapping change is complete. */
r_debug::RT_DELETE enumerator   60 /usr/include/link.h RT_DELETE /* Beginning to remove an object mapping. */
r_debug::r_brk   member       53 /usr/include/link.h ElfW(Addr) r_brk;
r_debug::r_ldbase member       63 /usr/include/link.h ElfW(Addr) r_ldbase; /* Base address the linker is loaded at. */
r_debug::r_map   member       46 /usr/include/link.h struct link_map *r_map; /* Head of the chain of loaded objects. */
r_debug::r_state member       61 /usr/include/link.h } r_state;
r_debug::r_version member       44 /usr/include/link.h int r_version; /* Version number for this protocol. */
r_ldbase         member       63 /usr/include/link.h ElfW(Addr) r_ldbase; /* Base address the linker is loaded at. */
r_map            member       46 /usr/include/link.h struct link_map *r_map; /* Head of the chain of loaded objects. */
r_state          member       61 /usr/include/link.h } r_state;
r_version        member       44 /usr/include/link.h int r_version; /* Version number for this protocol. */
